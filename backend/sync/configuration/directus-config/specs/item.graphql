type Query {
  canteens_feedbacks_labels(filter: canteens_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteens_feedbacks_labels!]!
  canteens_feedbacks_labels_by_id(id: ID!, version: String): canteens_feedbacks_labels
  canteens_feedbacks_labels_aggregated(groupBy: [String], filter: canteens_feedbacks_labels_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [canteens_feedbacks_labels_aggregated!]!
  canteens_feedbacks_labels_by_version(version: String!, id: ID!): version_canteens_feedbacks_labels
  canteen_food_feedback_report_schedules(filter: canteen_food_feedback_report_schedules_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteen_food_feedback_report_schedules!]!
  canteen_food_feedback_report_schedules_by_id(id: ID!, version: String): canteen_food_feedback_report_schedules
  canteen_food_feedback_report_schedules_aggregated(groupBy: [String], filter: canteen_food_feedback_report_schedules_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [canteen_food_feedback_report_schedules_aggregated!]!
  canteen_food_feedback_report_schedules_by_version(version: String!, id: ID!): version_canteen_food_feedback_report_schedules
  washingmachines(filter: washingmachines_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [washingmachines!]!
  washingmachines_by_id(id: ID!, version: String): washingmachines
  washingmachines_aggregated(groupBy: [String], filter: washingmachines_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [washingmachines_aggregated!]!
  washingmachines_by_version(version: String!, id: ID!): version_washingmachines
  foods_feedbacks_foods_feedbacks_labels(filter: foods_feedbacks_foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks_foods_feedbacks_labels!]!
  foods_feedbacks_foods_feedbacks_labels_by_id(id: ID!, version: String): foods_feedbacks_foods_feedbacks_labels
  foods_feedbacks_foods_feedbacks_labels_aggregated(groupBy: [String], filter: foods_feedbacks_foods_feedbacks_labels_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_feedbacks_foods_feedbacks_labels_aggregated!]!
  foods_feedbacks_foods_feedbacks_labels_by_version(version: String!, id: ID!): version_foods_feedbacks_foods_feedbacks_labels
  canteens_feedbacks_labels_translations(filter: canteens_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteens_feedbacks_labels_translations!]!
  canteens_feedbacks_labels_translations_by_id(id: ID!, version: String): canteens_feedbacks_labels_translations
  canteens_feedbacks_labels_translations_aggregated(groupBy: [String], filter: canteens_feedbacks_labels_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [canteens_feedbacks_labels_translations_aggregated!]!
  canteens_feedbacks_labels_translations_by_version(version: String!, id: ID!): version_canteens_feedbacks_labels_translations
  washingmachines_jobs(filter: washingmachines_jobs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [washingmachines_jobs!]!
  washingmachines_jobs_by_id(id: ID!, version: String): washingmachines_jobs
  washingmachines_jobs_aggregated(groupBy: [String], filter: washingmachines_jobs_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [washingmachines_jobs_aggregated!]!
  washingmachines_jobs_by_version(version: String!, id: ID!): version_washingmachines_jobs
  cashregisters_transactions(filter: cashregisters_transactions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [cashregisters_transactions!]!
  cashregisters_transactions_by_id(id: ID!, version: String): cashregisters_transactions
  cashregisters_transactions_aggregated(groupBy: [String], filter: cashregisters_transactions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [cashregisters_transactions_aggregated!]!
  cashregisters_transactions_by_version(version: String!, id: ID!): version_cashregisters_transactions
  canteens_foodservice_hours_during_semester_break(filter: canteens_foodservice_hours_during_semester_break_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteens_foodservice_hours_during_semester_break!]!
  canteens_foodservice_hours_during_semester_break_by_id(id: ID!, version: String): canteens_foodservice_hours_during_semester_break
  canteens_foodservice_hours_during_semester_break_aggregated(groupBy: [String], filter: canteens_foodservice_hours_during_semester_break_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [canteens_foodservice_hours_during_semester_break_aggregated!]!
  canteens_foodservice_hours_during_semester_break_by_version(version: String!, id: ID!): version_canteens_foodservice_hours_during_semester_break
  markings(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings!]!
  markings_by_id(id: ID!, version: String): markings
  markings_aggregated(groupBy: [String], filter: markings_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [markings_aggregated!]!
  markings_by_version(version: String!, id: ID!): version_markings
  mails(filter: mails_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [mails!]!
  mails_by_id(id: ID!, version: String): mails
  mails_aggregated(groupBy: [String], filter: mails_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [mails_aggregated!]!
  mails_by_version(version: String!, id: ID!): version_mails
  app_settings(version: String): app_settings
  app_settings_by_version(version: String!): version_app_settings
  apartments(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [apartments!]!
  apartments_by_id(id: ID!, version: String): apartments
  apartments_aggregated(groupBy: [String], filter: apartments_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [apartments_aggregated!]!
  apartments_by_version(version: String!, id: ID!): version_apartments
  app_feedbacks(filter: app_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_feedbacks!]!
  app_feedbacks_by_id(id: ID!, version: String): app_feedbacks
  app_feedbacks_aggregated(groupBy: [String], filter: app_feedbacks_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [app_feedbacks_aggregated!]!
  app_feedbacks_by_version(version: String!, id: ID!): version_app_feedbacks
  buildings_businesshours(filter: buildings_businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [buildings_businesshours!]!
  buildings_businesshours_by_id(id: ID!, version: String): buildings_businesshours
  buildings_businesshours_aggregated(groupBy: [String], filter: buildings_businesshours_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [buildings_businesshours_aggregated!]!
  buildings_businesshours_by_version(version: String!, id: ID!): version_buildings_businesshours
  auto_translation_settings(version: String): auto_translation_settings
  auto_translation_settings_by_version(version: String!): version_auto_translation_settings
  app_settings_balance_translations(filter: app_settings_balance_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_settings_balance_translations!]!
  app_settings_balance_translations_by_id(id: ID!, version: String): app_settings_balance_translations
  app_settings_balance_translations_aggregated(groupBy: [String], filter: app_settings_balance_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [app_settings_balance_translations_aggregated!]!
  app_settings_balance_translations_by_version(version: String!, id: ID!): version_app_settings_balance_translations
  canteens(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteens!]!
  canteens_by_id(id: ID!, version: String): canteens
  canteens_aggregated(groupBy: [String], filter: canteens_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [canteens_aggregated!]!
  canteens_by_version(version: String!, id: ID!): version_canteens
  canteen_food_feedback_report_schedules_report_recipients(filter: canteen_food_feedback_report_schedules_report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteen_food_feedback_report_schedules_report_recipients!]!
  canteen_food_feedback_report_schedules_report_recipients_by_id(id: ID!, version: String): canteen_food_feedback_report_schedules_report_recipients
  canteen_food_feedback_report_schedules_report_recipients_aggregated(groupBy: [String], filter: canteen_food_feedback_report_schedules_report_recipients_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [canteen_food_feedback_report_schedules_report_recipients_aggregated!]!
  canteen_food_feedback_report_schedules_report_recipients_by_version(version: String!, id: ID!): version_canteen_food_feedback_report_schedules_report_recipients
  collections_dates_last_update(filter: collections_dates_last_update_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collections_dates_last_update!]!
  collections_dates_last_update_by_id(id: ID!, version: String): collections_dates_last_update
  collections_dates_last_update_aggregated(groupBy: [String], filter: collections_dates_last_update_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [collections_dates_last_update_aggregated!]!
  collections_dates_last_update_by_version(version: String!, id: ID!): version_collections_dates_last_update
  buildings(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [buildings!]!
  buildings_by_id(id: ID!, version: String): buildings
  buildings_aggregated(groupBy: [String], filter: buildings_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [buildings_aggregated!]!
  buildings_by_version(version: String!, id: ID!): version_buildings
  app_settings_housing_translations(filter: app_settings_housing_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_settings_housing_translations!]!
  app_settings_housing_translations_by_id(id: ID!, version: String): app_settings_housing_translations
  app_settings_housing_translations_aggregated(groupBy: [String], filter: app_settings_housing_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [app_settings_housing_translations_aggregated!]!
  app_settings_housing_translations_by_version(version: String!, id: ID!): version_app_settings_housing_translations
  buildings_translations(filter: buildings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [buildings_translations!]!
  buildings_translations_by_id(id: ID!, version: String): buildings_translations
  buildings_translations_aggregated(groupBy: [String], filter: buildings_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [buildings_translations_aggregated!]!
  buildings_translations_by_version(version: String!, id: ID!): version_buildings_translations
  canteens_foodservice_hours(filter: canteens_foodservice_hours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteens_foodservice_hours!]!
  canteens_foodservice_hours_by_id(id: ID!, version: String): canteens_foodservice_hours
  canteens_foodservice_hours_aggregated(groupBy: [String], filter: canteens_foodservice_hours_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [canteens_foodservice_hours_aggregated!]!
  canteens_foodservice_hours_by_version(version: String!, id: ID!): version_canteens_foodservice_hours
  cashregisters(filter: cashregisters_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [cashregisters!]!
  cashregisters_by_id(id: ID!, version: String): cashregisters
  cashregisters_aggregated(groupBy: [String], filter: cashregisters_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [cashregisters_aggregated!]!
  cashregisters_by_version(version: String!, id: ID!): version_cashregisters
  devices(filter: devices_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [devices!]!
  devices_by_id(id: ID!, version: String): devices
  devices_aggregated(groupBy: [String], filter: devices_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [devices_aggregated!]!
  devices_by_version(version: String!, id: ID!): version_devices
  directus_sync_id_map(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_sync_id_map!]!
  directus_sync_id_map_by_id(id: ID!, version: String): directus_sync_id_map
  directus_sync_id_map_aggregated(groupBy: [String], filter: directus_sync_id_map_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_sync_id_map_aggregated!]!
  directus_sync_id_map_by_version(version: String!, id: ID!): version_directus_sync_id_map
  foodoffers_markings(filter: foodoffers_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foodoffers_markings!]!
  foodoffers_markings_by_id(id: ID!, version: String): foodoffers_markings
  foodoffers_markings_aggregated(groupBy: [String], filter: foodoffers_markings_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foodoffers_markings_aggregated!]!
  foodoffers_markings_by_version(version: String!, id: ID!): version_foodoffers_markings
  foods_feedbacks_labels(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks_labels!]!
  foods_feedbacks_labels_by_id(id: ID!, version: String): foods_feedbacks_labels
  foods_feedbacks_labels_aggregated(groupBy: [String], filter: foods_feedbacks_labels_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_feedbacks_labels_aggregated!]!
  foods_feedbacks_labels_by_version(version: String!, id: ID!): version_foods_feedbacks_labels
  foods_feedbacks_labels_translations(filter: foods_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks_labels_translations!]!
  foods_feedbacks_labels_translations_by_id(id: ID!, version: String): foods_feedbacks_labels_translations
  foods_feedbacks_labels_translations_aggregated(groupBy: [String], filter: foods_feedbacks_labels_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_feedbacks_labels_translations_aggregated!]!
  foods_feedbacks_labels_translations_by_version(version: String!, id: ID!): version_foods_feedbacks_labels_translations
  foods_markings(filter: foods_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_markings!]!
  foods_markings_by_id(id: ID!, version: String): foods_markings
  foods_markings_aggregated(groupBy: [String], filter: foods_markings_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_markings_aggregated!]!
  foods_markings_by_version(version: String!, id: ID!): version_foods_markings
  markings_exclusions(filter: markings_exclusions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_exclusions!]!
  markings_exclusions_by_id(id: ID!, version: String): markings_exclusions
  markings_exclusions_aggregated(groupBy: [String], filter: markings_exclusions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [markings_exclusions_aggregated!]!
  markings_exclusions_by_version(version: String!, id: ID!): version_markings_exclusions
  foods(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods!]!
  foods_by_id(id: ID!, version: String): foods
  foods_aggregated(groupBy: [String], filter: foods_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_aggregated!]!
  foods_by_version(version: String!, id: ID!): version_foods
  foods_feedbacks(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks!]!
  foods_feedbacks_by_id(id: ID!, version: String): foods_feedbacks
  foods_feedbacks_aggregated(groupBy: [String], filter: foods_feedbacks_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_feedbacks_aggregated!]!
  foods_feedbacks_by_version(version: String!, id: ID!): version_foods_feedbacks
  markings_groups_translations(filter: markings_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_groups_translations!]!
  markings_groups_translations_by_id(id: ID!, version: String): markings_groups_translations
  markings_groups_translations_aggregated(groupBy: [String], filter: markings_groups_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [markings_groups_translations_aggregated!]!
  markings_groups_translations_by_version(version: String!, id: ID!): version_markings_groups_translations
  languages(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [languages!]!
  languages_by_id(id: ID!, version: String): languages
  languages_aggregated(groupBy: [String], filter: languages_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [languages_aggregated!]!
  languages_by_version(version: String!, id: ID!): version_languages
  foods_translations(filter: foods_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_translations!]!
  foods_translations_by_id(id: ID!, version: String): foods_translations
  foods_translations_aggregated(groupBy: [String], filter: foods_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_translations_aggregated!]!
  foods_translations_by_version(version: String!, id: ID!): version_foods_translations
  markings_groups(filter: markings_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_groups!]!
  markings_groups_by_id(id: ID!, version: String): markings_groups
  markings_groups_aggregated(groupBy: [String], filter: markings_groups_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [markings_groups_aggregated!]!
  markings_groups_by_version(version: String!, id: ID!): version_markings_groups
  news_translations(filter: news_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [news_translations!]!
  news_translations_by_id(id: ID!, version: String): news_translations
  news_translations_aggregated(groupBy: [String], filter: news_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [news_translations_aggregated!]!
  news_translations_by_version(version: String!, id: ID!): version_news_translations
  popup_events_canteens(filter: popup_events_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [popup_events_canteens!]!
  popup_events_canteens_by_id(id: ID!, version: String): popup_events_canteens
  popup_events_canteens_aggregated(groupBy: [String], filter: popup_events_canteens_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [popup_events_canteens_aggregated!]!
  popup_events_canteens_by_version(version: String!, id: ID!): version_popup_events_canteens
  popup_events_translations(filter: popup_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [popup_events_translations!]!
  popup_events_translations_by_id(id: ID!, version: String): popup_events_translations
  popup_events_translations_aggregated(groupBy: [String], filter: popup_events_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [popup_events_translations_aggregated!]!
  popup_events_translations_by_version(version: String!, id: ID!): version_popup_events_translations
  profiles_buildings_favorites(filter: profiles_buildings_favorites_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles_buildings_favorites!]!
  profiles_buildings_favorites_by_id(id: ID!, version: String): profiles_buildings_favorites
  profiles_buildings_favorites_aggregated(groupBy: [String], filter: profiles_buildings_favorites_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [profiles_buildings_favorites_aggregated!]!
  profiles_buildings_favorites_by_version(version: String!, id: ID!): version_profiles_buildings_favorites
  report_recipients(filter: report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [report_recipients!]!
  report_recipients_by_id(id: ID!, version: String): report_recipients
  report_recipients_aggregated(groupBy: [String], filter: report_recipients_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [report_recipients_aggregated!]!
  report_recipients_by_version(version: String!, id: ID!): version_report_recipients
  utilizations_entries(filter: utilizations_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [utilizations_entries!]!
  utilizations_entries_by_id(id: ID!, version: String): utilizations_entries
  utilizations_entries_aggregated(groupBy: [String], filter: utilizations_entries_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [utilizations_entries_aggregated!]!
  utilizations_entries_by_version(version: String!, id: ID!): version_utilizations_entries
  utilizations_groups(filter: utilizations_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [utilizations_groups!]!
  utilizations_groups_by_id(id: ID!, version: String): utilizations_groups
  utilizations_groups_aggregated(groupBy: [String], filter: utilizations_groups_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [utilizations_groups_aggregated!]!
  utilizations_groups_by_version(version: String!, id: ID!): version_utilizations_groups
  markings_translations(filter: markings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_translations!]!
  markings_translations_by_id(id: ID!, version: String): markings_translations
  markings_translations_aggregated(groupBy: [String], filter: markings_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [markings_translations_aggregated!]!
  markings_translations_by_version(version: String!, id: ID!): version_markings_translations
  wikis_directus_roles(filter: wikis_directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [wikis_directus_roles!]!
  wikis_directus_roles_by_id(id: ID!, version: String): wikis_directus_roles
  wikis_directus_roles_aggregated(groupBy: [String], filter: wikis_directus_roles_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [wikis_directus_roles_aggregated!]!
  wikis_directus_roles_by_version(version: String!, id: ID!): version_wikis_directus_roles
  profiles_markings(filter: profiles_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles_markings!]!
  profiles_markings_by_id(id: ID!, version: String): profiles_markings
  profiles_markings_aggregated(groupBy: [String], filter: profiles_markings_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [profiles_markings_aggregated!]!
  profiles_markings_by_version(version: String!, id: ID!): version_profiles_markings
  news(filter: news_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [news!]!
  news_by_id(id: ID!, version: String): news
  news_aggregated(groupBy: [String], filter: news_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [news_aggregated!]!
  news_by_version(version: String!, id: ID!): version_news
  wikis(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [wikis!]!
  wikis_by_id(id: ID!, version: String): wikis
  wikis_aggregated(groupBy: [String], filter: wikis_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [wikis_aggregated!]!
  wikis_by_version(version: String!, id: ID!): version_wikis
  profiles_buildings_last_opened(filter: profiles_buildings_last_opened_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles_buildings_last_opened!]!
  profiles_buildings_last_opened_by_id(id: ID!, version: String): profiles_buildings_last_opened
  profiles_buildings_last_opened_aggregated(groupBy: [String], filter: profiles_buildings_last_opened_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [profiles_buildings_last_opened_aggregated!]!
  profiles_buildings_last_opened_by_version(version: String!, id: ID!): version_profiles_buildings_last_opened
  push_notifications(filter: push_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [push_notifications!]!
  push_notifications_by_id(id: ID!, version: String): push_notifications
  push_notifications_aggregated(groupBy: [String], filter: push_notifications_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [push_notifications_aggregated!]!
  push_notifications_by_version(version: String!, id: ID!): version_push_notifications
  canteen_food_feedback_report_schedules_canteens(filter: canteen_food_feedback_report_schedules_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteen_food_feedback_report_schedules_canteens!]!
  canteen_food_feedback_report_schedules_canteens_by_id(id: ID!, version: String): canteen_food_feedback_report_schedules_canteens
  canteen_food_feedback_report_schedules_canteens_aggregated(groupBy: [String], filter: canteen_food_feedback_report_schedules_canteens_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [canteen_food_feedback_report_schedules_canteens_aggregated!]!
  canteen_food_feedback_report_schedules_canteens_by_version(version: String!, id: ID!): version_canteen_food_feedback_report_schedules_canteens
  wikis_translations(filter: wikis_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [wikis_translations!]!
  wikis_translations_by_id(id: ID!, version: String): wikis_translations
  wikis_translations_aggregated(groupBy: [String], filter: wikis_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [wikis_translations_aggregated!]!
  wikis_translations_by_version(version: String!, id: ID!): version_wikis_translations
  profiles(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles!]!
  profiles_by_id(id: ID!, version: String): profiles
  profiles_aggregated(groupBy: [String], filter: profiles_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [profiles_aggregated!]!
  profiles_by_version(version: String!, id: ID!): version_profiles
  canteens_feedbacks_labels_entries(filter: canteens_feedbacks_labels_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteens_feedbacks_labels_entries!]!
  canteens_feedbacks_labels_entries_by_id(id: ID!, version: String): canteens_feedbacks_labels_entries
  canteens_feedbacks_labels_entries_aggregated(groupBy: [String], filter: canteens_feedbacks_labels_entries_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [canteens_feedbacks_labels_entries_aggregated!]!
  canteens_feedbacks_labels_entries_by_version(version: String!, id: ID!): version_canteens_feedbacks_labels_entries
  foods_feedbacks_labels_entries(filter: foods_feedbacks_labels_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks_labels_entries!]!
  foods_feedbacks_labels_entries_by_id(id: ID!, version: String): foods_feedbacks_labels_entries
  foods_feedbacks_labels_entries_aggregated(groupBy: [String], filter: foods_feedbacks_labels_entries_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_feedbacks_labels_entries_aggregated!]!
  foods_feedbacks_labels_entries_by_version(version: String!, id: ID!): version_foods_feedbacks_labels_entries
  foodoffers_categories(filter: foodoffers_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foodoffers_categories!]!
  foodoffers_categories_by_id(id: ID!, version: String): foodoffers_categories
  foodoffers_categories_aggregated(groupBy: [String], filter: foodoffers_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foodoffers_categories_aggregated!]!
  foodoffers_categories_by_version(version: String!, id: ID!): version_foodoffers_categories
  foodoffers_categories_translations(filter: foodoffers_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foodoffers_categories_translations!]!
  foodoffers_categories_translations_by_id(id: ID!, version: String): foodoffers_categories_translations
  foodoffers_categories_translations_aggregated(groupBy: [String], filter: foodoffers_categories_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foodoffers_categories_translations_aggregated!]!
  foodoffers_categories_translations_by_version(version: String!, id: ID!): version_foodoffers_categories_translations
  foods_categories_translations(filter: foods_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_categories_translations!]!
  foods_categories_translations_by_id(id: ID!, version: String): foods_categories_translations
  foods_categories_translations_aggregated(groupBy: [String], filter: foods_categories_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_categories_translations_aggregated!]!
  foods_categories_translations_by_version(version: String!, id: ID!): version_foods_categories_translations
  foods_categories(filter: foods_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_categories!]!
  foods_categories_by_id(id: ID!, version: String): foods_categories
  foods_categories_aggregated(groupBy: [String], filter: foods_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_categories_aggregated!]!
  foods_categories_by_version(version: String!, id: ID!): version_foods_categories
  foodoffers(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foodoffers!]!
  foodoffers_by_id(id: ID!, version: String): foodoffers
  foodoffers_aggregated(groupBy: [String], filter: foodoffers_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foodoffers_aggregated!]!
  foodoffers_by_version(version: String!, id: ID!): version_foodoffers
  popup_events(filter: popup_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [popup_events!]!
  popup_events_by_id(id: ID!, version: String): popup_events
  popup_events_aggregated(groupBy: [String], filter: popup_events_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [popup_events_aggregated!]!
  popup_events_by_version(version: String!, id: ID!): version_popup_events
  foods_attributes_groups_translations(filter: foods_attributes_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_groups_translations!]!
  foods_attributes_groups_translations_by_id(id: ID!, version: String): foods_attributes_groups_translations
  foods_attributes_groups_translations_aggregated(groupBy: [String], filter: foods_attributes_groups_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_attributes_groups_translations_aggregated!]!
  foods_attributes_groups_translations_by_version(version: String!, id: ID!): version_foods_attributes_groups_translations
  foods_attributes_values(filter: foods_attributes_values_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_values!]!
  foods_attributes_values_by_id(id: ID!, version: String): foods_attributes_values
  foods_attributes_values_aggregated(groupBy: [String], filter: foods_attributes_values_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_attributes_values_aggregated!]!
  foods_attributes_values_by_version(version: String!, id: ID!): version_foods_attributes_values
  forms(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [forms!]!
  forms_by_id(id: ID!, version: String): forms
  forms_aggregated(groupBy: [String], filter: forms_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [forms_aggregated!]!
  forms_by_version(version: String!, id: ID!): version_forms
  form_fields_translations(filter: form_fields_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_fields_translations!]!
  form_fields_translations_by_id(id: ID!, version: String): form_fields_translations
  form_fields_translations_aggregated(groupBy: [String], filter: form_fields_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [form_fields_translations_aggregated!]!
  form_fields_translations_by_version(version: String!, id: ID!): version_form_fields_translations
  foods_attributes_translations(filter: foods_attributes_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_translations!]!
  foods_attributes_translations_by_id(id: ID!, version: String): foods_attributes_translations
  foods_attributes_translations_aggregated(groupBy: [String], filter: foods_attributes_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_attributes_translations_aggregated!]!
  foods_attributes_translations_by_version(version: String!, id: ID!): version_foods_attributes_translations
  form_answers_files(filter: form_answers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_answers_files!]!
  form_answers_files_by_id(id: ID!, version: String): form_answers_files
  form_answers_files_aggregated(groupBy: [String], filter: form_answers_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [form_answers_files_aggregated!]!
  form_answers_files_by_version(version: String!, id: ID!): version_form_answers_files
  businesshours(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [businesshours!]!
  businesshours_by_id(id: ID!, version: String): businesshours
  businesshours_aggregated(groupBy: [String], filter: businesshours_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [businesshours_aggregated!]!
  businesshours_by_version(version: String!, id: ID!): version_businesshours
  form_fields(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_fields!]!
  form_fields_by_id(id: ID!, version: String): form_fields
  form_fields_aggregated(groupBy: [String], filter: form_fields_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [form_fields_aggregated!]!
  form_fields_by_version(version: String!, id: ID!): version_form_fields
  foods_attributes(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes!]!
  foods_attributes_by_id(id: ID!, version: String): foods_attributes
  foods_attributes_aggregated(groupBy: [String], filter: foods_attributes_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_attributes_aggregated!]!
  foods_attributes_by_version(version: String!, id: ID!): version_foods_attributes
  businesshours_groups_translations(filter: businesshours_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [businesshours_groups_translations!]!
  businesshours_groups_translations_by_id(id: ID!, version: String): businesshours_groups_translations
  businesshours_groups_translations_aggregated(groupBy: [String], filter: businesshours_groups_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [businesshours_groups_translations_aggregated!]!
  businesshours_groups_translations_by_version(version: String!, id: ID!): version_businesshours_groups_translations
  businesshours_groups(filter: businesshours_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [businesshours_groups!]!
  businesshours_groups_by_id(id: ID!, version: String): businesshours_groups
  businesshours_groups_aggregated(groupBy: [String], filter: businesshours_groups_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [businesshours_groups_aggregated!]!
  businesshours_groups_by_version(version: String!, id: ID!): version_businesshours_groups
  form_answers(filter: form_answers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_answers!]!
  form_answers_by_id(id: ID!, version: String): form_answers
  form_answers_aggregated(groupBy: [String], filter: form_answers_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [form_answers_aggregated!]!
  form_answers_by_version(version: String!, id: ID!): version_form_answers
  foods_attributes_groups(filter: foods_attributes_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_groups!]!
  foods_attributes_groups_by_id(id: ID!, version: String): foods_attributes_groups
  foods_attributes_groups_aggregated(groupBy: [String], filter: foods_attributes_groups_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [foods_attributes_groups_aggregated!]!
  foods_attributes_groups_by_version(version: String!, id: ID!): version_foods_attributes_groups
  buildings_attributes(filter: buildings_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [buildings_attributes!]!
  buildings_attributes_by_id(id: ID!, version: String): buildings_attributes
  buildings_attributes_aggregated(groupBy: [String], filter: buildings_attributes_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [buildings_attributes_aggregated!]!
  buildings_attributes_by_version(version: String!, id: ID!): version_buildings_attributes
  form_submissions(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_submissions!]!
  form_submissions_by_id(id: ID!, version: String): form_submissions
  form_submissions_aggregated(groupBy: [String], filter: form_submissions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [form_submissions_aggregated!]!
  form_submissions_by_version(version: String!, id: ID!): version_form_submissions
  form_categories_translations(filter: form_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_categories_translations!]!
  form_categories_translations_by_id(id: ID!, version: String): form_categories_translations
  form_categories_translations_aggregated(groupBy: [String], filter: form_categories_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [form_categories_translations_aggregated!]!
  form_categories_translations_by_version(version: String!, id: ID!): version_form_categories_translations
  workflows_runs(filter: workflows_runs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [workflows_runs!]!
  workflows_runs_by_id(id: ID!, version: String): workflows_runs
  workflows_runs_aggregated(groupBy: [String], filter: workflows_runs_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [workflows_runs_aggregated!]!
  workflows_runs_by_version(version: String!, id: ID!): version_workflows_runs
  workflows(filter: workflows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [workflows!]!
  workflows_by_id(id: ID!, version: String): workflows
  workflows_aggregated(groupBy: [String], filter: workflows_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [workflows_aggregated!]!
  workflows_by_version(version: String!, id: ID!): version_workflows
  app_settings_login_screen_translations(filter: app_settings_login_screen_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_settings_login_screen_translations!]!
  app_settings_login_screen_translations_by_id(id: ID!, version: String): app_settings_login_screen_translations
  app_settings_login_screen_translations_aggregated(groupBy: [String], filter: app_settings_login_screen_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [app_settings_login_screen_translations_aggregated!]!
  app_settings_login_screen_translations_by_version(version: String!, id: ID!): version_app_settings_login_screen_translations
  form_categories(filter: form_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_categories!]!
  form_categories_by_id(id: ID!, version: String): form_categories
  form_categories_aggregated(groupBy: [String], filter: form_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [form_categories_aggregated!]!
  form_categories_by_version(version: String!, id: ID!): version_form_categories
  forms_translations(filter: forms_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [forms_translations!]!
  forms_translations_by_id(id: ID!, version: String): forms_translations
  forms_translations_aggregated(groupBy: [String], filter: forms_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [forms_translations_aggregated!]!
  forms_translations_by_version(version: String!, id: ID!): version_forms_translations
  app_elements_translations(filter: app_elements_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_elements_translations!]!
  app_elements_translations_by_id(id: ID!, version: String): app_elements_translations
  app_elements_translations_aggregated(groupBy: [String], filter: app_elements_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [app_elements_translations_aggregated!]!
  app_elements_translations_by_version(version: String!, id: ID!): version_app_elements_translations
  collectible_events_translations(filter: collectible_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectible_events_translations!]!
  collectible_events_translations_by_id(id: ID!, version: String): collectible_events_translations
  collectible_events_translations_aggregated(groupBy: [String], filter: collectible_events_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [collectible_events_translations_aggregated!]!
  collectible_events_translations_by_version(version: String!, id: ID!): version_collectible_events_translations
  form_extracts_form_fields(filter: form_extracts_form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_extracts_form_fields!]!
  form_extracts_form_fields_by_id(id: ID!, version: String): form_extracts_form_fields
  form_extracts_form_fields_aggregated(groupBy: [String], filter: form_extracts_form_fields_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [form_extracts_form_fields_aggregated!]!
  form_extracts_form_fields_by_version(version: String!, id: ID!): version_form_extracts_form_fields
  form_extracts(filter: form_extracts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_extracts!]!
  form_extracts_by_id(id: ID!, version: String): form_extracts
  form_extracts_aggregated(groupBy: [String], filter: form_extracts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [form_extracts_aggregated!]!
  form_extracts_by_version(version: String!, id: ID!): version_form_extracts
  mails_files(filter: mails_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [mails_files!]!
  mails_files_by_id(id: ID!, version: String): mails_files
  mails_files_aggregated(groupBy: [String], filter: mails_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [mails_files_aggregated!]!
  mails_files_by_version(version: String!, id: ID!): version_mails_files
  files_shares(filter: files_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [files_shares!]!
  files_shares_by_id(id: ID!, version: String): files_shares
  files_shares_aggregated(groupBy: [String], filter: files_shares_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [files_shares_aggregated!]!
  files_shares_by_version(version: String!, id: ID!): version_files_shares
  collectible_event_participants(filter: collectible_event_participants_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectible_event_participants!]!
  collectible_event_participants_by_id(id: ID!, version: String): collectible_event_participants
  collectible_event_participants_aggregated(groupBy: [String], filter: collectible_event_participants_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [collectible_event_participants_aggregated!]!
  collectible_event_participants_by_version(version: String!, id: ID!): version_collectible_event_participants
  collectible_events(filter: collectible_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectible_events!]!
  collectible_events_by_id(id: ID!, version: String): collectible_events
  collectible_events_aggregated(groupBy: [String], filter: collectible_events_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [collectible_events_aggregated!]!
  collectible_events_by_version(version: String!, id: ID!): version_collectible_events
  app_elements(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_elements!]!
  app_elements_by_id(id: ID!, version: String): app_elements
  app_elements_aggregated(groupBy: [String], filter: app_elements_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [app_elements_aggregated!]!
  app_elements_by_version(version: String!, id: ID!): version_app_elements
}

type Mutation {
  create_canteens_feedbacks_labels_items(filter: canteens_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_canteens_feedbacks_labels_input!]): [canteens_feedbacks_labels!]!
  create_canteens_feedbacks_labels_item(data: create_canteens_feedbacks_labels_input!): canteens_feedbacks_labels
  create_canteen_food_feedback_report_schedules_items(filter: canteen_food_feedback_report_schedules_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_canteen_food_feedback_report_schedules_input!]): [canteen_food_feedback_report_schedules!]!
  create_canteen_food_feedback_report_schedules_item(data: create_canteen_food_feedback_report_schedules_input!): canteen_food_feedback_report_schedules
  create_washingmachines_items(filter: washingmachines_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_washingmachines_input!]): [washingmachines!]!
  create_washingmachines_item(data: create_washingmachines_input!): washingmachines
  create_foods_feedbacks_foods_feedbacks_labels_items(filter: foods_feedbacks_foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_feedbacks_foods_feedbacks_labels_input!]): [foods_feedbacks_foods_feedbacks_labels!]!
  create_foods_feedbacks_foods_feedbacks_labels_item(data: create_foods_feedbacks_foods_feedbacks_labels_input!): foods_feedbacks_foods_feedbacks_labels
  create_canteens_feedbacks_labels_translations_items(filter: canteens_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_canteens_feedbacks_labels_translations_input!]): [canteens_feedbacks_labels_translations!]!
  create_canteens_feedbacks_labels_translations_item(data: create_canteens_feedbacks_labels_translations_input!): canteens_feedbacks_labels_translations
  create_washingmachines_jobs_items(filter: washingmachines_jobs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_washingmachines_jobs_input!]): [washingmachines_jobs!]!
  create_washingmachines_jobs_item(data: create_washingmachines_jobs_input!): washingmachines_jobs
  create_cashregisters_transactions_items(filter: cashregisters_transactions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_cashregisters_transactions_input!]): [cashregisters_transactions!]!
  create_cashregisters_transactions_item(data: create_cashregisters_transactions_input!): cashregisters_transactions
  create_canteens_foodservice_hours_during_semester_break_items(filter: canteens_foodservice_hours_during_semester_break_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_canteens_foodservice_hours_during_semester_break_input!]): [canteens_foodservice_hours_during_semester_break!]!
  create_canteens_foodservice_hours_during_semester_break_item(data: create_canteens_foodservice_hours_during_semester_break_input!): canteens_foodservice_hours_during_semester_break
  create_markings_items(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_markings_input!]): [markings!]!
  create_markings_item(data: create_markings_input!): markings
  create_mails_items(filter: mails_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_mails_input!]): [mails!]!
  create_mails_item(data: create_mails_input!): mails
  create_apartments_items(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_apartments_input!]): [apartments!]!
  create_apartments_item(data: create_apartments_input!): apartments
  create_app_feedbacks_items(filter: app_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_app_feedbacks_input!]): [app_feedbacks!]!
  create_app_feedbacks_item(data: create_app_feedbacks_input!): app_feedbacks
  create_buildings_businesshours_items(filter: buildings_businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_buildings_businesshours_input!]): [buildings_businesshours!]!
  create_buildings_businesshours_item(data: create_buildings_businesshours_input!): buildings_businesshours
  create_app_settings_balance_translations_items(filter: app_settings_balance_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_app_settings_balance_translations_input!]): [app_settings_balance_translations!]!
  create_app_settings_balance_translations_item(data: create_app_settings_balance_translations_input!): app_settings_balance_translations
  create_canteens_items(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_canteens_input!]): [canteens!]!
  create_canteens_item(data: create_canteens_input!): canteens
  create_canteen_food_feedback_report_schedules_report_recipients_items(filter: canteen_food_feedback_report_schedules_report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_canteen_food_feedback_report_schedules_report_recipients_input!]): [canteen_food_feedback_report_schedules_report_recipients!]!
  create_canteen_food_feedback_report_schedules_report_recipients_item(data: create_canteen_food_feedback_report_schedules_report_recipients_input!): canteen_food_feedback_report_schedules_report_recipients
  create_collections_dates_last_update_items(filter: collections_dates_last_update_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_collections_dates_last_update_input!]): [collections_dates_last_update!]!
  create_collections_dates_last_update_item(data: create_collections_dates_last_update_input!): collections_dates_last_update
  create_buildings_items(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_buildings_input!]): [buildings!]!
  create_buildings_item(data: create_buildings_input!): buildings
  create_app_settings_housing_translations_items(filter: app_settings_housing_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_app_settings_housing_translations_input!]): [app_settings_housing_translations!]!
  create_app_settings_housing_translations_item(data: create_app_settings_housing_translations_input!): app_settings_housing_translations
  create_buildings_translations_items(filter: buildings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_buildings_translations_input!]): [buildings_translations!]!
  create_buildings_translations_item(data: create_buildings_translations_input!): buildings_translations
  create_canteens_foodservice_hours_items(filter: canteens_foodservice_hours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_canteens_foodservice_hours_input!]): [canteens_foodservice_hours!]!
  create_canteens_foodservice_hours_item(data: create_canteens_foodservice_hours_input!): canteens_foodservice_hours
  create_cashregisters_items(filter: cashregisters_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_cashregisters_input!]): [cashregisters!]!
  create_cashregisters_item(data: create_cashregisters_input!): cashregisters
  create_devices_items(filter: devices_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_devices_input!]): [devices!]!
  create_devices_item(data: create_devices_input!): devices
  create_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  create_directus_sync_id_map_item(data: create_directus_sync_id_map_input!): directus_sync_id_map
  create_foodoffers_markings_items(filter: foodoffers_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foodoffers_markings_input!]): [foodoffers_markings!]!
  create_foodoffers_markings_item(data: create_foodoffers_markings_input!): foodoffers_markings
  create_foods_feedbacks_labels_items(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_feedbacks_labels_input!]): [foods_feedbacks_labels!]!
  create_foods_feedbacks_labels_item(data: create_foods_feedbacks_labels_input!): foods_feedbacks_labels
  create_foods_feedbacks_labels_translations_items(filter: foods_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_feedbacks_labels_translations_input!]): [foods_feedbacks_labels_translations!]!
  create_foods_feedbacks_labels_translations_item(data: create_foods_feedbacks_labels_translations_input!): foods_feedbacks_labels_translations
  create_foods_markings_items(filter: foods_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_markings_input!]): [foods_markings!]!
  create_foods_markings_item(data: create_foods_markings_input!): foods_markings
  create_markings_exclusions_items(filter: markings_exclusions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_markings_exclusions_input!]): [markings_exclusions!]!
  create_markings_exclusions_item(data: create_markings_exclusions_input!): markings_exclusions
  create_foods_items(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_input!]): [foods!]!
  create_foods_item(data: create_foods_input!): foods
  create_foods_feedbacks_items(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_feedbacks_input!]): [foods_feedbacks!]!
  create_foods_feedbacks_item(data: create_foods_feedbacks_input!): foods_feedbacks
  create_markings_groups_translations_items(filter: markings_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_markings_groups_translations_input!]): [markings_groups_translations!]!
  create_markings_groups_translations_item(data: create_markings_groups_translations_input!): markings_groups_translations
  create_languages_items(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_languages_input!]): [languages!]!
  create_languages_item(data: create_languages_input!): languages
  create_foods_translations_items(filter: foods_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_translations_input!]): [foods_translations!]!
  create_foods_translations_item(data: create_foods_translations_input!): foods_translations
  create_markings_groups_items(filter: markings_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_markings_groups_input!]): [markings_groups!]!
  create_markings_groups_item(data: create_markings_groups_input!): markings_groups
  create_news_translations_items(filter: news_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_news_translations_input!]): [news_translations!]!
  create_news_translations_item(data: create_news_translations_input!): news_translations
  create_popup_events_canteens_items(filter: popup_events_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_popup_events_canteens_input!]): [popup_events_canteens!]!
  create_popup_events_canteens_item(data: create_popup_events_canteens_input!): popup_events_canteens
  create_popup_events_translations_items(filter: popup_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_popup_events_translations_input!]): [popup_events_translations!]!
  create_popup_events_translations_item(data: create_popup_events_translations_input!): popup_events_translations
  create_profiles_buildings_favorites_items(filter: profiles_buildings_favorites_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_profiles_buildings_favorites_input!]): [profiles_buildings_favorites!]!
  create_profiles_buildings_favorites_item(data: create_profiles_buildings_favorites_input!): profiles_buildings_favorites
  create_report_recipients_items(filter: report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_report_recipients_input!]): [report_recipients!]!
  create_report_recipients_item(data: create_report_recipients_input!): report_recipients
  create_utilizations_entries_items(filter: utilizations_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_utilizations_entries_input!]): [utilizations_entries!]!
  create_utilizations_entries_item(data: create_utilizations_entries_input!): utilizations_entries
  create_utilizations_groups_items(filter: utilizations_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_utilizations_groups_input!]): [utilizations_groups!]!
  create_utilizations_groups_item(data: create_utilizations_groups_input!): utilizations_groups
  create_markings_translations_items(filter: markings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_markings_translations_input!]): [markings_translations!]!
  create_markings_translations_item(data: create_markings_translations_input!): markings_translations
  create_wikis_directus_roles_items(filter: wikis_directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_wikis_directus_roles_input!]): [wikis_directus_roles!]!
  create_wikis_directus_roles_item(data: create_wikis_directus_roles_input!): wikis_directus_roles
  create_profiles_markings_items(filter: profiles_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_profiles_markings_input!]): [profiles_markings!]!
  create_profiles_markings_item(data: create_profiles_markings_input!): profiles_markings
  create_news_items(filter: news_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_news_input!]): [news!]!
  create_news_item(data: create_news_input!): news
  create_wikis_items(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_wikis_input!]): [wikis!]!
  create_wikis_item(data: create_wikis_input!): wikis
  create_profiles_buildings_last_opened_items(filter: profiles_buildings_last_opened_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_profiles_buildings_last_opened_input!]): [profiles_buildings_last_opened!]!
  create_profiles_buildings_last_opened_item(data: create_profiles_buildings_last_opened_input!): profiles_buildings_last_opened
  create_push_notifications_items(filter: push_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_push_notifications_input!]): [push_notifications!]!
  create_push_notifications_item(data: create_push_notifications_input!): push_notifications
  create_canteen_food_feedback_report_schedules_canteens_items(filter: canteen_food_feedback_report_schedules_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_canteen_food_feedback_report_schedules_canteens_input!]): [canteen_food_feedback_report_schedules_canteens!]!
  create_canteen_food_feedback_report_schedules_canteens_item(data: create_canteen_food_feedback_report_schedules_canteens_input!): canteen_food_feedback_report_schedules_canteens
  create_wikis_translations_items(filter: wikis_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_wikis_translations_input!]): [wikis_translations!]!
  create_wikis_translations_item(data: create_wikis_translations_input!): wikis_translations
  create_profiles_items(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_profiles_input!]): [profiles!]!
  create_profiles_item(data: create_profiles_input!): profiles
  create_canteens_feedbacks_labels_entries_items(filter: canteens_feedbacks_labels_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_canteens_feedbacks_labels_entries_input!]): [canteens_feedbacks_labels_entries!]!
  create_canteens_feedbacks_labels_entries_item(data: create_canteens_feedbacks_labels_entries_input!): canteens_feedbacks_labels_entries
  create_foods_feedbacks_labels_entries_items(filter: foods_feedbacks_labels_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_feedbacks_labels_entries_input!]): [foods_feedbacks_labels_entries!]!
  create_foods_feedbacks_labels_entries_item(data: create_foods_feedbacks_labels_entries_input!): foods_feedbacks_labels_entries
  create_foodoffers_categories_items(filter: foodoffers_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foodoffers_categories_input!]): [foodoffers_categories!]!
  create_foodoffers_categories_item(data: create_foodoffers_categories_input!): foodoffers_categories
  create_foodoffers_categories_translations_items(filter: foodoffers_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foodoffers_categories_translations_input!]): [foodoffers_categories_translations!]!
  create_foodoffers_categories_translations_item(data: create_foodoffers_categories_translations_input!): foodoffers_categories_translations
  create_foods_categories_translations_items(filter: foods_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_categories_translations_input!]): [foods_categories_translations!]!
  create_foods_categories_translations_item(data: create_foods_categories_translations_input!): foods_categories_translations
  create_foods_categories_items(filter: foods_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_categories_input!]): [foods_categories!]!
  create_foods_categories_item(data: create_foods_categories_input!): foods_categories
  create_foodoffers_items(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foodoffers_input!]): [foodoffers!]!
  create_foodoffers_item(data: create_foodoffers_input!): foodoffers
  create_popup_events_items(filter: popup_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_popup_events_input!]): [popup_events!]!
  create_popup_events_item(data: create_popup_events_input!): popup_events
  create_foods_attributes_groups_translations_items(filter: foods_attributes_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_attributes_groups_translations_input!]): [foods_attributes_groups_translations!]!
  create_foods_attributes_groups_translations_item(data: create_foods_attributes_groups_translations_input!): foods_attributes_groups_translations
  create_foods_attributes_values_items(filter: foods_attributes_values_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_attributes_values_input!]): [foods_attributes_values!]!
  create_foods_attributes_values_item(data: create_foods_attributes_values_input!): foods_attributes_values
  create_forms_items(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_forms_input!]): [forms!]!
  create_forms_item(data: create_forms_input!): forms
  create_form_fields_translations_items(filter: form_fields_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_form_fields_translations_input!]): [form_fields_translations!]!
  create_form_fields_translations_item(data: create_form_fields_translations_input!): form_fields_translations
  create_foods_attributes_translations_items(filter: foods_attributes_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_attributes_translations_input!]): [foods_attributes_translations!]!
  create_foods_attributes_translations_item(data: create_foods_attributes_translations_input!): foods_attributes_translations
  create_form_answers_files_items(filter: form_answers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_form_answers_files_input!]): [form_answers_files!]!
  create_form_answers_files_item(data: create_form_answers_files_input!): form_answers_files
  create_businesshours_items(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_businesshours_input!]): [businesshours!]!
  create_businesshours_item(data: create_businesshours_input!): businesshours
  create_form_fields_items(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_form_fields_input!]): [form_fields!]!
  create_form_fields_item(data: create_form_fields_input!): form_fields
  create_foods_attributes_items(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_attributes_input!]): [foods_attributes!]!
  create_foods_attributes_item(data: create_foods_attributes_input!): foods_attributes
  create_businesshours_groups_translations_items(filter: businesshours_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_businesshours_groups_translations_input!]): [businesshours_groups_translations!]!
  create_businesshours_groups_translations_item(data: create_businesshours_groups_translations_input!): businesshours_groups_translations
  create_businesshours_groups_items(filter: businesshours_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_businesshours_groups_input!]): [businesshours_groups!]!
  create_businesshours_groups_item(data: create_businesshours_groups_input!): businesshours_groups
  create_form_answers_items(filter: form_answers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_form_answers_input!]): [form_answers!]!
  create_form_answers_item(data: create_form_answers_input!): form_answers
  create_foods_attributes_groups_items(filter: foods_attributes_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_foods_attributes_groups_input!]): [foods_attributes_groups!]!
  create_foods_attributes_groups_item(data: create_foods_attributes_groups_input!): foods_attributes_groups
  create_buildings_attributes_items(filter: buildings_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_buildings_attributes_input!]): [buildings_attributes!]!
  create_buildings_attributes_item(data: create_buildings_attributes_input!): buildings_attributes
  create_form_submissions_items(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_form_submissions_input!]): [form_submissions!]!
  create_form_submissions_item(data: create_form_submissions_input!): form_submissions
  create_form_categories_translations_items(filter: form_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_form_categories_translations_input!]): [form_categories_translations!]!
  create_form_categories_translations_item(data: create_form_categories_translations_input!): form_categories_translations
  create_workflows_runs_items(filter: workflows_runs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_workflows_runs_input!]): [workflows_runs!]!
  create_workflows_runs_item(data: create_workflows_runs_input!): workflows_runs
  create_workflows_items(filter: workflows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_workflows_input!]): [workflows!]!
  create_workflows_item(data: create_workflows_input!): workflows
  create_app_settings_login_screen_translations_items(filter: app_settings_login_screen_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_app_settings_login_screen_translations_input!]): [app_settings_login_screen_translations!]!
  create_app_settings_login_screen_translations_item(data: create_app_settings_login_screen_translations_input!): app_settings_login_screen_translations
  create_form_categories_items(filter: form_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_form_categories_input!]): [form_categories!]!
  create_form_categories_item(data: create_form_categories_input!): form_categories
  create_forms_translations_items(filter: forms_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_forms_translations_input!]): [forms_translations!]!
  create_forms_translations_item(data: create_forms_translations_input!): forms_translations
  create_app_elements_translations_items(filter: app_elements_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_app_elements_translations_input!]): [app_elements_translations!]!
  create_app_elements_translations_item(data: create_app_elements_translations_input!): app_elements_translations
  create_collectible_events_translations_items(filter: collectible_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_collectible_events_translations_input!]): [collectible_events_translations!]!
  create_collectible_events_translations_item(data: create_collectible_events_translations_input!): collectible_events_translations
  create_form_extracts_form_fields_items(filter: form_extracts_form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_form_extracts_form_fields_input!]): [form_extracts_form_fields!]!
  create_form_extracts_form_fields_item(data: create_form_extracts_form_fields_input!): form_extracts_form_fields
  create_form_extracts_items(filter: form_extracts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_form_extracts_input!]): [form_extracts!]!
  create_form_extracts_item(data: create_form_extracts_input!): form_extracts
  create_mails_files_items(filter: mails_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_mails_files_input!]): [mails_files!]!
  create_mails_files_item(data: create_mails_files_input!): mails_files
  create_files_shares_items(filter: files_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_files_shares_input!]): [files_shares!]!
  create_files_shares_item(data: create_files_shares_input!): files_shares
  create_collectible_event_participants_items(filter: collectible_event_participants_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_collectible_event_participants_input!]): [collectible_event_participants!]!
  create_collectible_event_participants_item(data: create_collectible_event_participants_input!): collectible_event_participants
  create_collectible_events_items(filter: collectible_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_collectible_events_input!]): [collectible_events!]!
  create_collectible_events_item(data: create_collectible_events_input!): collectible_events
  create_app_elements_items(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_app_elements_input!]): [app_elements!]!
  create_app_elements_item(data: create_app_elements_input!): app_elements
  update_canteens_feedbacks_labels_items(filter: canteens_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_canteens_feedbacks_labels_input!): [canteens_feedbacks_labels!]!
  update_canteens_feedbacks_labels_batch(filter: canteens_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_canteens_feedbacks_labels_input!]): [canteens_feedbacks_labels!]!
  update_canteens_feedbacks_labels_item(id: ID!, data: update_canteens_feedbacks_labels_input!): canteens_feedbacks_labels
  update_canteen_food_feedback_report_schedules_items(filter: canteen_food_feedback_report_schedules_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_canteen_food_feedback_report_schedules_input!): [canteen_food_feedback_report_schedules!]!
  update_canteen_food_feedback_report_schedules_batch(filter: canteen_food_feedback_report_schedules_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_canteen_food_feedback_report_schedules_input!]): [canteen_food_feedback_report_schedules!]!
  update_canteen_food_feedback_report_schedules_item(id: ID!, data: update_canteen_food_feedback_report_schedules_input!): canteen_food_feedback_report_schedules
  update_washingmachines_items(filter: washingmachines_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_washingmachines_input!): [washingmachines!]!
  update_washingmachines_batch(filter: washingmachines_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_washingmachines_input!]): [washingmachines!]!
  update_washingmachines_item(id: ID!, data: update_washingmachines_input!): washingmachines
  update_foods_feedbacks_foods_feedbacks_labels_items(filter: foods_feedbacks_foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_feedbacks_foods_feedbacks_labels_input!): [foods_feedbacks_foods_feedbacks_labels!]!
  update_foods_feedbacks_foods_feedbacks_labels_batch(filter: foods_feedbacks_foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_feedbacks_foods_feedbacks_labels_input!]): [foods_feedbacks_foods_feedbacks_labels!]!
  update_foods_feedbacks_foods_feedbacks_labels_item(id: ID!, data: update_foods_feedbacks_foods_feedbacks_labels_input!): foods_feedbacks_foods_feedbacks_labels
  update_canteens_feedbacks_labels_translations_items(filter: canteens_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_canteens_feedbacks_labels_translations_input!): [canteens_feedbacks_labels_translations!]!
  update_canteens_feedbacks_labels_translations_batch(filter: canteens_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_canteens_feedbacks_labels_translations_input!]): [canteens_feedbacks_labels_translations!]!
  update_canteens_feedbacks_labels_translations_item(id: ID!, data: update_canteens_feedbacks_labels_translations_input!): canteens_feedbacks_labels_translations
  update_washingmachines_jobs_items(filter: washingmachines_jobs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_washingmachines_jobs_input!): [washingmachines_jobs!]!
  update_washingmachines_jobs_batch(filter: washingmachines_jobs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_washingmachines_jobs_input!]): [washingmachines_jobs!]!
  update_washingmachines_jobs_item(id: ID!, data: update_washingmachines_jobs_input!): washingmachines_jobs
  update_cashregisters_transactions_items(filter: cashregisters_transactions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_cashregisters_transactions_input!): [cashregisters_transactions!]!
  update_cashregisters_transactions_batch(filter: cashregisters_transactions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_cashregisters_transactions_input!]): [cashregisters_transactions!]!
  update_cashregisters_transactions_item(id: ID!, data: update_cashregisters_transactions_input!): cashregisters_transactions
  update_canteens_foodservice_hours_during_semester_break_items(filter: canteens_foodservice_hours_during_semester_break_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_canteens_foodservice_hours_during_semester_break_input!): [canteens_foodservice_hours_during_semester_break!]!
  update_canteens_foodservice_hours_during_semester_break_batch(filter: canteens_foodservice_hours_during_semester_break_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_canteens_foodservice_hours_during_semester_break_input!]): [canteens_foodservice_hours_during_semester_break!]!
  update_canteens_foodservice_hours_during_semester_break_item(id: ID!, data: update_canteens_foodservice_hours_during_semester_break_input!): canteens_foodservice_hours_during_semester_break
  update_markings_items(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_markings_input!): [markings!]!
  update_markings_batch(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_markings_input!]): [markings!]!
  update_markings_item(id: ID!, data: update_markings_input!): markings
  update_mails_items(filter: mails_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_mails_input!): [mails!]!
  update_mails_batch(filter: mails_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_mails_input!]): [mails!]!
  update_mails_item(id: ID!, data: update_mails_input!): mails
  update_app_settings(data: update_app_settings_input!): app_settings
  update_apartments_items(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_apartments_input!): [apartments!]!
  update_apartments_batch(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_apartments_input!]): [apartments!]!
  update_apartments_item(id: ID!, data: update_apartments_input!): apartments
  update_app_feedbacks_items(filter: app_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_app_feedbacks_input!): [app_feedbacks!]!
  update_app_feedbacks_batch(filter: app_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_app_feedbacks_input!]): [app_feedbacks!]!
  update_app_feedbacks_item(id: ID!, data: update_app_feedbacks_input!): app_feedbacks
  update_buildings_businesshours_items(filter: buildings_businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_buildings_businesshours_input!): [buildings_businesshours!]!
  update_buildings_businesshours_batch(filter: buildings_businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_buildings_businesshours_input!]): [buildings_businesshours!]!
  update_buildings_businesshours_item(id: ID!, data: update_buildings_businesshours_input!): buildings_businesshours
  update_auto_translation_settings(data: update_auto_translation_settings_input!): auto_translation_settings
  update_app_settings_balance_translations_items(filter: app_settings_balance_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_app_settings_balance_translations_input!): [app_settings_balance_translations!]!
  update_app_settings_balance_translations_batch(filter: app_settings_balance_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_app_settings_balance_translations_input!]): [app_settings_balance_translations!]!
  update_app_settings_balance_translations_item(id: ID!, data: update_app_settings_balance_translations_input!): app_settings_balance_translations
  update_canteens_items(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_canteens_input!): [canteens!]!
  update_canteens_batch(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_canteens_input!]): [canteens!]!
  update_canteens_item(id: ID!, data: update_canteens_input!): canteens
  update_canteen_food_feedback_report_schedules_report_recipients_items(filter: canteen_food_feedback_report_schedules_report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_canteen_food_feedback_report_schedules_report_recipients_input!): [canteen_food_feedback_report_schedules_report_recipients!]!
  update_canteen_food_feedback_report_schedules_report_recipients_batch(filter: canteen_food_feedback_report_schedules_report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_canteen_food_feedback_report_schedules_report_recipients_input!]): [canteen_food_feedback_report_schedules_report_recipients!]!
  update_canteen_food_feedback_report_schedules_report_recipients_item(id: ID!, data: update_canteen_food_feedback_report_schedules_report_recipients_input!): canteen_food_feedback_report_schedules_report_recipients
  update_collections_dates_last_update_items(filter: collections_dates_last_update_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_collections_dates_last_update_input!): [collections_dates_last_update!]!
  update_collections_dates_last_update_batch(filter: collections_dates_last_update_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_collections_dates_last_update_input!]): [collections_dates_last_update!]!
  update_collections_dates_last_update_item(id: ID!, data: update_collections_dates_last_update_input!): collections_dates_last_update
  update_buildings_items(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_buildings_input!): [buildings!]!
  update_buildings_batch(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_buildings_input!]): [buildings!]!
  update_buildings_item(id: ID!, data: update_buildings_input!): buildings
  update_app_settings_housing_translations_items(filter: app_settings_housing_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_app_settings_housing_translations_input!): [app_settings_housing_translations!]!
  update_app_settings_housing_translations_batch(filter: app_settings_housing_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_app_settings_housing_translations_input!]): [app_settings_housing_translations!]!
  update_app_settings_housing_translations_item(id: ID!, data: update_app_settings_housing_translations_input!): app_settings_housing_translations
  update_buildings_translations_items(filter: buildings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_buildings_translations_input!): [buildings_translations!]!
  update_buildings_translations_batch(filter: buildings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_buildings_translations_input!]): [buildings_translations!]!
  update_buildings_translations_item(id: ID!, data: update_buildings_translations_input!): buildings_translations
  update_canteens_foodservice_hours_items(filter: canteens_foodservice_hours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_canteens_foodservice_hours_input!): [canteens_foodservice_hours!]!
  update_canteens_foodservice_hours_batch(filter: canteens_foodservice_hours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_canteens_foodservice_hours_input!]): [canteens_foodservice_hours!]!
  update_canteens_foodservice_hours_item(id: ID!, data: update_canteens_foodservice_hours_input!): canteens_foodservice_hours
  update_cashregisters_items(filter: cashregisters_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_cashregisters_input!): [cashregisters!]!
  update_cashregisters_batch(filter: cashregisters_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_cashregisters_input!]): [cashregisters!]!
  update_cashregisters_item(id: ID!, data: update_cashregisters_input!): cashregisters
  update_devices_items(filter: devices_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_devices_input!): [devices!]!
  update_devices_batch(filter: devices_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_devices_input!]): [devices!]!
  update_devices_item(id: ID!, data: update_devices_input!): devices
  update_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_sync_id_map_input!): [directus_sync_id_map!]!
  update_directus_sync_id_map_batch(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  update_directus_sync_id_map_item(id: ID!, data: update_directus_sync_id_map_input!): directus_sync_id_map
  update_foodoffers_markings_items(filter: foodoffers_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foodoffers_markings_input!): [foodoffers_markings!]!
  update_foodoffers_markings_batch(filter: foodoffers_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foodoffers_markings_input!]): [foodoffers_markings!]!
  update_foodoffers_markings_item(id: ID!, data: update_foodoffers_markings_input!): foodoffers_markings
  update_foods_feedbacks_labels_items(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_feedbacks_labels_input!): [foods_feedbacks_labels!]!
  update_foods_feedbacks_labels_batch(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_feedbacks_labels_input!]): [foods_feedbacks_labels!]!
  update_foods_feedbacks_labels_item(id: ID!, data: update_foods_feedbacks_labels_input!): foods_feedbacks_labels
  update_foods_feedbacks_labels_translations_items(filter: foods_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_feedbacks_labels_translations_input!): [foods_feedbacks_labels_translations!]!
  update_foods_feedbacks_labels_translations_batch(filter: foods_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_feedbacks_labels_translations_input!]): [foods_feedbacks_labels_translations!]!
  update_foods_feedbacks_labels_translations_item(id: ID!, data: update_foods_feedbacks_labels_translations_input!): foods_feedbacks_labels_translations
  update_foods_markings_items(filter: foods_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_markings_input!): [foods_markings!]!
  update_foods_markings_batch(filter: foods_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_markings_input!]): [foods_markings!]!
  update_foods_markings_item(id: ID!, data: update_foods_markings_input!): foods_markings
  update_markings_exclusions_items(filter: markings_exclusions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_markings_exclusions_input!): [markings_exclusions!]!
  update_markings_exclusions_batch(filter: markings_exclusions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_markings_exclusions_input!]): [markings_exclusions!]!
  update_markings_exclusions_item(id: ID!, data: update_markings_exclusions_input!): markings_exclusions
  update_foods_items(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_input!): [foods!]!
  update_foods_batch(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_input!]): [foods!]!
  update_foods_item(id: ID!, data: update_foods_input!): foods
  update_foods_feedbacks_items(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_feedbacks_input!): [foods_feedbacks!]!
  update_foods_feedbacks_batch(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_feedbacks_input!]): [foods_feedbacks!]!
  update_foods_feedbacks_item(id: ID!, data: update_foods_feedbacks_input!): foods_feedbacks
  update_markings_groups_translations_items(filter: markings_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_markings_groups_translations_input!): [markings_groups_translations!]!
  update_markings_groups_translations_batch(filter: markings_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_markings_groups_translations_input!]): [markings_groups_translations!]!
  update_markings_groups_translations_item(id: ID!, data: update_markings_groups_translations_input!): markings_groups_translations
  update_languages_items(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_languages_input!): [languages!]!
  update_languages_batch(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_languages_input!]): [languages!]!
  update_languages_item(id: ID!, data: update_languages_input!): languages
  update_foods_translations_items(filter: foods_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_translations_input!): [foods_translations!]!
  update_foods_translations_batch(filter: foods_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_translations_input!]): [foods_translations!]!
  update_foods_translations_item(id: ID!, data: update_foods_translations_input!): foods_translations
  update_markings_groups_items(filter: markings_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_markings_groups_input!): [markings_groups!]!
  update_markings_groups_batch(filter: markings_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_markings_groups_input!]): [markings_groups!]!
  update_markings_groups_item(id: ID!, data: update_markings_groups_input!): markings_groups
  update_news_translations_items(filter: news_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_news_translations_input!): [news_translations!]!
  update_news_translations_batch(filter: news_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_news_translations_input!]): [news_translations!]!
  update_news_translations_item(id: ID!, data: update_news_translations_input!): news_translations
  update_popup_events_canteens_items(filter: popup_events_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_popup_events_canteens_input!): [popup_events_canteens!]!
  update_popup_events_canteens_batch(filter: popup_events_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_popup_events_canteens_input!]): [popup_events_canteens!]!
  update_popup_events_canteens_item(id: ID!, data: update_popup_events_canteens_input!): popup_events_canteens
  update_popup_events_translations_items(filter: popup_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_popup_events_translations_input!): [popup_events_translations!]!
  update_popup_events_translations_batch(filter: popup_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_popup_events_translations_input!]): [popup_events_translations!]!
  update_popup_events_translations_item(id: ID!, data: update_popup_events_translations_input!): popup_events_translations
  update_profiles_buildings_favorites_items(filter: profiles_buildings_favorites_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_profiles_buildings_favorites_input!): [profiles_buildings_favorites!]!
  update_profiles_buildings_favorites_batch(filter: profiles_buildings_favorites_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_profiles_buildings_favorites_input!]): [profiles_buildings_favorites!]!
  update_profiles_buildings_favorites_item(id: ID!, data: update_profiles_buildings_favorites_input!): profiles_buildings_favorites
  update_report_recipients_items(filter: report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_report_recipients_input!): [report_recipients!]!
  update_report_recipients_batch(filter: report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_report_recipients_input!]): [report_recipients!]!
  update_report_recipients_item(id: ID!, data: update_report_recipients_input!): report_recipients
  update_utilizations_entries_items(filter: utilizations_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_utilizations_entries_input!): [utilizations_entries!]!
  update_utilizations_entries_batch(filter: utilizations_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_utilizations_entries_input!]): [utilizations_entries!]!
  update_utilizations_entries_item(id: ID!, data: update_utilizations_entries_input!): utilizations_entries
  update_utilizations_groups_items(filter: utilizations_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_utilizations_groups_input!): [utilizations_groups!]!
  update_utilizations_groups_batch(filter: utilizations_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_utilizations_groups_input!]): [utilizations_groups!]!
  update_utilizations_groups_item(id: ID!, data: update_utilizations_groups_input!): utilizations_groups
  update_markings_translations_items(filter: markings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_markings_translations_input!): [markings_translations!]!
  update_markings_translations_batch(filter: markings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_markings_translations_input!]): [markings_translations!]!
  update_markings_translations_item(id: ID!, data: update_markings_translations_input!): markings_translations
  update_wikis_directus_roles_items(filter: wikis_directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_wikis_directus_roles_input!): [wikis_directus_roles!]!
  update_wikis_directus_roles_batch(filter: wikis_directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_wikis_directus_roles_input!]): [wikis_directus_roles!]!
  update_wikis_directus_roles_item(id: ID!, data: update_wikis_directus_roles_input!): wikis_directus_roles
  update_profiles_markings_items(filter: profiles_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_profiles_markings_input!): [profiles_markings!]!
  update_profiles_markings_batch(filter: profiles_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_profiles_markings_input!]): [profiles_markings!]!
  update_profiles_markings_item(id: ID!, data: update_profiles_markings_input!): profiles_markings
  update_news_items(filter: news_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_news_input!): [news!]!
  update_news_batch(filter: news_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_news_input!]): [news!]!
  update_news_item(id: ID!, data: update_news_input!): news
  update_wikis_items(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_wikis_input!): [wikis!]!
  update_wikis_batch(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_wikis_input!]): [wikis!]!
  update_wikis_item(id: ID!, data: update_wikis_input!): wikis
  update_profiles_buildings_last_opened_items(filter: profiles_buildings_last_opened_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_profiles_buildings_last_opened_input!): [profiles_buildings_last_opened!]!
  update_profiles_buildings_last_opened_batch(filter: profiles_buildings_last_opened_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_profiles_buildings_last_opened_input!]): [profiles_buildings_last_opened!]!
  update_profiles_buildings_last_opened_item(id: ID!, data: update_profiles_buildings_last_opened_input!): profiles_buildings_last_opened
  update_push_notifications_items(filter: push_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_push_notifications_input!): [push_notifications!]!
  update_push_notifications_batch(filter: push_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_push_notifications_input!]): [push_notifications!]!
  update_push_notifications_item(id: ID!, data: update_push_notifications_input!): push_notifications
  update_canteen_food_feedback_report_schedules_canteens_items(filter: canteen_food_feedback_report_schedules_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_canteen_food_feedback_report_schedules_canteens_input!): [canteen_food_feedback_report_schedules_canteens!]!
  update_canteen_food_feedback_report_schedules_canteens_batch(filter: canteen_food_feedback_report_schedules_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_canteen_food_feedback_report_schedules_canteens_input!]): [canteen_food_feedback_report_schedules_canteens!]!
  update_canteen_food_feedback_report_schedules_canteens_item(id: ID!, data: update_canteen_food_feedback_report_schedules_canteens_input!): canteen_food_feedback_report_schedules_canteens
  update_wikis_translations_items(filter: wikis_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_wikis_translations_input!): [wikis_translations!]!
  update_wikis_translations_batch(filter: wikis_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_wikis_translations_input!]): [wikis_translations!]!
  update_wikis_translations_item(id: ID!, data: update_wikis_translations_input!): wikis_translations
  update_profiles_items(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_profiles_input!): [profiles!]!
  update_profiles_batch(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_profiles_input!]): [profiles!]!
  update_profiles_item(id: ID!, data: update_profiles_input!): profiles
  update_canteens_feedbacks_labels_entries_items(filter: canteens_feedbacks_labels_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_canteens_feedbacks_labels_entries_input!): [canteens_feedbacks_labels_entries!]!
  update_canteens_feedbacks_labels_entries_batch(filter: canteens_feedbacks_labels_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_canteens_feedbacks_labels_entries_input!]): [canteens_feedbacks_labels_entries!]!
  update_canteens_feedbacks_labels_entries_item(id: ID!, data: update_canteens_feedbacks_labels_entries_input!): canteens_feedbacks_labels_entries
  update_foods_feedbacks_labels_entries_items(filter: foods_feedbacks_labels_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_feedbacks_labels_entries_input!): [foods_feedbacks_labels_entries!]!
  update_foods_feedbacks_labels_entries_batch(filter: foods_feedbacks_labels_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_feedbacks_labels_entries_input!]): [foods_feedbacks_labels_entries!]!
  update_foods_feedbacks_labels_entries_item(id: ID!, data: update_foods_feedbacks_labels_entries_input!): foods_feedbacks_labels_entries
  update_foodoffers_categories_items(filter: foodoffers_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foodoffers_categories_input!): [foodoffers_categories!]!
  update_foodoffers_categories_batch(filter: foodoffers_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foodoffers_categories_input!]): [foodoffers_categories!]!
  update_foodoffers_categories_item(id: ID!, data: update_foodoffers_categories_input!): foodoffers_categories
  update_foodoffers_categories_translations_items(filter: foodoffers_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foodoffers_categories_translations_input!): [foodoffers_categories_translations!]!
  update_foodoffers_categories_translations_batch(filter: foodoffers_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foodoffers_categories_translations_input!]): [foodoffers_categories_translations!]!
  update_foodoffers_categories_translations_item(id: ID!, data: update_foodoffers_categories_translations_input!): foodoffers_categories_translations
  update_foods_categories_translations_items(filter: foods_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_categories_translations_input!): [foods_categories_translations!]!
  update_foods_categories_translations_batch(filter: foods_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_categories_translations_input!]): [foods_categories_translations!]!
  update_foods_categories_translations_item(id: ID!, data: update_foods_categories_translations_input!): foods_categories_translations
  update_foods_categories_items(filter: foods_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_categories_input!): [foods_categories!]!
  update_foods_categories_batch(filter: foods_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_categories_input!]): [foods_categories!]!
  update_foods_categories_item(id: ID!, data: update_foods_categories_input!): foods_categories
  update_foodoffers_items(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foodoffers_input!): [foodoffers!]!
  update_foodoffers_batch(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foodoffers_input!]): [foodoffers!]!
  update_foodoffers_item(id: ID!, data: update_foodoffers_input!): foodoffers
  update_popup_events_items(filter: popup_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_popup_events_input!): [popup_events!]!
  update_popup_events_batch(filter: popup_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_popup_events_input!]): [popup_events!]!
  update_popup_events_item(id: ID!, data: update_popup_events_input!): popup_events
  update_foods_attributes_groups_translations_items(filter: foods_attributes_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_attributes_groups_translations_input!): [foods_attributes_groups_translations!]!
  update_foods_attributes_groups_translations_batch(filter: foods_attributes_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_attributes_groups_translations_input!]): [foods_attributes_groups_translations!]!
  update_foods_attributes_groups_translations_item(id: ID!, data: update_foods_attributes_groups_translations_input!): foods_attributes_groups_translations
  update_foods_attributes_values_items(filter: foods_attributes_values_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_attributes_values_input!): [foods_attributes_values!]!
  update_foods_attributes_values_batch(filter: foods_attributes_values_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_attributes_values_input!]): [foods_attributes_values!]!
  update_foods_attributes_values_item(id: ID!, data: update_foods_attributes_values_input!): foods_attributes_values
  update_forms_items(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_forms_input!): [forms!]!
  update_forms_batch(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_forms_input!]): [forms!]!
  update_forms_item(id: ID!, data: update_forms_input!): forms
  update_form_fields_translations_items(filter: form_fields_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_form_fields_translations_input!): [form_fields_translations!]!
  update_form_fields_translations_batch(filter: form_fields_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_form_fields_translations_input!]): [form_fields_translations!]!
  update_form_fields_translations_item(id: ID!, data: update_form_fields_translations_input!): form_fields_translations
  update_foods_attributes_translations_items(filter: foods_attributes_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_attributes_translations_input!): [foods_attributes_translations!]!
  update_foods_attributes_translations_batch(filter: foods_attributes_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_attributes_translations_input!]): [foods_attributes_translations!]!
  update_foods_attributes_translations_item(id: ID!, data: update_foods_attributes_translations_input!): foods_attributes_translations
  update_form_answers_files_items(filter: form_answers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_form_answers_files_input!): [form_answers_files!]!
  update_form_answers_files_batch(filter: form_answers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_form_answers_files_input!]): [form_answers_files!]!
  update_form_answers_files_item(id: ID!, data: update_form_answers_files_input!): form_answers_files
  update_businesshours_items(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_businesshours_input!): [businesshours!]!
  update_businesshours_batch(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_businesshours_input!]): [businesshours!]!
  update_businesshours_item(id: ID!, data: update_businesshours_input!): businesshours
  update_form_fields_items(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_form_fields_input!): [form_fields!]!
  update_form_fields_batch(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_form_fields_input!]): [form_fields!]!
  update_form_fields_item(id: ID!, data: update_form_fields_input!): form_fields
  update_foods_attributes_items(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_attributes_input!): [foods_attributes!]!
  update_foods_attributes_batch(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_attributes_input!]): [foods_attributes!]!
  update_foods_attributes_item(id: ID!, data: update_foods_attributes_input!): foods_attributes
  update_businesshours_groups_translations_items(filter: businesshours_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_businesshours_groups_translations_input!): [businesshours_groups_translations!]!
  update_businesshours_groups_translations_batch(filter: businesshours_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_businesshours_groups_translations_input!]): [businesshours_groups_translations!]!
  update_businesshours_groups_translations_item(id: ID!, data: update_businesshours_groups_translations_input!): businesshours_groups_translations
  update_businesshours_groups_items(filter: businesshours_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_businesshours_groups_input!): [businesshours_groups!]!
  update_businesshours_groups_batch(filter: businesshours_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_businesshours_groups_input!]): [businesshours_groups!]!
  update_businesshours_groups_item(id: ID!, data: update_businesshours_groups_input!): businesshours_groups
  update_form_answers_items(filter: form_answers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_form_answers_input!): [form_answers!]!
  update_form_answers_batch(filter: form_answers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_form_answers_input!]): [form_answers!]!
  update_form_answers_item(id: ID!, data: update_form_answers_input!): form_answers
  update_foods_attributes_groups_items(filter: foods_attributes_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_foods_attributes_groups_input!): [foods_attributes_groups!]!
  update_foods_attributes_groups_batch(filter: foods_attributes_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_foods_attributes_groups_input!]): [foods_attributes_groups!]!
  update_foods_attributes_groups_item(id: ID!, data: update_foods_attributes_groups_input!): foods_attributes_groups
  update_buildings_attributes_items(filter: buildings_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_buildings_attributes_input!): [buildings_attributes!]!
  update_buildings_attributes_batch(filter: buildings_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_buildings_attributes_input!]): [buildings_attributes!]!
  update_buildings_attributes_item(id: ID!, data: update_buildings_attributes_input!): buildings_attributes
  update_form_submissions_items(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_form_submissions_input!): [form_submissions!]!
  update_form_submissions_batch(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_form_submissions_input!]): [form_submissions!]!
  update_form_submissions_item(id: ID!, data: update_form_submissions_input!): form_submissions
  update_form_categories_translations_items(filter: form_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_form_categories_translations_input!): [form_categories_translations!]!
  update_form_categories_translations_batch(filter: form_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_form_categories_translations_input!]): [form_categories_translations!]!
  update_form_categories_translations_item(id: ID!, data: update_form_categories_translations_input!): form_categories_translations
  update_workflows_runs_items(filter: workflows_runs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_workflows_runs_input!): [workflows_runs!]!
  update_workflows_runs_batch(filter: workflows_runs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_workflows_runs_input!]): [workflows_runs!]!
  update_workflows_runs_item(id: ID!, data: update_workflows_runs_input!): workflows_runs
  update_workflows_items(filter: workflows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_workflows_input!): [workflows!]!
  update_workflows_batch(filter: workflows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_workflows_input!]): [workflows!]!
  update_workflows_item(id: ID!, data: update_workflows_input!): workflows
  update_app_settings_login_screen_translations_items(filter: app_settings_login_screen_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_app_settings_login_screen_translations_input!): [app_settings_login_screen_translations!]!
  update_app_settings_login_screen_translations_batch(filter: app_settings_login_screen_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_app_settings_login_screen_translations_input!]): [app_settings_login_screen_translations!]!
  update_app_settings_login_screen_translations_item(id: ID!, data: update_app_settings_login_screen_translations_input!): app_settings_login_screen_translations
  update_form_categories_items(filter: form_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_form_categories_input!): [form_categories!]!
  update_form_categories_batch(filter: form_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_form_categories_input!]): [form_categories!]!
  update_form_categories_item(id: ID!, data: update_form_categories_input!): form_categories
  update_forms_translations_items(filter: forms_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_forms_translations_input!): [forms_translations!]!
  update_forms_translations_batch(filter: forms_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_forms_translations_input!]): [forms_translations!]!
  update_forms_translations_item(id: ID!, data: update_forms_translations_input!): forms_translations
  update_app_elements_translations_items(filter: app_elements_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_app_elements_translations_input!): [app_elements_translations!]!
  update_app_elements_translations_batch(filter: app_elements_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_app_elements_translations_input!]): [app_elements_translations!]!
  update_app_elements_translations_item(id: ID!, data: update_app_elements_translations_input!): app_elements_translations
  update_collectible_events_translations_items(filter: collectible_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_collectible_events_translations_input!): [collectible_events_translations!]!
  update_collectible_events_translations_batch(filter: collectible_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_collectible_events_translations_input!]): [collectible_events_translations!]!
  update_collectible_events_translations_item(id: ID!, data: update_collectible_events_translations_input!): collectible_events_translations
  update_form_extracts_form_fields_items(filter: form_extracts_form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_form_extracts_form_fields_input!): [form_extracts_form_fields!]!
  update_form_extracts_form_fields_batch(filter: form_extracts_form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_form_extracts_form_fields_input!]): [form_extracts_form_fields!]!
  update_form_extracts_form_fields_item(id: ID!, data: update_form_extracts_form_fields_input!): form_extracts_form_fields
  update_form_extracts_items(filter: form_extracts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_form_extracts_input!): [form_extracts!]!
  update_form_extracts_batch(filter: form_extracts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_form_extracts_input!]): [form_extracts!]!
  update_form_extracts_item(id: ID!, data: update_form_extracts_input!): form_extracts
  update_mails_files_items(filter: mails_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_mails_files_input!): [mails_files!]!
  update_mails_files_batch(filter: mails_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_mails_files_input!]): [mails_files!]!
  update_mails_files_item(id: ID!, data: update_mails_files_input!): mails_files
  update_files_shares_items(filter: files_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_files_shares_input!): [files_shares!]!
  update_files_shares_batch(filter: files_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_files_shares_input!]): [files_shares!]!
  update_files_shares_item(id: ID!, data: update_files_shares_input!): files_shares
  update_collectible_event_participants_items(filter: collectible_event_participants_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_collectible_event_participants_input!): [collectible_event_participants!]!
  update_collectible_event_participants_batch(filter: collectible_event_participants_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_collectible_event_participants_input!]): [collectible_event_participants!]!
  update_collectible_event_participants_item(id: ID!, data: update_collectible_event_participants_input!): collectible_event_participants
  update_collectible_events_items(filter: collectible_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_collectible_events_input!): [collectible_events!]!
  update_collectible_events_batch(filter: collectible_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_collectible_events_input!]): [collectible_events!]!
  update_collectible_events_item(id: ID!, data: update_collectible_events_input!): collectible_events
  update_app_elements_items(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_app_elements_input!): [app_elements!]!
  update_app_elements_batch(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_app_elements_input!]): [app_elements!]!
  update_app_elements_item(id: ID!, data: update_app_elements_input!): app_elements
  delete_canteens_feedbacks_labels_items(ids: [ID]!): delete_many
  delete_canteens_feedbacks_labels_item(id: ID!): delete_one
  delete_canteen_food_feedback_report_schedules_items(ids: [ID]!): delete_many
  delete_canteen_food_feedback_report_schedules_item(id: ID!): delete_one
  delete_washingmachines_items(ids: [ID]!): delete_many
  delete_washingmachines_item(id: ID!): delete_one
  delete_foods_feedbacks_foods_feedbacks_labels_items(ids: [ID]!): delete_many
  delete_foods_feedbacks_foods_feedbacks_labels_item(id: ID!): delete_one
  delete_canteens_feedbacks_labels_translations_items(ids: [ID]!): delete_many
  delete_canteens_feedbacks_labels_translations_item(id: ID!): delete_one
  delete_washingmachines_jobs_items(ids: [ID]!): delete_many
  delete_washingmachines_jobs_item(id: ID!): delete_one
  delete_cashregisters_transactions_items(ids: [ID]!): delete_many
  delete_cashregisters_transactions_item(id: ID!): delete_one
  delete_canteens_foodservice_hours_during_semester_break_items(ids: [ID]!): delete_many
  delete_canteens_foodservice_hours_during_semester_break_item(id: ID!): delete_one
  delete_markings_items(ids: [ID]!): delete_many
  delete_markings_item(id: ID!): delete_one
  delete_mails_items(ids: [ID]!): delete_many
  delete_mails_item(id: ID!): delete_one
  delete_apartments_items(ids: [ID]!): delete_many
  delete_apartments_item(id: ID!): delete_one
  delete_app_feedbacks_items(ids: [ID]!): delete_many
  delete_app_feedbacks_item(id: ID!): delete_one
  delete_buildings_businesshours_items(ids: [ID]!): delete_many
  delete_buildings_businesshours_item(id: ID!): delete_one
  delete_app_settings_balance_translations_items(ids: [ID]!): delete_many
  delete_app_settings_balance_translations_item(id: ID!): delete_one
  delete_canteens_items(ids: [ID]!): delete_many
  delete_canteens_item(id: ID!): delete_one
  delete_canteen_food_feedback_report_schedules_report_recipients_items(ids: [ID]!): delete_many
  delete_canteen_food_feedback_report_schedules_report_recipients_item(id: ID!): delete_one
  delete_collections_dates_last_update_items(ids: [ID]!): delete_many
  delete_collections_dates_last_update_item(id: ID!): delete_one
  delete_buildings_items(ids: [ID]!): delete_many
  delete_buildings_item(id: ID!): delete_one
  delete_app_settings_housing_translations_items(ids: [ID]!): delete_many
  delete_app_settings_housing_translations_item(id: ID!): delete_one
  delete_buildings_translations_items(ids: [ID]!): delete_many
  delete_buildings_translations_item(id: ID!): delete_one
  delete_canteens_foodservice_hours_items(ids: [ID]!): delete_many
  delete_canteens_foodservice_hours_item(id: ID!): delete_one
  delete_cashregisters_items(ids: [ID]!): delete_many
  delete_cashregisters_item(id: ID!): delete_one
  delete_devices_items(ids: [ID]!): delete_many
  delete_devices_item(id: ID!): delete_one
  delete_directus_sync_id_map_items(ids: [ID]!): delete_many
  delete_directus_sync_id_map_item(id: ID!): delete_one
  delete_foodoffers_markings_items(ids: [ID]!): delete_many
  delete_foodoffers_markings_item(id: ID!): delete_one
  delete_foods_feedbacks_labels_items(ids: [ID]!): delete_many
  delete_foods_feedbacks_labels_item(id: ID!): delete_one
  delete_foods_feedbacks_labels_translations_items(ids: [ID]!): delete_many
  delete_foods_feedbacks_labels_translations_item(id: ID!): delete_one
  delete_foods_markings_items(ids: [ID]!): delete_many
  delete_foods_markings_item(id: ID!): delete_one
  delete_markings_exclusions_items(ids: [ID]!): delete_many
  delete_markings_exclusions_item(id: ID!): delete_one
  delete_foods_items(ids: [ID]!): delete_many
  delete_foods_item(id: ID!): delete_one
  delete_foods_feedbacks_items(ids: [ID]!): delete_many
  delete_foods_feedbacks_item(id: ID!): delete_one
  delete_markings_groups_translations_items(ids: [ID]!): delete_many
  delete_markings_groups_translations_item(id: ID!): delete_one
  delete_languages_items(ids: [ID]!): delete_many
  delete_languages_item(id: ID!): delete_one
  delete_foods_translations_items(ids: [ID]!): delete_many
  delete_foods_translations_item(id: ID!): delete_one
  delete_markings_groups_items(ids: [ID]!): delete_many
  delete_markings_groups_item(id: ID!): delete_one
  delete_news_translations_items(ids: [ID]!): delete_many
  delete_news_translations_item(id: ID!): delete_one
  delete_popup_events_canteens_items(ids: [ID]!): delete_many
  delete_popup_events_canteens_item(id: ID!): delete_one
  delete_popup_events_translations_items(ids: [ID]!): delete_many
  delete_popup_events_translations_item(id: ID!): delete_one
  delete_profiles_buildings_favorites_items(ids: [ID]!): delete_many
  delete_profiles_buildings_favorites_item(id: ID!): delete_one
  delete_report_recipients_items(ids: [ID]!): delete_many
  delete_report_recipients_item(id: ID!): delete_one
  delete_utilizations_entries_items(ids: [ID]!): delete_many
  delete_utilizations_entries_item(id: ID!): delete_one
  delete_utilizations_groups_items(ids: [ID]!): delete_many
  delete_utilizations_groups_item(id: ID!): delete_one
  delete_markings_translations_items(ids: [ID]!): delete_many
  delete_markings_translations_item(id: ID!): delete_one
  delete_wikis_directus_roles_items(ids: [ID]!): delete_many
  delete_wikis_directus_roles_item(id: ID!): delete_one
  delete_profiles_markings_items(ids: [ID]!): delete_many
  delete_profiles_markings_item(id: ID!): delete_one
  delete_news_items(ids: [ID]!): delete_many
  delete_news_item(id: ID!): delete_one
  delete_wikis_items(ids: [ID]!): delete_many
  delete_wikis_item(id: ID!): delete_one
  delete_profiles_buildings_last_opened_items(ids: [ID]!): delete_many
  delete_profiles_buildings_last_opened_item(id: ID!): delete_one
  delete_push_notifications_items(ids: [ID]!): delete_many
  delete_push_notifications_item(id: ID!): delete_one
  delete_canteen_food_feedback_report_schedules_canteens_items(ids: [ID]!): delete_many
  delete_canteen_food_feedback_report_schedules_canteens_item(id: ID!): delete_one
  delete_wikis_translations_items(ids: [ID]!): delete_many
  delete_wikis_translations_item(id: ID!): delete_one
  delete_profiles_items(ids: [ID]!): delete_many
  delete_profiles_item(id: ID!): delete_one
  delete_canteens_feedbacks_labels_entries_items(ids: [ID]!): delete_many
  delete_canteens_feedbacks_labels_entries_item(id: ID!): delete_one
  delete_foods_feedbacks_labels_entries_items(ids: [ID]!): delete_many
  delete_foods_feedbacks_labels_entries_item(id: ID!): delete_one
  delete_foodoffers_categories_items(ids: [ID]!): delete_many
  delete_foodoffers_categories_item(id: ID!): delete_one
  delete_foodoffers_categories_translations_items(ids: [ID]!): delete_many
  delete_foodoffers_categories_translations_item(id: ID!): delete_one
  delete_foods_categories_translations_items(ids: [ID]!): delete_many
  delete_foods_categories_translations_item(id: ID!): delete_one
  delete_foods_categories_items(ids: [ID]!): delete_many
  delete_foods_categories_item(id: ID!): delete_one
  delete_foodoffers_items(ids: [ID]!): delete_many
  delete_foodoffers_item(id: ID!): delete_one
  delete_popup_events_items(ids: [ID]!): delete_many
  delete_popup_events_item(id: ID!): delete_one
  delete_foods_attributes_groups_translations_items(ids: [ID]!): delete_many
  delete_foods_attributes_groups_translations_item(id: ID!): delete_one
  delete_foods_attributes_values_items(ids: [ID]!): delete_many
  delete_foods_attributes_values_item(id: ID!): delete_one
  delete_forms_items(ids: [ID]!): delete_many
  delete_forms_item(id: ID!): delete_one
  delete_form_fields_translations_items(ids: [ID]!): delete_many
  delete_form_fields_translations_item(id: ID!): delete_one
  delete_foods_attributes_translations_items(ids: [ID]!): delete_many
  delete_foods_attributes_translations_item(id: ID!): delete_one
  delete_form_answers_files_items(ids: [ID]!): delete_many
  delete_form_answers_files_item(id: ID!): delete_one
  delete_businesshours_items(ids: [ID]!): delete_many
  delete_businesshours_item(id: ID!): delete_one
  delete_form_fields_items(ids: [ID]!): delete_many
  delete_form_fields_item(id: ID!): delete_one
  delete_foods_attributes_items(ids: [ID]!): delete_many
  delete_foods_attributes_item(id: ID!): delete_one
  delete_businesshours_groups_translations_items(ids: [ID]!): delete_many
  delete_businesshours_groups_translations_item(id: ID!): delete_one
  delete_businesshours_groups_items(ids: [ID]!): delete_many
  delete_businesshours_groups_item(id: ID!): delete_one
  delete_form_answers_items(ids: [ID]!): delete_many
  delete_form_answers_item(id: ID!): delete_one
  delete_foods_attributes_groups_items(ids: [ID]!): delete_many
  delete_foods_attributes_groups_item(id: ID!): delete_one
  delete_buildings_attributes_items(ids: [ID]!): delete_many
  delete_buildings_attributes_item(id: ID!): delete_one
  delete_form_submissions_items(ids: [ID]!): delete_many
  delete_form_submissions_item(id: ID!): delete_one
  delete_form_categories_translations_items(ids: [ID]!): delete_many
  delete_form_categories_translations_item(id: ID!): delete_one
  delete_workflows_runs_items(ids: [ID]!): delete_many
  delete_workflows_runs_item(id: ID!): delete_one
  delete_workflows_items(ids: [ID]!): delete_many
  delete_workflows_item(id: ID!): delete_one
  delete_app_settings_login_screen_translations_items(ids: [ID]!): delete_many
  delete_app_settings_login_screen_translations_item(id: ID!): delete_one
  delete_form_categories_items(ids: [ID]!): delete_many
  delete_form_categories_item(id: ID!): delete_one
  delete_forms_translations_items(ids: [ID]!): delete_many
  delete_forms_translations_item(id: ID!): delete_one
  delete_app_elements_translations_items(ids: [ID]!): delete_many
  delete_app_elements_translations_item(id: ID!): delete_one
  delete_collectible_events_translations_items(ids: [ID]!): delete_many
  delete_collectible_events_translations_item(id: ID!): delete_one
  delete_form_extracts_form_fields_items(ids: [ID]!): delete_many
  delete_form_extracts_form_fields_item(id: ID!): delete_one
  delete_form_extracts_items(ids: [ID]!): delete_many
  delete_form_extracts_item(id: ID!): delete_one
  delete_mails_files_items(ids: [ID]!): delete_many
  delete_mails_files_item(id: ID!): delete_one
  delete_files_shares_items(ids: [ID]!): delete_many
  delete_files_shares_item(id: ID!): delete_one
  delete_collectible_event_participants_items(ids: [ID]!): delete_many
  delete_collectible_event_participants_item(id: ID!): delete_one
  delete_collectible_events_items(ids: [ID]!): delete_many
  delete_collectible_events_item(id: ID!): delete_one
  delete_app_elements_items(ids: [ID]!): delete_many
  delete_app_elements_item(id: ID!): delete_one
}

type Subscription {
  directus_files_mutated(event: EventEnum): directus_files_mutated
  directus_policies_mutated(event: EventEnum): directus_policies_mutated
  directus_access_mutated(event: EventEnum): directus_access_mutated
  canteens_feedbacks_labels_mutated(event: EventEnum): canteens_feedbacks_labels_mutated
  canteen_food_feedback_report_schedules_mutated(event: EventEnum): canteen_food_feedback_report_schedules_mutated
  washingmachines_mutated(event: EventEnum): washingmachines_mutated
  foods_feedbacks_foods_feedbacks_labels_mutated(event: EventEnum): foods_feedbacks_foods_feedbacks_labels_mutated
  canteens_feedbacks_labels_translations_mutated(event: EventEnum): canteens_feedbacks_labels_translations_mutated
  washingmachines_jobs_mutated(event: EventEnum): washingmachines_jobs_mutated
  cashregisters_transactions_mutated(event: EventEnum): cashregisters_transactions_mutated
  canteens_foodservice_hours_during_semester_break_mutated(event: EventEnum): canteens_foodservice_hours_during_semester_break_mutated
  markings_mutated(event: EventEnum): markings_mutated
  mails_mutated(event: EventEnum): mails_mutated
  app_settings_mutated(event: EventEnum): app_settings_mutated
  apartments_mutated(event: EventEnum): apartments_mutated
  app_feedbacks_mutated(event: EventEnum): app_feedbacks_mutated
  buildings_businesshours_mutated(event: EventEnum): buildings_businesshours_mutated
  auto_translation_settings_mutated(event: EventEnum): auto_translation_settings_mutated
  app_settings_balance_translations_mutated(event: EventEnum): app_settings_balance_translations_mutated
  canteens_mutated(event: EventEnum): canteens_mutated
  canteen_food_feedback_report_schedules_report_recipients_mutated(event: EventEnum): canteen_food_feedback_report_schedules_report_recipients_mutated
  collections_dates_last_update_mutated(event: EventEnum): collections_dates_last_update_mutated
  buildings_mutated(event: EventEnum): buildings_mutated
  app_settings_housing_translations_mutated(event: EventEnum): app_settings_housing_translations_mutated
  buildings_translations_mutated(event: EventEnum): buildings_translations_mutated
  canteens_foodservice_hours_mutated(event: EventEnum): canteens_foodservice_hours_mutated
  cashregisters_mutated(event: EventEnum): cashregisters_mutated
  directus_dashboards_mutated(event: EventEnum): directus_dashboards_mutated
  directus_folders_mutated(event: EventEnum): directus_folders_mutated
  devices_mutated(event: EventEnum): devices_mutated
  directus_notifications_mutated(event: EventEnum): directus_notifications_mutated
  directus_operations_mutated(event: EventEnum): directus_operations_mutated
  directus_panels_mutated(event: EventEnum): directus_panels_mutated
  directus_permissions_mutated(event: EventEnum): directus_permissions_mutated
  directus_activity_mutated(event: EventEnum): directus_activity_mutated
  directus_flows_mutated(event: EventEnum): directus_flows_mutated
  directus_presets_mutated(event: EventEnum): directus_presets_mutated
  directus_settings_mutated(event: EventEnum): directus_settings_mutated
  directus_webhooks_mutated(event: EventEnum): directus_webhooks_mutated
  directus_roles_mutated(event: EventEnum): directus_roles_mutated
  directus_sync_id_map_mutated(event: EventEnum): directus_sync_id_map_mutated
  directus_translations_mutated(event: EventEnum): directus_translations_mutated
  directus_shares_mutated(event: EventEnum): directus_shares_mutated
  directus_versions_mutated(event: EventEnum): directus_versions_mutated
  directus_users_mutated(event: EventEnum): directus_users_mutated
  directus_revisions_mutated(event: EventEnum): directus_revisions_mutated
  foodoffers_markings_mutated(event: EventEnum): foodoffers_markings_mutated
  foods_feedbacks_labels_mutated(event: EventEnum): foods_feedbacks_labels_mutated
  foods_feedbacks_labels_translations_mutated(event: EventEnum): foods_feedbacks_labels_translations_mutated
  foods_markings_mutated(event: EventEnum): foods_markings_mutated
  markings_exclusions_mutated(event: EventEnum): markings_exclusions_mutated
  foods_mutated(event: EventEnum): foods_mutated
  foods_feedbacks_mutated(event: EventEnum): foods_feedbacks_mutated
  markings_groups_translations_mutated(event: EventEnum): markings_groups_translations_mutated
  languages_mutated(event: EventEnum): languages_mutated
  foods_translations_mutated(event: EventEnum): foods_translations_mutated
  markings_groups_mutated(event: EventEnum): markings_groups_mutated
  news_translations_mutated(event: EventEnum): news_translations_mutated
  popup_events_canteens_mutated(event: EventEnum): popup_events_canteens_mutated
  popup_events_translations_mutated(event: EventEnum): popup_events_translations_mutated
  profiles_buildings_favorites_mutated(event: EventEnum): profiles_buildings_favorites_mutated
  report_recipients_mutated(event: EventEnum): report_recipients_mutated
  utilizations_entries_mutated(event: EventEnum): utilizations_entries_mutated
  utilizations_groups_mutated(event: EventEnum): utilizations_groups_mutated
  markings_translations_mutated(event: EventEnum): markings_translations_mutated
  wikis_directus_roles_mutated(event: EventEnum): wikis_directus_roles_mutated
  profiles_markings_mutated(event: EventEnum): profiles_markings_mutated
  news_mutated(event: EventEnum): news_mutated
  wikis_mutated(event: EventEnum): wikis_mutated
  profiles_buildings_last_opened_mutated(event: EventEnum): profiles_buildings_last_opened_mutated
  push_notifications_mutated(event: EventEnum): push_notifications_mutated
  canteen_food_feedback_report_schedules_canteens_mutated(event: EventEnum): canteen_food_feedback_report_schedules_canteens_mutated
  wikis_translations_mutated(event: EventEnum): wikis_translations_mutated
  profiles_mutated(event: EventEnum): profiles_mutated
  canteens_feedbacks_labels_entries_mutated(event: EventEnum): canteens_feedbacks_labels_entries_mutated
  foods_feedbacks_labels_entries_mutated(event: EventEnum): foods_feedbacks_labels_entries_mutated
  foodoffers_categories_mutated(event: EventEnum): foodoffers_categories_mutated
  foodoffers_categories_translations_mutated(event: EventEnum): foodoffers_categories_translations_mutated
  foods_categories_translations_mutated(event: EventEnum): foods_categories_translations_mutated
  foods_categories_mutated(event: EventEnum): foods_categories_mutated
  foodoffers_mutated(event: EventEnum): foodoffers_mutated
  popup_events_mutated(event: EventEnum): popup_events_mutated
  foods_attributes_groups_translations_mutated(event: EventEnum): foods_attributes_groups_translations_mutated
  foods_attributes_values_mutated(event: EventEnum): foods_attributes_values_mutated
  directus_comments_mutated(event: EventEnum): directus_comments_mutated
  forms_mutated(event: EventEnum): forms_mutated
  form_fields_translations_mutated(event: EventEnum): form_fields_translations_mutated
  foods_attributes_translations_mutated(event: EventEnum): foods_attributes_translations_mutated
  form_answers_files_mutated(event: EventEnum): form_answers_files_mutated
  businesshours_mutated(event: EventEnum): businesshours_mutated
  form_fields_mutated(event: EventEnum): form_fields_mutated
  foods_attributes_mutated(event: EventEnum): foods_attributes_mutated
  businesshours_groups_translations_mutated(event: EventEnum): businesshours_groups_translations_mutated
  businesshours_groups_mutated(event: EventEnum): businesshours_groups_mutated
  form_answers_mutated(event: EventEnum): form_answers_mutated
  foods_attributes_groups_mutated(event: EventEnum): foods_attributes_groups_mutated
  buildings_attributes_mutated(event: EventEnum): buildings_attributes_mutated
  form_submissions_mutated(event: EventEnum): form_submissions_mutated
  form_categories_translations_mutated(event: EventEnum): form_categories_translations_mutated
  workflows_runs_mutated(event: EventEnum): workflows_runs_mutated
  workflows_mutated(event: EventEnum): workflows_mutated
  app_settings_login_screen_translations_mutated(event: EventEnum): app_settings_login_screen_translations_mutated
  form_categories_mutated(event: EventEnum): form_categories_mutated
  forms_translations_mutated(event: EventEnum): forms_translations_mutated
  app_elements_translations_mutated(event: EventEnum): app_elements_translations_mutated
  collectible_events_translations_mutated(event: EventEnum): collectible_events_translations_mutated
  form_extracts_form_fields_mutated(event: EventEnum): form_extracts_form_fields_mutated
  form_extracts_mutated(event: EventEnum): form_extracts_mutated
  mails_files_mutated(event: EventEnum): mails_files_mutated
  files_shares_mutated(event: EventEnum): files_shares_mutated
  collectible_event_participants_mutated(event: EventEnum): collectible_event_participants_mutated
  collectible_events_mutated(event: EventEnum): collectible_events_mutated
  app_elements_mutated(event: EventEnum): app_elements_mutated
}

"""The `Boolean` scalar type represents `true` or `false`."""
scalar Boolean

"""ISO8601 Date values"""
scalar Date

"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

"""BigInt value"""
scalar GraphQLBigInt

"""A Float or a String"""
scalar GraphQLStringOrFloat

"""Hashed string values"""
scalar Hash

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar ID

"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

enum EventEnum {
  create
  update
  delete
}

type apartments {
  singleflat: Boolean
  handicapped_accessible: Boolean
  family_friendly: Boolean
  sort: Int
  status: String
  external_identifier: String
  available_from: Date
  available_from_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  building(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  washingmachines(filter: washingmachines_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [washingmachines]
  washingmachines_func: count_functions
}

type apartments_aggregated {
  group: JSON
  countAll: Int
  count: apartments_aggregated_count
  countDistinct: apartments_aggregated_count
  avg: apartments_aggregated_fields
  sum: apartments_aggregated_fields
  avgDistinct: apartments_aggregated_fields
  sumDistinct: apartments_aggregated_fields
  min: apartments_aggregated_fields
  max: apartments_aggregated_fields
}

type apartments_aggregated_count {
  singleflat: Int
  handicapped_accessible: Int
  family_friendly: Int
  sort: Int
  status: Int
  external_identifier: Int
  available_from: Int
  date_created: Int
  date_updated: Int
  building: Int
  id: Int
  user_created: Int
  user_updated: Int
  washingmachines: Int
}

type apartments_aggregated_fields {
  sort: Float
}

type apartments_mutated {
  key: ID!
  event: EventEnum
  data: apartments
}

type app_elements {
  sort: Int
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: app_elements_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_elements_translations]
  translations_func: count_functions
}

type app_elements_aggregated {
  group: JSON
  countAll: Int
  count: app_elements_aggregated_count
  countDistinct: app_elements_aggregated_count
  avg: app_elements_aggregated_fields
  sum: app_elements_aggregated_fields
  avgDistinct: app_elements_aggregated_fields
  sumDistinct: app_elements_aggregated_fields
  min: app_elements_aggregated_fields
  max: app_elements_aggregated_fields
}

type app_elements_aggregated_count {
  sort: Int
  status: Int
  date_updated: Int
  date_created: Int
  user_created: Int
  user_updated: Int
  id: Int
  translations: Int
}

type app_elements_aggregated_fields {
  sort: Float
}

type app_elements_mutated {
  key: ID!
  event: EventEnum
  data: app_elements
}

type app_elements_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  popup_content: String
  content: String
  popup_button_text: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  app_elements_id(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_elements
}

type app_elements_translations_aggregated {
  group: JSON
  countAll: Int
  count: app_elements_translations_aggregated_count
  countDistinct: app_elements_translations_aggregated_count
  avg: app_elements_translations_aggregated_fields
  sum: app_elements_translations_aggregated_fields
  avgDistinct: app_elements_translations_aggregated_fields
  sumDistinct: app_elements_translations_aggregated_fields
  min: app_elements_translations_aggregated_fields
  max: app_elements_translations_aggregated_fields
}

type app_elements_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  id: Int
  popup_content: Int
  content: Int
  popup_button_text: Int
  languages_code: Int
  app_elements_id: Int
}

type app_elements_translations_aggregated_fields {
  id: Float
}

type app_elements_translations_mutated {
  key: ID!
  event: EventEnum
  data: app_elements_translations
}

type app_feedbacks {
  feedback_read_by_support: Boolean
  positive: Boolean
  response_read_by_user: Boolean
  sort: Int
  priority: Int
  response: String
  content: String
  display_scale: Float
  display_width: Float
  display_height: Float
  display_fontscale: Float
  display_pixelratio: Float
  title: String
  status: String
  device_system_version: String
  device_platform: String
  device_brand: String
  contact_email: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  user_created: String
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type app_feedbacks_aggregated {
  group: JSON
  countAll: Int
  count: app_feedbacks_aggregated_count
  countDistinct: app_feedbacks_aggregated_count
  avg: app_feedbacks_aggregated_fields
  sum: app_feedbacks_aggregated_fields
  avgDistinct: app_feedbacks_aggregated_fields
  sumDistinct: app_feedbacks_aggregated_fields
  min: app_feedbacks_aggregated_fields
  max: app_feedbacks_aggregated_fields
}

type app_feedbacks_aggregated_count {
  feedback_read_by_support: Int
  positive: Int
  response_read_by_user: Int
  sort: Int
  priority: Int
  response: Int
  content: Int
  display_scale: Int
  display_width: Int
  display_height: Int
  display_fontscale: Int
  display_pixelratio: Int
  title: Int
  status: Int
  device_system_version: Int
  device_platform: Int
  device_brand: Int
  contact_email: Int
  date_created: Int
  date_updated: Int
  id: Int
  profile: Int
  user_created: Int
  user_updated: Int
}

type app_feedbacks_aggregated_fields {
  sort: Float
  priority: Float
  display_scale: Float
  display_width: Float
  display_height: Float
  display_fontscale: Float
  display_pixelratio: Float
}

type app_feedbacks_mutated {
  key: ID!
  event: EventEnum
  data: app_feedbacks
}

type app_settings {
  """Zeigt den Bereich Wohnen in der App an"""
  housing_enabled: Boolean

  """Soll die durschnittliche Bewertung der Speisen angezeigt werden?"""
  foods_ratings_average_display: Boolean

  """Soll die Anzahl der Bewertungen angezeigt werden?"""
  foods_ratings_amount_display: Boolean
  balance_enabled: Boolean

  """Bereich "Mensa" in der App aktivieren?"""
  foods_enabled: Boolean
  course_timetable_enabled: Boolean
  animations_auto_start: Boolean

  """Zeige die Auslastungsprognose in der App"""
  utilization_display_enabled: Boolean

  """Zeige in der App den Bereich Campus an"""
  campus_enabled: Boolean
  notifications_ios_enabled: Boolean
  notifications_email_enabled: Boolean
  notifications_android_enabled: Boolean

  """Zeigt in der App den Bereich News an"""
  news_enabled: Boolean

  """Zeige den Lageplan in der App an"""
  map_enabled: Boolean
  id: ID!

  """Liste erlaubter Seiten die sich bei der App Anmelden dürfen"""
  redirect_whitelist: JSON
  redirect_whitelist_func: count_functions
  foods_area_color: String
  status: String

  """Wie sollen die Bewertungen angezeigt werden? Sterne, Daumen, ..."""
  foods_ratings_type: String
  foods_placeholder_image_thumb_hash: String
  foods_placeholder_image_remote_url: String
  foods_feedbacks_labels_type: String

  """
  URL zu einem externen Forum für Rückmeldungen und Bewertungen von Speisen
  """
  foods_feedbacks_custom_url: String
  foods_feedbacks_comments_type: String

  """Wer ist für die Inhalte der Speiseangebote verantwortlich?"""
  food_responsible_organization_name: String

  """URL bzw. Link zu der verantwortlichen Stelle"""
  food_responsible_organization_link: String
  app_stores_url_to_google: String
  app_stores_url_to_apple: String
  course_timetable_area_color: String
  balance_area_color: String
  campus_area_color: String
  news_area_color: String
  housing_area_color: String
  maintenance_end: Date
  maintenance_end_func: datetime_functions
  maintenance_start: Date
  maintenance_start_func: datetime_functions
  date_privacy_policy_updated: Date
  date_privacy_policy_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  foods_placeholder_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  company_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  placeholder_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  foodoffers_list_before_element(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_elements
  foodoffers_list_after_element(filter: app_elements_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_elements
  housing_translations(filter: app_settings_housing_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_settings_housing_translations]
  housing_translations_func: count_functions
  balance_translations(filter: app_settings_balance_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_settings_balance_translations]
  balance_translations_func: count_functions
  login_screen_translations(filter: app_settings_login_screen_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [app_settings_login_screen_translations]
  login_screen_translations_func: count_functions
}

type app_settings_balance_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  app_settings_id(filter: app_settings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_settings
  content: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
}

type app_settings_balance_translations_aggregated {
  group: JSON
  countAll: Int
  count: app_settings_balance_translations_aggregated_count
  countDistinct: app_settings_balance_translations_aggregated_count
  avg: app_settings_balance_translations_aggregated_fields
  sum: app_settings_balance_translations_aggregated_fields
  avgDistinct: app_settings_balance_translations_aggregated_fields
  sumDistinct: app_settings_balance_translations_aggregated_fields
  min: app_settings_balance_translations_aggregated_fields
  max: app_settings_balance_translations_aggregated_fields
}

type app_settings_balance_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  app_settings_id: Int
  content: Int
  languages_code: Int
}

type app_settings_balance_translations_aggregated_fields {
  id: Float
  app_settings_id: Float
}

type app_settings_balance_translations_mutated {
  key: ID!
  event: EventEnum
  data: app_settings_balance_translations
}

type app_settings_housing_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  app_settings_id(filter: app_settings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_settings
  content: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
}

type app_settings_housing_translations_aggregated {
  group: JSON
  countAll: Int
  count: app_settings_housing_translations_aggregated_count
  countDistinct: app_settings_housing_translations_aggregated_count
  avg: app_settings_housing_translations_aggregated_fields
  sum: app_settings_housing_translations_aggregated_fields
  avgDistinct: app_settings_housing_translations_aggregated_fields
  sumDistinct: app_settings_housing_translations_aggregated_fields
  min: app_settings_housing_translations_aggregated_fields
  max: app_settings_housing_translations_aggregated_fields
}

type app_settings_housing_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  app_settings_id: Int
  content: Int
  languages_code: Int
}

type app_settings_housing_translations_aggregated_fields {
  id: Float
  app_settings_id: Float
}

type app_settings_housing_translations_mutated {
  key: ID!
  event: EventEnum
  data: app_settings_housing_translations
}

type app_settings_login_screen_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  detailed_description: String
  id: ID!
  app_settings_id(filter: app_settings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): app_settings
  intro_description: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
}

type app_settings_login_screen_translations_aggregated {
  group: JSON
  countAll: Int
  count: app_settings_login_screen_translations_aggregated_count
  countDistinct: app_settings_login_screen_translations_aggregated_count
  avg: app_settings_login_screen_translations_aggregated_fields
  sum: app_settings_login_screen_translations_aggregated_fields
  avgDistinct: app_settings_login_screen_translations_aggregated_fields
  sumDistinct: app_settings_login_screen_translations_aggregated_fields
  min: app_settings_login_screen_translations_aggregated_fields
  max: app_settings_login_screen_translations_aggregated_fields
}

type app_settings_login_screen_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  detailed_description: Int
  id: Int
  app_settings_id: Int
  intro_description: Int
  languages_code: Int
}

type app_settings_login_screen_translations_aggregated_fields {
  id: Float
  app_settings_id: Float
}

type app_settings_login_screen_translations_mutated {
  key: ID!
  event: EventEnum
  data: app_settings_login_screen_translations
}

type app_settings_mutated {
  key: ID!
  event: EventEnum
  data: app_settings
}

type auto_translation_settings {
  active: Boolean
  valid_auth_key: Boolean
  used: Int
  percentage: Int
  limit: Int
  id: ID!

  """Informations about errors will be shown here."""
  informations: String

  """Informations about errors will be shown here."""
  extra: String

  """
  Authentication - You need an authentication key to access to the API. https://www.deepl.com/de/your-account/keys
  """
  auth_key: String
}

type auto_translation_settings_mutated {
  key: ID!
  event: EventEnum
  data: auto_translation_settings
}

type buildings {
  sort: Int
  coordinates: JSON
  coordinates_func: count_functions
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_of_construction: Date
  date_of_construction_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  translations(filter: buildings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [buildings_translations]
  translations_func: count_functions
  apartments(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [apartments]
  apartments_func: count_functions
  businesshours(filter: buildings_businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [buildings_businesshours]
  businesshours_func: count_functions
}

type buildings_aggregated {
  group: JSON
  countAll: Int
  count: buildings_aggregated_count
  countDistinct: buildings_aggregated_count
  avg: buildings_aggregated_fields
  sum: buildings_aggregated_fields
  avgDistinct: buildings_aggregated_fields
  sumDistinct: buildings_aggregated_fields
  min: buildings_aggregated_fields
  max: buildings_aggregated_fields
}

type buildings_aggregated_count {
  sort: Int
  coordinates: Int
  url: Int
  status: Int
  image_thumb_hash: Int
  image_remote_url: Int
  external_identifier: Int
  alias: Int
  date_updated: Int
  date_of_construction: Int
  date_created: Int
  id: Int
  image: Int
  user_created: Int
  user_updated: Int
  translations: Int
  apartments: Int
  businesshours: Int
}

type buildings_aggregated_fields {
  sort: Float
}

type buildings_attributes {
  sort: Int
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type buildings_attributes_aggregated {
  group: JSON
  countAll: Int
  count: buildings_attributes_aggregated_count
  countDistinct: buildings_attributes_aggregated_count
  avg: buildings_attributes_aggregated_fields
  sum: buildings_attributes_aggregated_fields
  avgDistinct: buildings_attributes_aggregated_fields
  sumDistinct: buildings_attributes_aggregated_fields
  min: buildings_attributes_aggregated_fields
  max: buildings_attributes_aggregated_fields
}

type buildings_attributes_aggregated_count {
  sort: Int
  status: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
}

type buildings_attributes_aggregated_fields {
  sort: Float
}

type buildings_attributes_mutated {
  key: ID!
  event: EventEnum
  data: buildings_attributes
}

type buildings_businesshours {
  id: ID!
  buildings_id(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
  businesshours_id(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours
}

type buildings_businesshours_aggregated {
  group: JSON
  countAll: Int
  count: buildings_businesshours_aggregated_count
  countDistinct: buildings_businesshours_aggregated_count
  avg: buildings_businesshours_aggregated_fields
  sum: buildings_businesshours_aggregated_fields
  avgDistinct: buildings_businesshours_aggregated_fields
  sumDistinct: buildings_businesshours_aggregated_fields
  min: buildings_businesshours_aggregated_fields
  max: buildings_businesshours_aggregated_fields
}

type buildings_businesshours_aggregated_count {
  id: Int
  buildings_id: Int
  businesshours_id: Int
}

type buildings_businesshours_aggregated_fields {
  id: Float
}

type buildings_businesshours_mutated {
  key: ID!
  event: EventEnum
  data: buildings_businesshours
}

type buildings_mutated {
  key: ID!
  event: EventEnum
  data: buildings
}

type buildings_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  content: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  buildings_id(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
}

type buildings_translations_aggregated {
  group: JSON
  countAll: Int
  count: buildings_translations_aggregated_count
  countDistinct: buildings_translations_aggregated_count
  avg: buildings_translations_aggregated_fields
  sum: buildings_translations_aggregated_fields
  avgDistinct: buildings_translations_aggregated_fields
  sumDistinct: buildings_translations_aggregated_fields
  min: buildings_translations_aggregated_fields
  max: buildings_translations_aggregated_fields
}

type buildings_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  content: Int
  languages_code: Int
  buildings_id: Int
}

type buildings_translations_aggregated_fields {
  id: Float
}

type buildings_translations_mutated {
  key: ID!
  event: EventEnum
  data: buildings_translations
}

type businesshours {
  tuesday: Boolean
  wednesday: Boolean
  friday: Boolean
  monday: Boolean
  saturday: Boolean
  sunday: Boolean
  thursday: Boolean
  sort: Int
  status: String
  time_start: Date
  time_start_func: time_functions
  time_end: Date
  time_end_func: time_functions

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_from: Date
  date_valid_from_func: date_functions

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_till: Date
  date_valid_till_func: date_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  group(filter: businesshours_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours_groups
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type businesshours_aggregated {
  group: JSON
  countAll: Int
  count: businesshours_aggregated_count
  countDistinct: businesshours_aggregated_count
  avg: businesshours_aggregated_fields
  sum: businesshours_aggregated_fields
  avgDistinct: businesshours_aggregated_fields
  sumDistinct: businesshours_aggregated_fields
  min: businesshours_aggregated_fields
  max: businesshours_aggregated_fields
}

type businesshours_aggregated_count {
  tuesday: Int
  wednesday: Int
  friday: Int
  monday: Int
  saturday: Int
  sunday: Int
  thursday: Int
  sort: Int
  status: Int
  time_start: Int
  time_end: Int

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_from: Int

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_till: Int
  date_updated: Int
  date_created: Int
  user_created: Int
  id: Int
  group: Int
  user_updated: Int
}

type businesshours_aggregated_fields {
  sort: Float
}

type businesshours_groups {
  sort: Int
  alias: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: businesshours_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [businesshours_groups_translations]
  translations_func: count_functions
}

type businesshours_groups_aggregated {
  group: JSON
  countAll: Int
  count: businesshours_groups_aggregated_count
  countDistinct: businesshours_groups_aggregated_count
  avg: businesshours_groups_aggregated_fields
  sum: businesshours_groups_aggregated_fields
  avgDistinct: businesshours_groups_aggregated_fields
  sumDistinct: businesshours_groups_aggregated_fields
  min: businesshours_groups_aggregated_fields
  max: businesshours_groups_aggregated_fields
}

type businesshours_groups_aggregated_count {
  sort: Int
  alias: Int
  status: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
  translations: Int
}

type businesshours_groups_aggregated_fields {
  sort: Float
}

type businesshours_groups_mutated {
  key: ID!
  event: EventEnum
  data: businesshours_groups
}

type businesshours_groups_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  businesshours_groups_id(filter: businesshours_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours_groups
}

type businesshours_groups_translations_aggregated {
  group: JSON
  countAll: Int
  count: businesshours_groups_translations_aggregated_count
  countDistinct: businesshours_groups_translations_aggregated_count
  avg: businesshours_groups_translations_aggregated_fields
  sum: businesshours_groups_translations_aggregated_fields
  avgDistinct: businesshours_groups_translations_aggregated_fields
  sumDistinct: businesshours_groups_translations_aggregated_fields
  min: businesshours_groups_translations_aggregated_fields
  max: businesshours_groups_translations_aggregated_fields
}

type businesshours_groups_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  id: Int
  name: Int
  languages_code: Int
  businesshours_groups_id: Int
}

type businesshours_groups_translations_aggregated_fields {
  id: Float
}

type businesshours_groups_translations_mutated {
  key: ID!
  event: EventEnum
  data: businesshours_groups_translations
}

type businesshours_mutated {
  key: ID!
  event: EventEnum
  data: businesshours
}

type canteen_food_feedback_report_schedules {
  enabled: Boolean

  """Zeige Bilder der Speisen"""
  show_images: Boolean

  """Zeige Speise Kommentare für den gewählten Zeitraum"""
  show_food_comments_for_selected_period: Boolean

  """Zeige Speise Kommentare insgesammt"""
  show_food_comments_for_all_time: Boolean
  send_on_thursdays: Boolean
  send_on_fridays: Boolean
  send_on_saturdays: Boolean
  send_on_sundays: Boolean
  report_send_successfully: Boolean

  """Zeige Rückmeldungen zu den Mensen pro Mensa: Labels"""
  show_canteen_feedbacks_also_per_canteen: Boolean

  """Zeige Mensa Rückmeldungen für Ausgewählten Zeitraum"""
  show_canteen_feedbacks_for_selected_period: Boolean

  """Zeige Mensa Rückmeldungen insgesammt"""
  show_canteen_feedbacks_for_all_time: Boolean

  """Zeige Speise Label Rückmeldungen insgesammt"""
  show_food_feedback_labels_for_all_time: Boolean

  """Zeige Speise Label Rückmeldungen für den gewählten Zeitraum"""
  show_food_feedback_labels_for_selected_period: Boolean
  send_on_mondays: Boolean
  send_on_tuesdays: Boolean
  send_on_wednesdays: Boolean
  sort: Int

  """
  Anzahl der Tage, um den der Referenztag verschoben wird. Positive Werte verschieben den Referenztag in die Zukunft, negative in die Vergangenheit.
  """
  period_days_offset: Int

  """
  Anzahl der vorherigen Tage fest, die im Bericht enthalten sein sollen, einschließlich des Referenztags. Wenn 1 gesetzt ist, wird nur der Referenztag im Bericht berücksichtigt. Der Referenztag kann durch den Offset verschoben werden.
  """
  period_days_amount: Int
  report_status_log: String
  alias: String
  status: String
  date_next_report_is_due: Date
  date_next_report_is_due_func: datetime_functions
  send_report_at_hh_mm: Date
  send_report_at_hh_mm_func: time_functions

  """Bericht einmalig senden, als wäre es Tag X"""
  send_once_now_for_reference_date: Date
  send_once_now_for_reference_date_func: date_functions
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  canteens(filter: canteen_food_feedback_report_schedules_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteen_food_feedback_report_schedules_canteens]
  canteens_func: count_functions
  recipients(filter: canteen_food_feedback_report_schedules_report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteen_food_feedback_report_schedules_report_recipients]
  recipients_func: count_functions
}

type canteen_food_feedback_report_schedules_aggregated {
  group: JSON
  countAll: Int
  count: canteen_food_feedback_report_schedules_aggregated_count
  countDistinct: canteen_food_feedback_report_schedules_aggregated_count
  avg: canteen_food_feedback_report_schedules_aggregated_fields
  sum: canteen_food_feedback_report_schedules_aggregated_fields
  avgDistinct: canteen_food_feedback_report_schedules_aggregated_fields
  sumDistinct: canteen_food_feedback_report_schedules_aggregated_fields
  min: canteen_food_feedback_report_schedules_aggregated_fields
  max: canteen_food_feedback_report_schedules_aggregated_fields
}

type canteen_food_feedback_report_schedules_aggregated_count {
  enabled: Int

  """Zeige Bilder der Speisen"""
  show_images: Int

  """Zeige Speise Kommentare für den gewählten Zeitraum"""
  show_food_comments_for_selected_period: Int

  """Zeige Speise Kommentare insgesammt"""
  show_food_comments_for_all_time: Int
  send_on_thursdays: Int
  send_on_fridays: Int
  send_on_saturdays: Int
  send_on_sundays: Int
  report_send_successfully: Int

  """Zeige Rückmeldungen zu den Mensen pro Mensa: Labels"""
  show_canteen_feedbacks_also_per_canteen: Int

  """Zeige Mensa Rückmeldungen für Ausgewählten Zeitraum"""
  show_canteen_feedbacks_for_selected_period: Int

  """Zeige Mensa Rückmeldungen insgesammt"""
  show_canteen_feedbacks_for_all_time: Int

  """Zeige Speise Label Rückmeldungen insgesammt"""
  show_food_feedback_labels_for_all_time: Int

  """Zeige Speise Label Rückmeldungen für den gewählten Zeitraum"""
  show_food_feedback_labels_for_selected_period: Int
  send_on_mondays: Int
  send_on_tuesdays: Int
  send_on_wednesdays: Int
  sort: Int

  """
  Anzahl der Tage, um den der Referenztag verschoben wird. Positive Werte verschieben den Referenztag in die Zukunft, negative in die Vergangenheit.
  """
  period_days_offset: Int

  """
  Anzahl der vorherigen Tage fest, die im Bericht enthalten sein sollen, einschließlich des Referenztags. Wenn 1 gesetzt ist, wird nur der Referenztag im Bericht berücksichtigt. Der Referenztag kann durch den Offset verschoben werden.
  """
  period_days_amount: Int
  report_status_log: Int
  alias: Int
  status: Int
  date_next_report_is_due: Int
  send_report_at_hh_mm: Int

  """Bericht einmalig senden, als wäre es Tag X"""
  send_once_now_for_reference_date: Int
  date_created: Int
  date_updated: Int
  id: Int
  user_created: Int
  user_updated: Int

  """
  Keine Auswahl: Alle Mensen betrachten | Auswahl: Nur Rückmeldungen und Angebote der ausgewählten Mensen werden betrachtet.
  """
  canteens: Int

  """Report Empfänger"""
  recipients: Int
}

type canteen_food_feedback_report_schedules_aggregated_fields {
  sort: Float

  """
  Anzahl der Tage, um den der Referenztag verschoben wird. Positive Werte verschieben den Referenztag in die Zukunft, negative in die Vergangenheit.
  """
  period_days_offset: Float

  """
  Anzahl der vorherigen Tage fest, die im Bericht enthalten sein sollen, einschließlich des Referenztags. Wenn 1 gesetzt ist, wird nur der Referenztag im Bericht berücksichtigt. Der Referenztag kann durch den Offset verschoben werden.
  """
  period_days_amount: Float
}

type canteen_food_feedback_report_schedules_canteens {
  id: ID!
  canteens_id(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  canteen_food_feedback_report_schedules_id(filter: canteen_food_feedback_report_schedules_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteen_food_feedback_report_schedules
}

type canteen_food_feedback_report_schedules_canteens_aggregated {
  group: JSON
  countAll: Int
  count: canteen_food_feedback_report_schedules_canteens_aggregated_count
  countDistinct: canteen_food_feedback_report_schedules_canteens_aggregated_count
  avg: canteen_food_feedback_report_schedules_canteens_aggregated_fields
  sum: canteen_food_feedback_report_schedules_canteens_aggregated_fields
  avgDistinct: canteen_food_feedback_report_schedules_canteens_aggregated_fields
  sumDistinct: canteen_food_feedback_report_schedules_canteens_aggregated_fields
  min: canteen_food_feedback_report_schedules_canteens_aggregated_fields
  max: canteen_food_feedback_report_schedules_canteens_aggregated_fields
}

type canteen_food_feedback_report_schedules_canteens_aggregated_count {
  id: Int
  canteens_id: Int
  canteen_food_feedback_report_schedules_id: Int
}

type canteen_food_feedback_report_schedules_canteens_aggregated_fields {
  id: Float
}

type canteen_food_feedback_report_schedules_canteens_mutated {
  key: ID!
  event: EventEnum
  data: canteen_food_feedback_report_schedules_canteens
}

type canteen_food_feedback_report_schedules_mutated {
  key: ID!
  event: EventEnum
  data: canteen_food_feedback_report_schedules
}

type canteen_food_feedback_report_schedules_report_recipients {
  id: ID!
  canteen_food_feedback_report_schedules_id(filter: canteen_food_feedback_report_schedules_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteen_food_feedback_report_schedules
  report_recipients_id(filter: report_recipients_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): report_recipients
}

type canteen_food_feedback_report_schedules_report_recipients_aggregated {
  group: JSON
  countAll: Int
  count: canteen_food_feedback_report_schedules_report_recipients_aggregated_count
  countDistinct: canteen_food_feedback_report_schedules_report_recipients_aggregated_count
  avg: canteen_food_feedback_report_schedules_report_recipients_aggregated_fields
  sum: canteen_food_feedback_report_schedules_report_recipients_aggregated_fields
  avgDistinct: canteen_food_feedback_report_schedules_report_recipients_aggregated_fields
  sumDistinct: canteen_food_feedback_report_schedules_report_recipients_aggregated_fields
  min: canteen_food_feedback_report_schedules_report_recipients_aggregated_fields
  max: canteen_food_feedback_report_schedules_report_recipients_aggregated_fields
}

type canteen_food_feedback_report_schedules_report_recipients_aggregated_count {
  id: Int
  canteen_food_feedback_report_schedules_id: Int
  report_recipients_id: Int
}

type canteen_food_feedback_report_schedules_report_recipients_aggregated_fields {
  id: Float
}

type canteen_food_feedback_report_schedules_report_recipients_mutated {
  key: ID!
  event: EventEnum
  data: canteen_food_feedback_report_schedules_report_recipients
}

type canteens {
  """
  Beim Importieren von Speiseangeboten sind die Angebote für alle Tage gültig und haben daher kein Datum.
  """
  foodoffers_import_without_date: Boolean

  """
  Beim Importieren von Speiseangeboten werden alle statischen Speiseangebote gelöscht, also die ohne Datum.
  """
  foodoffers_import_delete_all_without_dates: Boolean
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  building(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  utilization_group(filter: utilizations_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): utilizations_groups
}

type canteens_aggregated {
  group: JSON
  countAll: Int
  count: canteens_aggregated_count
  countDistinct: canteens_aggregated_count
  avg: canteens_aggregated_fields
  sum: canteens_aggregated_fields
  avgDistinct: canteens_aggregated_fields
  sumDistinct: canteens_aggregated_fields
  min: canteens_aggregated_fields
  max: canteens_aggregated_fields
}

type canteens_aggregated_count {
  """
  Beim Importieren von Speiseangeboten sind die Angebote für alle Tage gültig und haben daher kein Datum.
  """
  foodoffers_import_without_date: Int

  """
  Beim Importieren von Speiseangeboten werden alle statischen Speiseangebote gelöscht, also die ohne Datum.
  """
  foodoffers_import_delete_all_without_dates: Int
  sort: Int
  status: Int
  external_identifier: Int
  alias: Int
  date_created: Int
  date_updated: Int
  building: Int
  id: Int
  user_created: Int
  user_updated: Int
  utilization_group: Int
}

type canteens_aggregated_fields {
  sort: Float
}

type canteens_feedbacks_labels {
  sort: Int
  image_thumb_hash: String
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  status: String
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_updated: Date
  date_updated_func: datetime_functions
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  translations(filter: canteens_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [canteens_feedbacks_labels_translations]
  translations_func: count_functions
}

type canteens_feedbacks_labels_aggregated {
  group: JSON
  countAll: Int
  count: canteens_feedbacks_labels_aggregated_count
  countDistinct: canteens_feedbacks_labels_aggregated_count
  avg: canteens_feedbacks_labels_aggregated_fields
  sum: canteens_feedbacks_labels_aggregated_fields
  avgDistinct: canteens_feedbacks_labels_aggregated_fields
  sumDistinct: canteens_feedbacks_labels_aggregated_fields
  min: canteens_feedbacks_labels_aggregated_fields
  max: canteens_feedbacks_labels_aggregated_fields
}

type canteens_feedbacks_labels_aggregated_count {
  sort: Int
  image_thumb_hash: Int
  image_remote_url: Int

  """Icon from: https://icons.expo.fyi/Index"""
  icon: Int
  alias: Int
  status: Int
  date_created: Int
  id: Int
  user_created: Int
  date_updated: Int
  image: Int
  user_updated: Int
  translations: Int
}

type canteens_feedbacks_labels_aggregated_fields {
  sort: Float
}

type canteens_feedbacks_labels_entries {
  like: Boolean
  dislike: Boolean
  sort: Int
  status: String
  date: Date
  date_func: date_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  label(filter: canteens_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens_feedbacks_labels
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type canteens_feedbacks_labels_entries_aggregated {
  group: JSON
  countAll: Int
  count: canteens_feedbacks_labels_entries_aggregated_count
  countDistinct: canteens_feedbacks_labels_entries_aggregated_count
  avg: canteens_feedbacks_labels_entries_aggregated_fields
  sum: canteens_feedbacks_labels_entries_aggregated_fields
  avgDistinct: canteens_feedbacks_labels_entries_aggregated_fields
  sumDistinct: canteens_feedbacks_labels_entries_aggregated_fields
  min: canteens_feedbacks_labels_entries_aggregated_fields
  max: canteens_feedbacks_labels_entries_aggregated_fields
}

type canteens_feedbacks_labels_entries_aggregated_count {
  like: Int
  dislike: Int
  sort: Int
  status: Int
  date: Int
  date_updated: Int
  date_created: Int
  label: Int
  canteen: Int
  profile: Int
  user_updated: Int
  user_created: Int
  id: Int
}

type canteens_feedbacks_labels_entries_aggregated_fields {
  sort: Float
}

type canteens_feedbacks_labels_entries_mutated {
  key: ID!
  event: EventEnum
  data: canteens_feedbacks_labels_entries
}

type canteens_feedbacks_labels_mutated {
  key: ID!
  event: EventEnum
  data: canteens_feedbacks_labels
}

type canteens_feedbacks_labels_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  text: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  canteens_feedbacks_labels_id(filter: canteens_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens_feedbacks_labels
}

type canteens_feedbacks_labels_translations_aggregated {
  group: JSON
  countAll: Int
  count: canteens_feedbacks_labels_translations_aggregated_count
  countDistinct: canteens_feedbacks_labels_translations_aggregated_count
  avg: canteens_feedbacks_labels_translations_aggregated_fields
  sum: canteens_feedbacks_labels_translations_aggregated_fields
  avgDistinct: canteens_feedbacks_labels_translations_aggregated_fields
  sumDistinct: canteens_feedbacks_labels_translations_aggregated_fields
  min: canteens_feedbacks_labels_translations_aggregated_fields
  max: canteens_feedbacks_labels_translations_aggregated_fields
}

type canteens_feedbacks_labels_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  id: Int
  text: Int
  languages_code: Int
  canteens_feedbacks_labels_id: Int
}

type canteens_feedbacks_labels_translations_aggregated_fields {
  id: Float
}

type canteens_feedbacks_labels_translations_mutated {
  key: ID!
  event: EventEnum
  data: canteens_feedbacks_labels_translations
}

type canteens_foodservice_hours {
  id: ID!
  businesshours_id(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours
  canteens_id(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type canteens_foodservice_hours_aggregated {
  group: JSON
  countAll: Int
  count: canteens_foodservice_hours_aggregated_count
  countDistinct: canteens_foodservice_hours_aggregated_count
  avg: canteens_foodservice_hours_aggregated_fields
  sum: canteens_foodservice_hours_aggregated_fields
  avgDistinct: canteens_foodservice_hours_aggregated_fields
  sumDistinct: canteens_foodservice_hours_aggregated_fields
  min: canteens_foodservice_hours_aggregated_fields
  max: canteens_foodservice_hours_aggregated_fields
}

type canteens_foodservice_hours_aggregated_count {
  id: Int
  businesshours_id: Int
  canteens_id: Int
}

type canteens_foodservice_hours_aggregated_fields {
  id: Float
}

type canteens_foodservice_hours_during_semester_break {
  id: ID!
  businesshours_id(filter: businesshours_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): businesshours
  canteens_id(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type canteens_foodservice_hours_during_semester_break_aggregated {
  group: JSON
  countAll: Int
  count: canteens_foodservice_hours_during_semester_break_aggregated_count
  countDistinct: canteens_foodservice_hours_during_semester_break_aggregated_count
  avg: canteens_foodservice_hours_during_semester_break_aggregated_fields
  sum: canteens_foodservice_hours_during_semester_break_aggregated_fields
  avgDistinct: canteens_foodservice_hours_during_semester_break_aggregated_fields
  sumDistinct: canteens_foodservice_hours_during_semester_break_aggregated_fields
  min: canteens_foodservice_hours_during_semester_break_aggregated_fields
  max: canteens_foodservice_hours_during_semester_break_aggregated_fields
}

type canteens_foodservice_hours_during_semester_break_aggregated_count {
  id: Int
  businesshours_id: Int
  canteens_id: Int
}

type canteens_foodservice_hours_during_semester_break_aggregated_fields {
  id: Float
}

type canteens_foodservice_hours_during_semester_break_mutated {
  key: ID!
  event: EventEnum
  data: canteens_foodservice_hours_during_semester_break
}

type canteens_foodservice_hours_mutated {
  key: ID!
  event: EventEnum
  data: canteens_foodservice_hours
}

type canteens_mutated {
  key: ID!
  event: EventEnum
  data: canteens
}

type cashregisters {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  transactions(filter: cashregisters_transactions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [cashregisters_transactions]
  transactions_func: count_functions
}

type cashregisters_aggregated {
  group: JSON
  countAll: Int
  count: cashregisters_aggregated_count
  countDistinct: cashregisters_aggregated_count
  avg: cashregisters_aggregated_fields
  sum: cashregisters_aggregated_fields
  avgDistinct: cashregisters_aggregated_fields
  sumDistinct: cashregisters_aggregated_fields
  min: cashregisters_aggregated_fields
  max: cashregisters_aggregated_fields
}

type cashregisters_aggregated_count {
  sort: Int
  status: Int
  external_identifier: Int
  alias: Int
  date_updated: Int
  date_created: Int
  id: Int
  user_created: Int
  user_updated: Int
  canteen: Int
  transactions: Int
}

type cashregisters_aggregated_fields {
  sort: Float
}

type cashregisters_mutated {
  key: ID!
  event: EventEnum
  data: cashregisters
}

type cashregisters_transactions {
  weekday_index_calculated: Int
  sort: Int
  quantity: Float
  status: String
  name: String
  id: ID!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date: Date
  date_func: datetime_functions
  cashregister(filter: cashregisters_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): cashregisters
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type cashregisters_transactions_aggregated {
  group: JSON
  countAll: Int
  count: cashregisters_transactions_aggregated_count
  countDistinct: cashregisters_transactions_aggregated_count
  avg: cashregisters_transactions_aggregated_fields
  sum: cashregisters_transactions_aggregated_fields
  avgDistinct: cashregisters_transactions_aggregated_fields
  sumDistinct: cashregisters_transactions_aggregated_fields
  min: cashregisters_transactions_aggregated_fields
  max: cashregisters_transactions_aggregated_fields
}

type cashregisters_transactions_aggregated_count {
  weekday_index_calculated: Int
  sort: Int
  quantity: Int
  status: Int
  name: Int
  id: Int
  date_created: Int
  date_updated: Int
  date: Int
  cashregister: Int
  user_created: Int
  user_updated: Int
}

type cashregisters_transactions_aggregated_fields {
  weekday_index_calculated: Float
  sort: Float
  quantity: Float
}

type cashregisters_transactions_mutated {
  key: ID!
  event: EventEnum
  data: cashregisters_transactions
}

type collectible_event_participants {
  sort: Int
  points: String
  phone_number: String
  email: String
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  collectible_event(filter: collectible_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): collectible_events
}

type collectible_event_participants_aggregated {
  group: JSON
  countAll: Int
  count: collectible_event_participants_aggregated_count
  countDistinct: collectible_event_participants_aggregated_count
  avg: collectible_event_participants_aggregated_fields
  sum: collectible_event_participants_aggregated_fields
  avgDistinct: collectible_event_participants_aggregated_fields
  sumDistinct: collectible_event_participants_aggregated_fields
  min: collectible_event_participants_aggregated_fields
  max: collectible_event_participants_aggregated_fields
}

type collectible_event_participants_aggregated_count {
  sort: Int
  points: Int
  phone_number: Int
  email: Int
  status: Int
  date_created: Int
  date_updated: Int
  id: Int
  profile: Int
  user_updated: Int
  user_created: Int
  collectible_event: Int
}

type collectible_event_participants_aggregated_fields {
  sort: Float
}

type collectible_event_participants_mutated {
  key: ID!
  event: EventEnum
  data: collectible_event_participants
}

type collectible_events {
  sort: Int
  points_maximum: String
  points_minimum: String
  alias: String
  status: String
  date_start: Date
  date_start_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  date_end: Date
  date_end_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  collectible_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  monitor_background_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  participants(filter: collectible_event_participants_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectible_event_participants]
  participants_func: count_functions
  translations(filter: collectible_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [collectible_events_translations]
  translations_func: count_functions
}

type collectible_events_aggregated {
  group: JSON
  countAll: Int
  count: collectible_events_aggregated_count
  countDistinct: collectible_events_aggregated_count
  avg: collectible_events_aggregated_fields
  sum: collectible_events_aggregated_fields
  avgDistinct: collectible_events_aggregated_fields
  sumDistinct: collectible_events_aggregated_fields
  min: collectible_events_aggregated_fields
  max: collectible_events_aggregated_fields
}

type collectible_events_aggregated_count {
  sort: Int
  points_maximum: Int
  points_minimum: Int
  alias: Int
  status: Int
  date_start: Int
  date_updated: Int
  date_created: Int
  date_end: Int
  user_updated: Int
  collectible_image: Int
  monitor_background_image: Int
  id: Int
  user_created: Int
  participants: Int
  translations: Int
}

type collectible_events_aggregated_fields {
  sort: Float
}

type collectible_events_mutated {
  key: ID!
  event: EventEnum
  data: collectible_events
}

type collectible_events_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  description: String
  title: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  collectible_events_id(filter: collectible_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): collectible_events
}

type collectible_events_translations_aggregated {
  group: JSON
  countAll: Int
  count: collectible_events_translations_aggregated_count
  countDistinct: collectible_events_translations_aggregated_count
  avg: collectible_events_translations_aggregated_fields
  sum: collectible_events_translations_aggregated_fields
  avgDistinct: collectible_events_translations_aggregated_fields
  sumDistinct: collectible_events_translations_aggregated_fields
  min: collectible_events_translations_aggregated_fields
  max: collectible_events_translations_aggregated_fields
}

type collectible_events_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  description: Int
  title: Int
  languages_code: Int
  collectible_events_id: Int
}

type collectible_events_translations_aggregated_fields {
  id: Float
}

type collectible_events_translations_mutated {
  key: ID!
  event: EventEnum
  data: collectible_events_translations
}

type collections_dates_last_update {
  sort: Int
  status: String
  id: ID!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type collections_dates_last_update_aggregated {
  group: JSON
  countAll: Int
  count: collections_dates_last_update_aggregated_count
  countDistinct: collections_dates_last_update_aggregated_count
  avg: collections_dates_last_update_aggregated_fields
  sum: collections_dates_last_update_aggregated_fields
  avgDistinct: collections_dates_last_update_aggregated_fields
  sumDistinct: collections_dates_last_update_aggregated_fields
  min: collections_dates_last_update_aggregated_fields
  max: collections_dates_last_update_aggregated_fields
}

type collections_dates_last_update_aggregated_count {
  sort: Int
  status: Int
  id: Int
  date_created: Int
  date_updated: Int
  user_created: Int
  user_updated: Int
}

type collections_dates_last_update_aggregated_fields {
  sort: Float
}

type collections_dates_last_update_mutated {
  key: ID!
  event: EventEnum
  data: collections_dates_last_update
}

type count_functions {
  count: Int
}

type date_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
}

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

type delete_many {
  ids: [ID]!
}

type delete_one {
  id: ID!
}

type devices {
  is_simulator: Boolean
  is_android: Boolean
  is_ios: Boolean
  is_landscape: Boolean
  is_web: Boolean
  is_tablet: Boolean
  sort: Int
  pushTokenObj: JSON
  pushTokenObj_func: count_functions
  display_width: Float
  display_scale: Float
  display_pixelratio: Float
  display_fontscale: Float
  display_height: Float
  system_version: String
  status: String
  platform: String
  brand: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type devices_aggregated {
  group: JSON
  countAll: Int
  count: devices_aggregated_count
  countDistinct: devices_aggregated_count
  avg: devices_aggregated_fields
  sum: devices_aggregated_fields
  avgDistinct: devices_aggregated_fields
  sumDistinct: devices_aggregated_fields
  min: devices_aggregated_fields
  max: devices_aggregated_fields
}

type devices_aggregated_count {
  is_simulator: Int
  is_android: Int
  is_ios: Int
  is_landscape: Int
  is_web: Int
  is_tablet: Int
  sort: Int
  pushTokenObj: Int
  display_width: Int
  display_scale: Int
  display_pixelratio: Int
  display_fontscale: Int
  display_height: Int
  system_version: Int
  status: Int
  platform: Int
  brand: Int
  alias: Int
  date_updated: Int
  date_created: Int
  id: Int
  profile: Int
  user_created: Int
  user_updated: Int
}

type devices_aggregated_fields {
  sort: Float
  display_width: Float
  display_scale: Float
  display_pixelratio: Float
  display_fontscale: Float
  display_height: Float
}

type devices_mutated {
  key: ID!
  event: EventEnum
  data: devices
}

type directus_access {
  sort: Int
  id: ID!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
}

type directus_access_mutated {
  key: ID!
  event: EventEnum
  data: directus_access
}

type directus_activity {
  id: ID!
  user_agent: String
  origin: String
  item: String!
  collection: String!
  ip: String
  action: String!
  timestamp: Date
  timestamp_func: datetime_functions
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  revisions(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_revisions]
  revisions_func: count_functions
}

type directus_activity_mutated {
  key: ID!
  event: EventEnum
  data: directus_activity
}

type directus_comments {
  comment: String!
  item: String!
  collection: String!
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type directus_comments_mutated {
  key: ID!
  event: EventEnum
  data: directus_comments
}

type directus_dashboards {
  note: String
  color: String
  icon: String
  name: String!
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  panels(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_panels]
  panels_func: count_functions
}

type directus_dashboards_mutated {
  key: ID!
  event: EventEnum
  data: directus_dashboards
}

type directus_files {
  is_unreferenced: Boolean
  filesize: GraphQLBigInt
  focal_point_y: Int
  focal_point_x: Int
  duration: Int
  height: Int
  width: Int
  metadata: JSON
  metadata_func: count_functions
  description: String
  location: String
  tags: JSON
  tags_func: count_functions
  tus_data: JSON
  tus_data_func: count_functions
  tus_id: String
  embed: String
  charset: String
  type: String
  title: String
  filename_download: String!
  filename_disk: String
  storage: String!
  uploaded_on: Date
  uploaded_on_func: datetime_functions
  modified_on: Date
  modified_on_func: datetime_functions
  created_on: Date
  created_on_func: datetime_functions
  modified_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  uploaded_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  id: ID!
}

type directus_files_mutated {
  key: ID!
  event: EventEnum
  data: directus_files
}

type directus_flows {
  description: String
  options: JSON
  options_func: count_functions
  accountability: String
  trigger: String
  status: String
  color: String
  icon: String
  name: String!
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  operation(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  operations(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_operations]
  operations_func: count_functions
}

type directus_flows_mutated {
  key: ID!
  event: EventEnum
  data: directus_flows
}

type directus_folders {
  name: String!
  id: ID!
  parent(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
}

type directus_folders_mutated {
  key: ID!
  event: EventEnum
  data: directus_folders
}

type directus_notifications {
  id: ID!
  message: String
  item: String
  collection: String
  subject: String!
  status: String
  timestamp: Date
  timestamp_func: datetime_functions
  recipient(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  sender(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_notifications_mutated {
  key: ID!
  event: EventEnum
  data: directus_notifications
}

type directus_operations {
  position_y: Int!
  position_x: Int!
  options: JSON
  options_func: count_functions
  type: String!
  key: String!
  name: String
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  resolve(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  reject(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_operations_mutated {
  key: ID!
  event: EventEnum
  data: directus_operations
}

type directus_panels {
  show_header: Boolean!
  height: Int!
  width: Int!
  position_y: Int!
  position_x: Int!
  note: String
  options: JSON
  options_func: count_functions
  type: String!
  color: String
  icon: String
  name: String
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  dashboard(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_dashboards
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_panels_mutated {
  key: ID!
  event: EventEnum
  data: directus_panels
}

type directus_permissions {
  id: ID
  validation: JSON
  validation_func: count_functions
  fields: [String]
  permissions: JSON
  permissions_func: count_functions
  presets: JSON
  presets_func: count_functions
  action: String!
  collection: String!
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
}

type directus_permissions_mutated {
  key: ID!
  event: EventEnum
  data: directus_permissions
}

type directus_policies {
  app_access: Boolean!
  admin_access: Boolean!

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  description: String
  ip_access: [String]
  icon: String
  name: String!
  id: ID!
  permissions(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_permissions]
  permissions_func: count_functions
  users(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  users_func: count_functions
  roles(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  roles_func: count_functions
}

type directus_policies_mutated {
  key: ID!
  event: EventEnum
  data: directus_policies
}

type directus_presets {
  refresh_interval: Int
  id: ID!
  layout_options: JSON
  layout_options_func: count_functions
  filter: JSON
  filter_func: count_functions
  layout_query: JSON
  layout_query_func: count_functions
  color: String
  icon: String
  layout: String
  search: String
  collection: String
  bookmark: String
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
}

type directus_presets_mutated {
  key: ID!
  event: EventEnum
  data: directus_presets
}

type directus_revisions {
  parent(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_revisions
  activity(filter: directus_activity_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_activity
  id: ID!
  data: JSON
  data_func: count_functions
  delta: JSON
  delta_func: count_functions
  item: String!
  collection: String!
  version(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_versions
}

type directus_revisions_mutated {
  key: ID!
  event: EventEnum
  data: directus_revisions
}

type directus_roles {
  description: String
  icon: String
  name: String!
  id: ID!
  parent(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  children(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_roles]
  children_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
  users(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_users]
  users_func: count_functions
}

type directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: directus_roles
}

type directus_settings {
  """$t:fields.directus_settings.public_registration_verify_email_note"""
  public_registration_verify_email: Boolean

  """$t:fields.directus_settings.public_registration_note"""
  public_registration: Boolean!
  auth_login_attempts: Int
  id: ID!
  public_note: String
  storage_asset_presets: JSON
  storage_asset_presets_func: count_functions
  custom_css: String
  basemaps: JSON
  basemaps_func: count_functions
  module_bar: JSON
  module_bar_func: count_functions
  custom_aspect_ratios: JSON
  custom_aspect_ratios_func: count_functions
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions

  """$t:fields.directus_settings.public_registration_email_filter_note"""
  public_registration_email_filter: JSON
  public_registration_email_filter_func: count_functions
  default_theme_light: String
  default_appearance: String
  default_language: String
  project_descriptor: String
  mapbox_key: String
  storage_asset_transform: String
  auth_password_policy: String

  """$t:field_options.directus_settings.project_color_note"""
  project_color: String
  project_url: String
  project_name: String
  report_feature_url: String
  report_bug_url: String
  report_error_url: String
  default_theme_dark: String
  project_logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_foreground(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_background(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  storage_default_folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  public_favicon(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_registration_role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
}

type directus_settings_mutated {
  key: ID!
  event: EventEnum
  data: directus_settings
}

type directus_shares {
  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
  times_used: Int

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  item: String!
  collection: String!
  name: String
  date_created: Date
  date_created_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date
  date_start_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  date_end_func: datetime_functions
  id: ID!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_shares_mutated {
  key: ID!
  event: EventEnum
  data: directus_shares
}

type directus_sync_id_map {
  id: ID!
  local_id: String!
  sync_id: String!
  table: String!
  created_at: Date
  created_at_func: datetime_functions
}

type directus_sync_id_map_aggregated {
  group: JSON
  countAll: Int
  count: directus_sync_id_map_aggregated_count
  countDistinct: directus_sync_id_map_aggregated_count
  avg: directus_sync_id_map_aggregated_fields
  sum: directus_sync_id_map_aggregated_fields
  avgDistinct: directus_sync_id_map_aggregated_fields
  sumDistinct: directus_sync_id_map_aggregated_fields
  min: directus_sync_id_map_aggregated_fields
  max: directus_sync_id_map_aggregated_fields
}

type directus_sync_id_map_aggregated_count {
  id: Int
  local_id: Int
  sync_id: Int
  table: Int
  created_at: Int
}

type directus_sync_id_map_aggregated_fields {
  id: Float
}

type directus_sync_id_map_mutated {
  key: ID!
  event: EventEnum
  data: directus_sync_id_map
}

type directus_translations {
  value: String!
  key: String!
  language: String!
  id: ID!
}

type directus_translations_mutated {
  key: ID!
  event: EventEnum
  data: directus_translations
}

type directus_users {
  email_notifications: Boolean
  description: String
  auth_data: JSON
  auth_data_func: count_functions
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  tags: JSON
  tags_func: count_functions
  theme_light: String
  theme_dark: String
  appearance: String
  external_identifier: String
  provider: String
  last_page: String
  token: Hash
  status: String
  tfa_secret: Hash
  language: String
  title: String
  location: String
  password: Hash
  email: String
  last_name: String
  first_name: String
  last_access: Date
  last_access_func: datetime_functions
  id: ID!
  avatar(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
}

type directus_users_mutated {
  key: ID!
  event: EventEnum
  data: directus_users
}

type directus_versions {
  delta: JSON
  delta_func: count_functions
  hash: String
  item: String!
  collection: String!
  name: String
  key: String!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_versions_mutated {
  key: ID!
  event: EventEnum
  data: directus_versions
}

type directus_webhooks {
  was_active_before_deprecation: Boolean!
  data: Boolean
  id: ID!
  headers: JSON
  headers_func: count_functions
  collections: [String]!
  actions: [String]!
  status: String
  url: String!
  method: String
  name: String!
  migrated_flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
}

type directus_webhooks_mutated {
  key: ID!
  event: EventEnum
  data: directus_webhooks
}

type files_shares {
  sort: Int
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  date_exires_at: Date
  date_exires_at_func: datetime_functions
  file(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type files_shares_aggregated {
  group: JSON
  countAll: Int
  count: files_shares_aggregated_count
  countDistinct: files_shares_aggregated_count
  avg: files_shares_aggregated_fields
  sum: files_shares_aggregated_fields
  avgDistinct: files_shares_aggregated_fields
  sumDistinct: files_shares_aggregated_fields
  min: files_shares_aggregated_fields
  max: files_shares_aggregated_fields
}

type files_shares_aggregated_count {
  sort: Int
  status: Int
  date_updated: Int
  date_created: Int
  date_exires_at: Int

  """Klicken Sie auf die Datei um diese herunterzuladen."""
  file: Int
  user_updated: Int
  user_created: Int
  id: Int
}

type files_shares_aggregated_fields {
  sort: Float
}

type files_shares_mutated {
  key: ID!
  event: EventEnum
  data: files_shares
}

type foodoffers {
  sort: Int
  saturated_fat_g: Float
  calories_kcal: Float
  carbohydrate_g: Float
  sugar_g: Float
  fat_g: Float
  fiber_g: Float
  co2_g: Float
  co2_saving_percentage: Float
  price_employee: Float
  salt_g: Float
  price_guest: Float
  price_student: Float
  protein_g: Float
  redirect_url: String
  category: String
  co2_rating: String
  status: String
  food(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  alias: String
  date: Date
  date_func: date_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  foodoffer_category(filter: foodoffers_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers_categories
  markings(filter: foodoffers_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foodoffers_markings]
  markings_func: count_functions
  attribute_values(filter: foods_attributes_values_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_values]
  attribute_values_func: count_functions
}

type foodoffers_aggregated {
  group: JSON
  countAll: Int
  count: foodoffers_aggregated_count
  countDistinct: foodoffers_aggregated_count
  avg: foodoffers_aggregated_fields
  sum: foodoffers_aggregated_fields
  avgDistinct: foodoffers_aggregated_fields
  sumDistinct: foodoffers_aggregated_fields
  min: foodoffers_aggregated_fields
  max: foodoffers_aggregated_fields
}

type foodoffers_aggregated_count {
  sort: Int
  saturated_fat_g: Int
  calories_kcal: Int
  carbohydrate_g: Int
  sugar_g: Int
  fat_g: Int
  fiber_g: Int
  co2_g: Int
  co2_saving_percentage: Int
  price_employee: Int
  salt_g: Int
  price_guest: Int
  price_student: Int
  protein_g: Int
  redirect_url: Int
  category: Int
  co2_rating: Int
  status: Int
  food: Int
  alias: Int
  date: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
  canteen: Int
  foodoffer_category: Int
  markings: Int
  attribute_values: Int
}

type foodoffers_aggregated_fields {
  sort: Float
  saturated_fat_g: Float
  calories_kcal: Float
  carbohydrate_g: Float
  sugar_g: Float
  fat_g: Float
  fiber_g: Float
  co2_g: Float
  co2_saving_percentage: Float
  price_employee: Float
  salt_g: Float
  price_guest: Float
  price_student: Float
  protein_g: Float
}

type foodoffers_categories {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: foodoffers_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foodoffers_categories_translations]
  translations_func: count_functions
}

type foodoffers_categories_aggregated {
  group: JSON
  countAll: Int
  count: foodoffers_categories_aggregated_count
  countDistinct: foodoffers_categories_aggregated_count
  avg: foodoffers_categories_aggregated_fields
  sum: foodoffers_categories_aggregated_fields
  avgDistinct: foodoffers_categories_aggregated_fields
  sumDistinct: foodoffers_categories_aggregated_fields
  min: foodoffers_categories_aggregated_fields
  max: foodoffers_categories_aggregated_fields
}

type foodoffers_categories_aggregated_count {
  sort: Int
  status: Int
  external_identifier: Int
  alias: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
  translations: Int
}

type foodoffers_categories_aggregated_fields {
  sort: Float
}

type foodoffers_categories_mutated {
  key: ID!
  event: EventEnum
  data: foodoffers_categories
}

type foodoffers_categories_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foodoffers_categories_id(filter: foodoffers_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers_categories
}

type foodoffers_categories_translations_aggregated {
  group: JSON
  countAll: Int
  count: foodoffers_categories_translations_aggregated_count
  countDistinct: foodoffers_categories_translations_aggregated_count
  avg: foodoffers_categories_translations_aggregated_fields
  sum: foodoffers_categories_translations_aggregated_fields
  avgDistinct: foodoffers_categories_translations_aggregated_fields
  sumDistinct: foodoffers_categories_translations_aggregated_fields
  min: foodoffers_categories_translations_aggregated_fields
  max: foodoffers_categories_translations_aggregated_fields
}

type foodoffers_categories_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  id: Int
  name: Int
  languages_code: Int
  foodoffers_categories_id: Int
}

type foodoffers_categories_translations_aggregated_fields {
  id: Float
}

type foodoffers_categories_translations_mutated {
  key: ID!
  event: EventEnum
  data: foodoffers_categories_translations
}

type foodoffers_markings {
  id: ID!
  foodoffers_id(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers
  markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
}

type foodoffers_markings_aggregated {
  group: JSON
  countAll: Int
  count: foodoffers_markings_aggregated_count
  countDistinct: foodoffers_markings_aggregated_count
  avg: foodoffers_markings_aggregated_fields
  sum: foodoffers_markings_aggregated_fields
  avgDistinct: foodoffers_markings_aggregated_fields
  sumDistinct: foodoffers_markings_aggregated_fields
  min: foodoffers_markings_aggregated_fields
  max: foodoffers_markings_aggregated_fields
}

type foodoffers_markings_aggregated_count {
  id: Int
  foodoffers_id: Int
  markings_id: Int
}

type foodoffers_markings_aggregated_fields {
  id: Float
}

type foodoffers_markings_mutated {
  key: ID!
  event: EventEnum
  data: foodoffers_markings
}

type foodoffers_mutated {
  key: ID!
  event: EventEnum
  data: foodoffers
}

type foods {
  rating_amount: Int
  sort: Int
  rating_amount_legacy: Int
  sugar_g: Float
  protein_g: Float
  fiber_g: Float
  fat_g: Float
  carbohydrate_g: Float
  calories_kcal: Float
  saturated_fat_g: Float
  rating_average: Float
  salt_g: Float
  co2_saving_percentage: Float
  co2_g: Float
  rating_average_legacy: Float
  co2_rating: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  id: ID!
  extra: String
  category: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  food_category(filter: foods_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_categories
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  feedbacks(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks]
  feedbacks_func: count_functions
  markings(filter: foods_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_markings]
  markings_func: count_functions
  translations(filter: foods_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_translations]
  translations_func: count_functions
  attribute_values(filter: foods_attributes_values_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_values]
  attribute_values_func: count_functions
}

type foods_aggregated {
  group: JSON
  countAll: Int
  count: foods_aggregated_count
  countDistinct: foods_aggregated_count
  avg: foods_aggregated_fields
  sum: foods_aggregated_fields
  avgDistinct: foods_aggregated_fields
  sumDistinct: foods_aggregated_fields
  min: foods_aggregated_fields
  max: foods_aggregated_fields
}

type foods_aggregated_count {
  rating_amount: Int
  sort: Int
  rating_amount_legacy: Int
  sugar_g: Int
  protein_g: Int
  fiber_g: Int
  fat_g: Int
  carbohydrate_g: Int
  calories_kcal: Int
  saturated_fat_g: Int
  rating_average: Int
  salt_g: Int
  co2_saving_percentage: Int
  co2_g: Int
  rating_average_legacy: Int
  co2_rating: Int
  status: Int
  image_thumb_hash: Int
  image_remote_url: Int
  id: Int
  extra: Int
  category: Int
  alias: Int
  date_updated: Int
  date_created: Int
  food_category: Int
  user_updated: Int
  user_created: Int
  image: Int
  feedbacks: Int
  markings: Int
  translations: Int
  attribute_values: Int
}

type foods_aggregated_fields {
  rating_amount: Float
  sort: Float
  rating_amount_legacy: Float
  sugar_g: Float
  protein_g: Float
  fiber_g: Float
  fat_g: Float
  carbohydrate_g: Float
  calories_kcal: Float
  saturated_fat_g: Float
  rating_average: Float
  salt_g: Float
  co2_saving_percentage: Float
  co2_g: Float
  rating_average_legacy: Float
}

type foods_attributes {
  show_on_card: Boolean
  show_on_label_list: Boolean
  full_width: Boolean
  sort: Int
  suffix: String
  prefix: String
  status: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  external_identifier: String
  background_color: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  group(filter: foods_attributes_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_attributes_groups
  translations(filter: foods_attributes_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_translations]
  translations_func: count_functions
}

type foods_attributes_aggregated {
  group: JSON
  countAll: Int
  count: foods_attributes_aggregated_count
  countDistinct: foods_attributes_aggregated_count
  avg: foods_attributes_aggregated_fields
  sum: foods_attributes_aggregated_fields
  avgDistinct: foods_attributes_aggregated_fields
  sumDistinct: foods_attributes_aggregated_fields
  min: foods_attributes_aggregated_fields
  max: foods_attributes_aggregated_fields
}

type foods_attributes_aggregated_count {
  show_on_card: Int
  show_on_label_list: Int
  full_width: Int
  sort: Int
  suffix: Int
  prefix: Int
  status: Int
  image_thumb_hash: Int
  image_remote_url: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: Int
  external_identifier: Int
  background_color: Int
  alias: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  image: Int
  id: Int
  group: Int
  translations: Int
}

type foods_attributes_aggregated_fields {
  sort: Float
}

type foods_attributes_groups {
  sort: Int
  background_color: String
  image_thumb_hash: String
  image_remote_url: String
  icon_expo: String
  icon: String
  status: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  food_attributes(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes]
  food_attributes_func: count_functions
  translations(filter: foods_attributes_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_attributes_groups_translations]
  translations_func: count_functions
}

type foods_attributes_groups_aggregated {
  group: JSON
  countAll: Int
  count: foods_attributes_groups_aggregated_count
  countDistinct: foods_attributes_groups_aggregated_count
  avg: foods_attributes_groups_aggregated_fields
  sum: foods_attributes_groups_aggregated_fields
  avgDistinct: foods_attributes_groups_aggregated_fields
  sumDistinct: foods_attributes_groups_aggregated_fields
  min: foods_attributes_groups_aggregated_fields
  max: foods_attributes_groups_aggregated_fields
}

type foods_attributes_groups_aggregated_count {
  sort: Int
  background_color: Int
  image_thumb_hash: Int
  image_remote_url: Int
  icon_expo: Int
  icon: Int
  status: Int
  alias: Int
  date_updated: Int
  date_created: Int
  image: Int
  user_updated: Int
  user_created: Int
  id: Int
  food_attributes: Int
  translations: Int
}

type foods_attributes_groups_aggregated_fields {
  sort: Float
}

type foods_attributes_groups_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes_groups
}

type foods_attributes_groups_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foods_attributes_groups_id(filter: foods_attributes_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_attributes_groups
}

type foods_attributes_groups_translations_aggregated {
  group: JSON
  countAll: Int
  count: foods_attributes_groups_translations_aggregated_count
  countDistinct: foods_attributes_groups_translations_aggregated_count
  avg: foods_attributes_groups_translations_aggregated_fields
  sum: foods_attributes_groups_translations_aggregated_fields
  avgDistinct: foods_attributes_groups_translations_aggregated_fields
  sumDistinct: foods_attributes_groups_translations_aggregated_fields
  min: foods_attributes_groups_translations_aggregated_fields
  max: foods_attributes_groups_translations_aggregated_fields
}

type foods_attributes_groups_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  name: Int
  languages_code: Int
  foods_attributes_groups_id: Int
}

type foods_attributes_groups_translations_aggregated_fields {
  id: Float
}

type foods_attributes_groups_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes_groups_translations
}

type foods_attributes_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes
}

type foods_attributes_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  description: String
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foods_attributes_id(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_attributes
}

type foods_attributes_translations_aggregated {
  group: JSON
  countAll: Int
  count: foods_attributes_translations_aggregated_count
  countDistinct: foods_attributes_translations_aggregated_count
  avg: foods_attributes_translations_aggregated_fields
  sum: foods_attributes_translations_aggregated_fields
  avgDistinct: foods_attributes_translations_aggregated_fields
  sumDistinct: foods_attributes_translations_aggregated_fields
  min: foods_attributes_translations_aggregated_fields
  max: foods_attributes_translations_aggregated_fields
}

type foods_attributes_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  description: Int
  name: Int
  languages_code: Int
  foods_attributes_id: Int
}

type foods_attributes_translations_aggregated_fields {
  id: Float
}

type foods_attributes_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes_translations
}

type foods_attributes_values {
  boolean_value: Boolean
  number_value: Float
  food_id(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  string_value: String
  icon_value: String
  color_value: String
  foodoffer_id(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers
  id: ID!
  food_attribute(filter: foods_attributes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_attributes
}

type foods_attributes_values_aggregated {
  group: JSON
  countAll: Int
  count: foods_attributes_values_aggregated_count
  countDistinct: foods_attributes_values_aggregated_count
  avg: foods_attributes_values_aggregated_fields
  sum: foods_attributes_values_aggregated_fields
  avgDistinct: foods_attributes_values_aggregated_fields
  sumDistinct: foods_attributes_values_aggregated_fields
  min: foods_attributes_values_aggregated_fields
  max: foods_attributes_values_aggregated_fields
}

type foods_attributes_values_aggregated_count {
  boolean_value: Int
  number_value: Int
  food_id: Int
  string_value: Int
  icon_value: Int
  color_value: Int
  foodoffer_id: Int
  id: Int
  food_attribute: Int
}

type foods_attributes_values_aggregated_fields {
  number_value: Float
}

type foods_attributes_values_mutated {
  key: ID!
  event: EventEnum
  data: foods_attributes_values
}

type foods_categories {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: foods_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_categories_translations]
  translations_func: count_functions
}

type foods_categories_aggregated {
  group: JSON
  countAll: Int
  count: foods_categories_aggregated_count
  countDistinct: foods_categories_aggregated_count
  avg: foods_categories_aggregated_fields
  sum: foods_categories_aggregated_fields
  avgDistinct: foods_categories_aggregated_fields
  sumDistinct: foods_categories_aggregated_fields
  min: foods_categories_aggregated_fields
  max: foods_categories_aggregated_fields
}

type foods_categories_aggregated_count {
  sort: Int
  status: Int
  external_identifier: Int
  alias: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
  translations: Int
}

type foods_categories_aggregated_fields {
  sort: Float
}

type foods_categories_mutated {
  key: ID!
  event: EventEnum
  data: foods_categories
}

type foods_categories_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foods_categories_id(filter: foods_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_categories
}

type foods_categories_translations_aggregated {
  group: JSON
  countAll: Int
  count: foods_categories_translations_aggregated_count
  countDistinct: foods_categories_translations_aggregated_count
  avg: foods_categories_translations_aggregated_fields
  sum: foods_categories_translations_aggregated_fields
  avgDistinct: foods_categories_translations_aggregated_fields
  sumDistinct: foods_categories_translations_aggregated_fields
  min: foods_categories_translations_aggregated_fields
  max: foods_categories_translations_aggregated_fields
}

type foods_categories_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  name: Int
  languages_code: Int
  foods_categories_id: Int
}

type foods_categories_translations_aggregated_fields {
  id: Float
}

type foods_categories_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_categories_translations
}

type foods_feedbacks {
  notify: Boolean
  rating: Int
  sort: Int
  comment: String
  status: String
  food(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  id: ID!
  foodoffer(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type foods_feedbacks_aggregated {
  group: JSON
  countAll: Int
  count: foods_feedbacks_aggregated_count
  countDistinct: foods_feedbacks_aggregated_count
  avg: foods_feedbacks_aggregated_fields
  sum: foods_feedbacks_aggregated_fields
  avgDistinct: foods_feedbacks_aggregated_fields
  sumDistinct: foods_feedbacks_aggregated_fields
  min: foods_feedbacks_aggregated_fields
  max: foods_feedbacks_aggregated_fields
}

type foods_feedbacks_aggregated_count {
  notify: Int
  rating: Int
  sort: Int
  comment: Int
  status: Int
  food: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  profile: Int
  id: Int
  foodoffer: Int
  canteen: Int
}

type foods_feedbacks_aggregated_fields {
  rating: Float
  sort: Float
}

type foods_feedbacks_foods_feedbacks_labels {
  dislike: Boolean
  id: ID!
  foods_feedbacks_id(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_feedbacks
  foods_feedbacks_labels_id(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_feedbacks_labels
}

type foods_feedbacks_foods_feedbacks_labels_aggregated {
  group: JSON
  countAll: Int
  count: foods_feedbacks_foods_feedbacks_labels_aggregated_count
  countDistinct: foods_feedbacks_foods_feedbacks_labels_aggregated_count
  avg: foods_feedbacks_foods_feedbacks_labels_aggregated_fields
  sum: foods_feedbacks_foods_feedbacks_labels_aggregated_fields
  avgDistinct: foods_feedbacks_foods_feedbacks_labels_aggregated_fields
  sumDistinct: foods_feedbacks_foods_feedbacks_labels_aggregated_fields
  min: foods_feedbacks_foods_feedbacks_labels_aggregated_fields
  max: foods_feedbacks_foods_feedbacks_labels_aggregated_fields
}

type foods_feedbacks_foods_feedbacks_labels_aggregated_count {
  dislike: Int
  id: Int
  foods_feedbacks_id: Int
  foods_feedbacks_labels_id: Int
}

type foods_feedbacks_foods_feedbacks_labels_aggregated_fields {
  id: Float
}

type foods_feedbacks_foods_feedbacks_labels_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks_foods_feedbacks_labels
}

type foods_feedbacks_labels {
  sort: Int

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  translations(filter: foods_feedbacks_labels_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks_labels_translations]
  translations_func: count_functions
}

type foods_feedbacks_labels_aggregated {
  group: JSON
  countAll: Int
  count: foods_feedbacks_labels_aggregated_count
  countDistinct: foods_feedbacks_labels_aggregated_count
  avg: foods_feedbacks_labels_aggregated_fields
  sum: foods_feedbacks_labels_aggregated_fields
  avgDistinct: foods_feedbacks_labels_aggregated_fields
  sumDistinct: foods_feedbacks_labels_aggregated_fields
  min: foods_feedbacks_labels_aggregated_fields
  max: foods_feedbacks_labels_aggregated_fields
}

type foods_feedbacks_labels_aggregated_count {
  sort: Int

  """Icon from: https://icons.expo.fyi/Index"""
  icon: Int
  alias: Int
  status: Int
  image_thumb_hash: Int
  image_remote_url: Int
  date_created: Int
  date_updated: Int
  id: Int
  image: Int
  user_created: Int
  user_updated: Int
  translations: Int
}

type foods_feedbacks_labels_aggregated_fields {
  sort: Float
}

type foods_feedbacks_labels_entries {
  like: Boolean
  dislike: Boolean
  sort: Int
  status: String
  food(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  profile(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  label(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_feedbacks_labels
  id: ID!
  foodoffer(filter: foodoffers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foodoffers
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type foods_feedbacks_labels_entries_aggregated {
  group: JSON
  countAll: Int
  count: foods_feedbacks_labels_entries_aggregated_count
  countDistinct: foods_feedbacks_labels_entries_aggregated_count
  avg: foods_feedbacks_labels_entries_aggregated_fields
  sum: foods_feedbacks_labels_entries_aggregated_fields
  avgDistinct: foods_feedbacks_labels_entries_aggregated_fields
  sumDistinct: foods_feedbacks_labels_entries_aggregated_fields
  min: foods_feedbacks_labels_entries_aggregated_fields
  max: foods_feedbacks_labels_entries_aggregated_fields
}

type foods_feedbacks_labels_entries_aggregated_count {
  like: Int
  dislike: Int
  sort: Int
  status: Int
  food: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  profile: Int
  label: Int
  id: Int
  foodoffer: Int
  canteen: Int
}

type foods_feedbacks_labels_entries_aggregated_fields {
  sort: Float
}

type foods_feedbacks_labels_entries_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks_labels_entries
}

type foods_feedbacks_labels_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks_labels
}

type foods_feedbacks_labels_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  text: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foods_feedbacks_labels_id(filter: foods_feedbacks_labels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods_feedbacks_labels
}

type foods_feedbacks_labels_translations_aggregated {
  group: JSON
  countAll: Int
  count: foods_feedbacks_labels_translations_aggregated_count
  countDistinct: foods_feedbacks_labels_translations_aggregated_count
  avg: foods_feedbacks_labels_translations_aggregated_fields
  sum: foods_feedbacks_labels_translations_aggregated_fields
  avgDistinct: foods_feedbacks_labels_translations_aggregated_fields
  sumDistinct: foods_feedbacks_labels_translations_aggregated_fields
  min: foods_feedbacks_labels_translations_aggregated_fields
  max: foods_feedbacks_labels_translations_aggregated_fields
}

type foods_feedbacks_labels_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  id: Int
  text: Int
  languages_code: Int
  foods_feedbacks_labels_id: Int
}

type foods_feedbacks_labels_translations_aggregated_fields {
  id: Float
}

type foods_feedbacks_labels_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks_labels_translations
}

type foods_feedbacks_mutated {
  key: ID!
  event: EventEnum
  data: foods_feedbacks
}

type foods_markings {
  id: ID!
  foods_id(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
  markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
}

type foods_markings_aggregated {
  group: JSON
  countAll: Int
  count: foods_markings_aggregated_count
  countDistinct: foods_markings_aggregated_count
  avg: foods_markings_aggregated_fields
  sum: foods_markings_aggregated_fields
  avgDistinct: foods_markings_aggregated_fields
  sumDistinct: foods_markings_aggregated_fields
  min: foods_markings_aggregated_fields
  max: foods_markings_aggregated_fields
}

type foods_markings_aggregated_count {
  id: Int
  foods_id: Int
  markings_id: Int
}

type foods_markings_aggregated_fields {
  id: Float
}

type foods_markings_mutated {
  key: ID!
  event: EventEnum
  data: foods_markings
}

type foods_mutated {
  key: ID!
  event: EventEnum
  data: foods
}

type foods_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  foods_id(filter: foods_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): foods
}

type foods_translations_aggregated {
  group: JSON
  countAll: Int
  count: foods_translations_aggregated_count
  countDistinct: foods_translations_aggregated_count
  avg: foods_translations_aggregated_fields
  sum: foods_translations_aggregated_fields
  avgDistinct: foods_translations_aggregated_fields
  sumDistinct: foods_translations_aggregated_fields
  min: foods_translations_aggregated_fields
  max: foods_translations_aggregated_fields
}

type foods_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  name: Int
  languages_code: Int
  foods_id: Int
}

type foods_translations_aggregated_fields {
  id: Float
}

type foods_translations_mutated {
  key: ID!
  event: EventEnum
  data: foods_translations
}

type form_answers {
  sort: Int
  value_boolean: Boolean
  value_string: String
  value_custom: JSON
  value_custom_func: count_functions
  value_number: Float
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  value_date: Date
  value_date_func: datetime_functions
  value_image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  form_field(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_fields
  form_submission(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_submissions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  value_files(filter: form_answers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_answers_files]
  value_files_func: count_functions
}

type form_answers_aggregated {
  group: JSON
  countAll: Int
  count: form_answers_aggregated_count
  countDistinct: form_answers_aggregated_count
  avg: form_answers_aggregated_fields
  sum: form_answers_aggregated_fields
  avgDistinct: form_answers_aggregated_fields
  sumDistinct: form_answers_aggregated_fields
  min: form_answers_aggregated_fields
  max: form_answers_aggregated_fields
}

type form_answers_aggregated_count {
  sort: Int
  value_boolean: Int
  value_string: Int
  value_custom: Int
  value_number: Int
  status: Int
  date_updated: Int
  date_created: Int
  value_date: Int
  value_image: Int
  form_field: Int
  form_submission: Int
  user_updated: Int
  user_created: Int
  id: Int
  value_files: Int
}

type form_answers_aggregated_fields {
  sort: Float
  value_number: Float
}

type form_answers_files {
  id: ID!
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  form_answers_id(filter: form_answers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_answers
}

type form_answers_files_aggregated {
  group: JSON
  countAll: Int
  count: form_answers_files_aggregated_count
  countDistinct: form_answers_files_aggregated_count
  avg: form_answers_files_aggregated_fields
  sum: form_answers_files_aggregated_fields
  avgDistinct: form_answers_files_aggregated_fields
  sumDistinct: form_answers_files_aggregated_fields
  min: form_answers_files_aggregated_fields
  max: form_answers_files_aggregated_fields
}

type form_answers_files_aggregated_count {
  id: Int
  directus_files_id: Int
  form_answers_id: Int
}

type form_answers_files_aggregated_fields {
  id: Float
}

type form_answers_files_mutated {
  key: ID!
  event: EventEnum
  data: form_answers_files
}

type form_answers_mutated {
  key: ID!
  event: EventEnum
  data: form_answers
}

type form_categories {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: form_categories_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_categories_translations]
  translations_func: count_functions
  forms(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [forms]
  forms_func: count_functions
}

type form_categories_aggregated {
  group: JSON
  countAll: Int
  count: form_categories_aggregated_count
  countDistinct: form_categories_aggregated_count
  avg: form_categories_aggregated_fields
  sum: form_categories_aggregated_fields
  avgDistinct: form_categories_aggregated_fields
  sumDistinct: form_categories_aggregated_fields
  min: form_categories_aggregated_fields
  max: form_categories_aggregated_fields
}

type form_categories_aggregated_count {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: Int
  alias: Int
  status: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
  translations: Int
  forms: Int
}

type form_categories_aggregated_fields {
  sort: Float
}

type form_categories_mutated {
  key: ID!
  event: EventEnum
  data: form_categories
}

type form_categories_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  form_categories_id(filter: form_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_categories
}

type form_categories_translations_aggregated {
  group: JSON
  countAll: Int
  count: form_categories_translations_aggregated_count
  countDistinct: form_categories_translations_aggregated_count
  avg: form_categories_translations_aggregated_fields
  sum: form_categories_translations_aggregated_fields
  avgDistinct: form_categories_translations_aggregated_fields
  sumDistinct: form_categories_translations_aggregated_fields
  min: form_categories_translations_aggregated_fields
  max: form_categories_translations_aggregated_fields
}

type form_categories_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  name: Int
  languages_code: Int
  form_categories_id: Int
}

type form_categories_translations_aggregated_fields {
  id: Float
}

type form_categories_translations_mutated {
  key: ID!
  event: EventEnum
  data: form_categories_translations
}

type form_extracts {
  all_fields: Boolean
  sort: Int
  recipient_email_static: String
  alias: String
  internal_custom_id: String
  status: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  form(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): forms
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  recipient_email_field(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_fields
  recipient_user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  fields(filter: form_extracts_form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_extracts_form_fields]
  fields_func: count_functions
}

type form_extracts_aggregated {
  group: JSON
  countAll: Int
  count: form_extracts_aggregated_count
  countDistinct: form_extracts_aggregated_count
  avg: form_extracts_aggregated_fields
  sum: form_extracts_aggregated_fields
  avgDistinct: form_extracts_aggregated_fields
  sumDistinct: form_extracts_aggregated_fields
  min: form_extracts_aggregated_fields
  max: form_extracts_aggregated_fields
}

type form_extracts_aggregated_count {
  all_fields: Int
  sort: Int
  recipient_email_static: Int
  alias: Int
  internal_custom_id: Int
  status: Int
  date_created: Int
  date_updated: Int
  form: Int
  user_updated: Int
  user_created: Int
  id: Int
  recipient_email_field: Int
  recipient_user: Int
  fields: Int
}

type form_extracts_aggregated_fields {
  sort: Float
}

type form_extracts_form_fields {
  id: ID!
  form_fields_id(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_fields
  form_extracts_id(filter: form_extracts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_extracts
}

type form_extracts_form_fields_aggregated {
  group: JSON
  countAll: Int
  count: form_extracts_form_fields_aggregated_count
  countDistinct: form_extracts_form_fields_aggregated_count
  avg: form_extracts_form_fields_aggregated_fields
  sum: form_extracts_form_fields_aggregated_fields
  avgDistinct: form_extracts_form_fields_aggregated_fields
  sumDistinct: form_extracts_form_fields_aggregated_fields
  min: form_extracts_form_fields_aggregated_fields
  max: form_extracts_form_fields_aggregated_fields
}

type form_extracts_form_fields_aggregated_count {
  id: Int
  form_fields_id: Int
  form_extracts_id: Int
}

type form_extracts_form_fields_aggregated_fields {
  id: Float
}

type form_extracts_form_fields_mutated {
  key: ID!
  event: EventEnum
  data: form_extracts_form_fields
}

type form_extracts_mutated {
  key: ID!
  event: EventEnum
  data: form_extracts
}

type form_fields {
  is_required: Boolean
  is_visible_in_form: Boolean
  is_disabled: Boolean
  is_visible_in_export: Boolean
  sort: Int
  value_suffix: String
  value_prefix: String
  internal_custom_id: String
  external_export_field_name: String
  external_export_id: String
  external_import_id: String
  field_type: String
  alias: String
  background_color: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  icon: String
  status: String
  form(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): forms
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  translations(filter: form_fields_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_fields_translations]
  translations_func: count_functions
}

type form_fields_aggregated {
  group: JSON
  countAll: Int
  count: form_fields_aggregated_count
  countDistinct: form_fields_aggregated_count
  avg: form_fields_aggregated_fields
  sum: form_fields_aggregated_fields
  avgDistinct: form_fields_aggregated_fields
  sumDistinct: form_fields_aggregated_fields
  min: form_fields_aggregated_fields
  max: form_fields_aggregated_fields
}

type form_fields_aggregated_count {
  is_required: Int
  is_visible_in_form: Int
  is_disabled: Int
  is_visible_in_export: Int
  sort: Int
  value_suffix: Int
  value_prefix: Int
  internal_custom_id: Int
  external_export_field_name: Int
  external_export_id: Int
  external_import_id: Int
  field_type: Int
  alias: Int
  background_color: Int
  image_thumb_hash: Int
  image_remote_url: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: Int
  icon: Int
  status: Int
  form: Int
  date_updated: Int
  date_created: Int
  image: Int
  user_updated: Int
  user_created: Int
  id: Int
  translations: Int
}

type form_fields_aggregated_fields {
  sort: Float
}

type form_fields_mutated {
  key: ID!
  event: EventEnum
  data: form_fields
}

type form_fields_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  description: String
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  form_fields_id(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_fields
}

type form_fields_translations_aggregated {
  group: JSON
  countAll: Int
  count: form_fields_translations_aggregated_count
  countDistinct: form_fields_translations_aggregated_count
  avg: form_fields_translations_aggregated_fields
  sum: form_fields_translations_aggregated_fields
  avgDistinct: form_fields_translations_aggregated_fields
  sumDistinct: form_fields_translations_aggregated_fields
  min: form_fields_translations_aggregated_fields
  max: form_fields_translations_aggregated_fields
}

type form_fields_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  description: Int
  name: Int
  languages_code: Int
  form_fields_id: Int
}

type form_fields_translations_aggregated_fields {
  id: Float
}

type form_fields_translations_mutated {
  key: ID!
  event: EventEnum
  data: form_fields_translations
}

type form_submissions {
  sort: Int
  internal_custom_id: String
  alias: String
  state: String
  status: String
  date_locked_until: Date
  date_locked_until_func: datetime_functions
  date_submitted: Date
  date_submitted_func: datetime_functions
  date_started: Date
  date_started_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  user_locked_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  form(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): forms
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  form_answers(filter: form_answers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_answers]
  form_answers_func: count_functions
  mails(filter: mails_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [mails]
  mails_func: count_functions
}

type form_submissions_aggregated {
  group: JSON
  countAll: Int
  count: form_submissions_aggregated_count
  countDistinct: form_submissions_aggregated_count
  avg: form_submissions_aggregated_fields
  sum: form_submissions_aggregated_fields
  avgDistinct: form_submissions_aggregated_fields
  sumDistinct: form_submissions_aggregated_fields
  min: form_submissions_aggregated_fields
  max: form_submissions_aggregated_fields
}

type form_submissions_aggregated_count {
  sort: Int
  internal_custom_id: Int
  alias: Int
  state: Int
  status: Int
  date_locked_until: Int
  date_submitted: Int
  date_started: Int
  date_updated: Int
  date_created: Int
  id: Int
  user_locked_by: Int
  form: Int
  user_updated: Int
  user_created: Int
  form_answers: Int
  mails: Int
}

type form_submissions_aggregated_fields {
  sort: Float
}

type form_submissions_mutated {
  key: ID!
  event: EventEnum
  data: form_submissions
}

type forms {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  internal_custom_id: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  category(filter: form_categories_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_categories
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  form_fields(filter: form_fields_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_fields]
  form_fields_func: count_functions
  form_submissions(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [form_submissions]
  form_submissions_func: count_functions
  translations(filter: forms_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [forms_translations]
  translations_func: count_functions
}

type forms_aggregated {
  group: JSON
  countAll: Int
  count: forms_aggregated_count
  countDistinct: forms_aggregated_count
  avg: forms_aggregated_fields
  sum: forms_aggregated_fields
  avgDistinct: forms_aggregated_fields
  sumDistinct: forms_aggregated_fields
  min: forms_aggregated_fields
  max: forms_aggregated_fields
}

type forms_aggregated_count {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: Int
  alias: Int
  internal_custom_id: Int
  status: Int
  date_updated: Int
  date_created: Int
  category: Int
  user_updated: Int
  user_created: Int
  id: Int
  form_fields: Int
  form_submissions: Int
  translations: Int
}

type forms_aggregated_fields {
  sort: Float
}

type forms_mutated {
  key: ID!
  event: EventEnum
  data: forms
}

type forms_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  description: String
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  forms_id(filter: forms_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): forms
}

type forms_translations_aggregated {
  group: JSON
  countAll: Int
  count: forms_translations_aggregated_count
  countDistinct: forms_translations_aggregated_count
  avg: forms_translations_aggregated_fields
  sum: forms_translations_aggregated_fields
  avgDistinct: forms_translations_aggregated_fields
  sumDistinct: forms_translations_aggregated_fields
  min: forms_translations_aggregated_fields
  max: forms_translations_aggregated_fields
}

type forms_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  id: Int
  description: Int
  name: Int
  languages_code: Int
  forms_id: Int
}

type forms_translations_aggregated_fields {
  id: Float
}

type forms_translations_mutated {
  key: ID!
  event: EventEnum
  data: forms_translations
}

type languages {
  status: String
  name: String
  direction: String
  code: ID!
}

type languages_aggregated {
  group: JSON
  countAll: Int
  count: languages_aggregated_count
  countDistinct: languages_aggregated_count
}

type languages_aggregated_count {
  status: Int
  name: Int
  direction: Int
  code: Int
}

type languages_mutated {
  key: ID!
  event: EventEnum
  data: languages
}

type mails {
  send_attachments_as_links: Boolean
  sort: Int
  log: String
  markdown_content: String
  template_data: JSON
  template_data_func: count_functions
  send_status: String
  template_name: String
  subject: String
  recipient: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  form_submission(filter: form_submissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): form_submissions
  attachments(filter: mails_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [mails_files]
  attachments_func: count_functions
}

type mails_aggregated {
  group: JSON
  countAll: Int
  count: mails_aggregated_count
  countDistinct: mails_aggregated_count
  avg: mails_aggregated_fields
  sum: mails_aggregated_fields
  avgDistinct: mails_aggregated_fields
  sumDistinct: mails_aggregated_fields
  min: mails_aggregated_fields
  max: mails_aggregated_fields
}

type mails_aggregated_count {
  send_attachments_as_links: Int
  sort: Int
  log: Int
  markdown_content: Int
  template_data: Int
  send_status: Int
  template_name: Int
  subject: Int
  recipient: Int
  status: Int
  date_updated: Int
  date_created: Int
  id: Int
  user_created: Int
  user_updated: Int
  form_submission: Int
  attachments: Int
}

type mails_aggregated_fields {
  sort: Float
}

type mails_files {
  id: ID!
  mails_id(filter: mails_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): mails
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
}

type mails_files_aggregated {
  group: JSON
  countAll: Int
  count: mails_files_aggregated_count
  countDistinct: mails_files_aggregated_count
  avg: mails_files_aggregated_fields
  sum: mails_files_aggregated_fields
  avgDistinct: mails_files_aggregated_fields
  sumDistinct: mails_files_aggregated_fields
  min: mails_files_aggregated_fields
  max: mails_files_aggregated_fields
}

type mails_files_aggregated_count {
  id: Int
  mails_id: Int
  directus_files_id: Int
}

type mails_files_aggregated_fields {
  id: Float
}

type mails_files_mutated {
  key: ID!
  event: EventEnum
  data: mails_files
}

type mails_mutated {
  key: ID!
  event: EventEnum
  data: mails
}

type markings {
  show_on_label_list: Boolean

  """Invertiere die Hintergrundfarbe, wenn kein Bild vorhanden ist."""
  invert_background_color: Boolean

  """Keinen Rand verwenden"""
  hide_border: Boolean
  show_on_card: Boolean
  sort: Int
  status: String

  """
  Falls das Bild transparenten Hintergrund hat, kann hier die Hintergrundfarbe gesetzt werden.
  """
  background_color: String

  """Kürzel, welches Nutzern angezeigt werden soll"""
  short_code: String
  image_thumb_hash: String

  """
  Falls kein Bild hochgeladen wurde, kann auch auf ein Bild von einer anderen Seite angezeigt werden.
  """
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  external_identifier: String

  """Interne Bezeichnung - Nicht sichtbar für Nutzer"""
  alias: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  group(filter: markings_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings_groups
  id: ID!
  excluded_by_markings(filter: markings_exclusions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_exclusions]
  excluded_by_markings_func: count_functions
  translations(filter: markings_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_translations]
  translations_func: count_functions
}

type markings_aggregated {
  group: JSON
  countAll: Int
  count: markings_aggregated_count
  countDistinct: markings_aggregated_count
  avg: markings_aggregated_fields
  sum: markings_aggregated_fields
  avgDistinct: markings_aggregated_fields
  sumDistinct: markings_aggregated_fields
  min: markings_aggregated_fields
  max: markings_aggregated_fields
}

type markings_aggregated_count {
  show_on_label_list: Int

  """Invertiere die Hintergrundfarbe, wenn kein Bild vorhanden ist."""
  invert_background_color: Int

  """Keinen Rand verwenden"""
  hide_border: Int
  show_on_card: Int
  sort: Int
  status: Int

  """
  Falls das Bild transparenten Hintergrund hat, kann hier die Hintergrundfarbe gesetzt werden.
  """
  background_color: Int

  """Kürzel, welches Nutzern angezeigt werden soll"""
  short_code: Int
  image_thumb_hash: Int

  """
  Falls kein Bild hochgeladen wurde, kann auch auf ein Bild von einer anderen Seite angezeigt werden.
  """
  image_remote_url: Int

  """Icon from: https://icons.expo.fyi/Index"""
  icon: Int
  external_identifier: Int

  """Interne Bezeichnung - Nicht sichtbar für Nutzer"""
  alias: Int
  date_created: Int
  date_updated: Int
  image: Int
  user_created: Int
  user_updated: Int
  group: Int
  id: Int

  """
  Diese Kennzeichnung wird nicht angewendet, sollten bei einer Speise eine der folgenden Kennzeichnungen vorhanden sein
  """
  excluded_by_markings: Int
  translations: Int
}

type markings_aggregated_fields {
  sort: Float
}

type markings_exclusions {
  id: ID!
  restricted_markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
  restricted_by_markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
}

type markings_exclusions_aggregated {
  group: JSON
  countAll: Int
  count: markings_exclusions_aggregated_count
  countDistinct: markings_exclusions_aggregated_count
  avg: markings_exclusions_aggregated_fields
  sum: markings_exclusions_aggregated_fields
  avgDistinct: markings_exclusions_aggregated_fields
  sumDistinct: markings_exclusions_aggregated_fields
  min: markings_exclusions_aggregated_fields
  max: markings_exclusions_aggregated_fields
}

type markings_exclusions_aggregated_count {
  id: Int
  restricted_markings_id: Int
  restricted_by_markings_id: Int
}

type markings_exclusions_aggregated_fields {
  id: Float
}

type markings_exclusions_mutated {
  key: ID!
  event: EventEnum
  data: markings_exclusions
}

type markings_groups {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  translations(filter: markings_groups_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings_groups_translations]
  translations_func: count_functions
  markings(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [markings]
  markings_func: count_functions
}

type markings_groups_aggregated {
  group: JSON
  countAll: Int
  count: markings_groups_aggregated_count
  countDistinct: markings_groups_aggregated_count
  avg: markings_groups_aggregated_fields
  sum: markings_groups_aggregated_fields
  avgDistinct: markings_groups_aggregated_fields
  sumDistinct: markings_groups_aggregated_fields
  min: markings_groups_aggregated_fields
  max: markings_groups_aggregated_fields
}

type markings_groups_aggregated_count {
  sort: Int
  status: Int
  external_identifier: Int
  alias: Int
  date_updated: Int
  date_created: Int
  id: Int
  user_updated: Int
  user_created: Int
  translations: Int
  markings: Int
}

type markings_groups_aggregated_fields {
  sort: Float
}

type markings_groups_mutated {
  key: ID!
  event: EventEnum
  data: markings_groups
}

type markings_groups_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  markings_groups_id(filter: markings_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings_groups
}

type markings_groups_translations_aggregated {
  group: JSON
  countAll: Int
  count: markings_groups_translations_aggregated_count
  countDistinct: markings_groups_translations_aggregated_count
  avg: markings_groups_translations_aggregated_fields
  sum: markings_groups_translations_aggregated_fields
  avgDistinct: markings_groups_translations_aggregated_fields
  sumDistinct: markings_groups_translations_aggregated_fields
  min: markings_groups_translations_aggregated_fields
  max: markings_groups_translations_aggregated_fields
}

type markings_groups_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  name: Int
  languages_code: Int
  markings_groups_id: Int
}

type markings_groups_translations_aggregated_fields {
  id: Float
}

type markings_groups_translations_mutated {
  key: ID!
  event: EventEnum
  data: markings_groups_translations
}

type markings_mutated {
  key: ID!
  event: EventEnum
  data: markings
}

type markings_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  description: String
  name: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
}

type markings_translations_aggregated {
  group: JSON
  countAll: Int
  count: markings_translations_aggregated_count
  countDistinct: markings_translations_aggregated_count
  avg: markings_translations_aggregated_fields
  sum: markings_translations_aggregated_fields
  avgDistinct: markings_translations_aggregated_fields
  sumDistinct: markings_translations_aggregated_fields
  min: markings_translations_aggregated_fields
  max: markings_translations_aggregated_fields
}

type markings_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  id: Int
  description: Int
  name: Int
  languages_code: Int
  markings_id: Int
}

type markings_translations_aggregated_fields {
  id: Float
}

type markings_translations_mutated {
  key: ID!
  event: EventEnum
  data: markings_translations
}

type news {
  sort: Int
  categories: JSON
  categories_func: count_functions
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date: Date
  date_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  translations(filter: news_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [news_translations]
  translations_func: count_functions
}

type news_aggregated {
  group: JSON
  countAll: Int
  count: news_aggregated_count
  countDistinct: news_aggregated_count
  avg: news_aggregated_fields
  sum: news_aggregated_fields
  avgDistinct: news_aggregated_fields
  sumDistinct: news_aggregated_fields
  min: news_aggregated_fields
  max: news_aggregated_fields
}

type news_aggregated_count {
  sort: Int
  categories: Int
  url: Int
  status: Int
  image_thumb_hash: Int
  image_remote_url: Int
  external_identifier: Int
  alias: Int
  date: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  image: Int
  id: Int
  translations: Int
}

type news_aggregated_fields {
  sort: Float
}

type news_mutated {
  key: ID!
  event: EventEnum
  data: news
}

type news_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID!
  content: String
  title: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  news_id(filter: news_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): news
}

type news_translations_aggregated {
  group: JSON
  countAll: Int
  count: news_translations_aggregated_count
  countDistinct: news_translations_aggregated_count
  avg: news_translations_aggregated_fields
  sum: news_translations_aggregated_fields
  avgDistinct: news_translations_aggregated_fields
  sumDistinct: news_translations_aggregated_fields
  min: news_translations_aggregated_fields
  max: news_translations_aggregated_fields
}

type news_translations_aggregated_count {
  be_source_for_translations: Int
  let_be_translated: Int
  id: Int
  content: Int
  title: Int
  languages_code: Int
  news_id: Int
}

type news_translations_aggregated_fields {
  id: Float
}

type news_translations_mutated {
  key: ID!
  event: EventEnum
  data: news_translations
}

type popup_events {
  show_on_android: Boolean
  show_on_ios: Boolean
  show_on_web: Boolean
  send_notification: Boolean
  sort: Int
  status: String
  image_thumb_hash: String

  """Alternativ angezeigt, falls kein Bild verwendet hochgeladen wurde"""
  image_remote_url: String
  alias: String

  """* Muss gesetzt sein"""
  date_start: Date!
  date_start_func: datetime_functions

  """Falls ein Event nur bis zu einem bestimmten Zeitpunkt gültig ist."""
  date_end: Date
  date_end_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  canteens(filter: popup_events_canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [popup_events_canteens]
  canteens_func: count_functions
  translations(filter: popup_events_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [popup_events_translations]
  translations_func: count_functions
}

type popup_events_aggregated {
  group: JSON
  countAll: Int
  count: popup_events_aggregated_count
  countDistinct: popup_events_aggregated_count
  avg: popup_events_aggregated_fields
  sum: popup_events_aggregated_fields
  avgDistinct: popup_events_aggregated_fields
  sumDistinct: popup_events_aggregated_fields
  min: popup_events_aggregated_fields
  max: popup_events_aggregated_fields
}

type popup_events_aggregated_count {
  show_on_android: Int
  show_on_ios: Int
  show_on_web: Int
  send_notification: Int
  sort: Int
  status: Int
  image_thumb_hash: Int

  """Alternativ angezeigt, falls kein Bild verwendet hochgeladen wurde"""
  image_remote_url: Int
  alias: Int

  """* Muss gesetzt sein"""
  date_start: Int

  """Falls ein Event nur bis zu einem bestimmten Zeitpunkt gültig ist."""
  date_end: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  image: Int
  id: Int

  """Falls keine Mensa ausgewählt ist, wird es für alle angezeigt."""
  canteens: Int
  translations: Int
}

type popup_events_aggregated_fields {
  sort: Float
}

type popup_events_canteens {
  id: ID!
  popup_events_id(filter: popup_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): popup_events
  canteens_id(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
}

type popup_events_canteens_aggregated {
  group: JSON
  countAll: Int
  count: popup_events_canteens_aggregated_count
  countDistinct: popup_events_canteens_aggregated_count
  avg: popup_events_canteens_aggregated_fields
  sum: popup_events_canteens_aggregated_fields
  avgDistinct: popup_events_canteens_aggregated_fields
  sumDistinct: popup_events_canteens_aggregated_fields
  min: popup_events_canteens_aggregated_fields
  max: popup_events_canteens_aggregated_fields
}

type popup_events_canteens_aggregated_count {
  id: Int
  popup_events_id: Int
  canteens_id: Int
}

type popup_events_canteens_aggregated_fields {
  id: Float
}

type popup_events_canteens_mutated {
  key: ID!
  event: EventEnum
  data: popup_events_canteens
}

type popup_events_mutated {
  key: ID!
  event: EventEnum
  data: popup_events
}

type popup_events_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  content: String
  title: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  popup_events_id(filter: popup_events_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): popup_events
}

type popup_events_translations_aggregated {
  group: JSON
  countAll: Int
  count: popup_events_translations_aggregated_count
  countDistinct: popup_events_translations_aggregated_count
  avg: popup_events_translations_aggregated_fields
  sum: popup_events_translations_aggregated_fields
  avgDistinct: popup_events_translations_aggregated_fields
  sumDistinct: popup_events_translations_aggregated_fields
  min: popup_events_translations_aggregated_fields
  max: popup_events_translations_aggregated_fields
}

type popup_events_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  id: Int
  content: Int
  title: Int
  languages_code: Int
  popup_events_id: Int
}

type popup_events_translations_aggregated_fields {
  id: Float
}

type popup_events_translations_mutated {
  key: ID!
  event: EventEnum
  data: popup_events_translations
}

type profiles {
  notifiy_on_free_apartments: Boolean
  sort: Int
  course_timetable: JSON
  course_timetable_func: count_functions
  avatar: JSON
  avatar_func: count_functions
  credit_balance: Float
  credit_balance_last_transaction: Float
  status: String
  price_group: String
  nickname: String
  language(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  credit_balance_date_updated: Date
  credit_balance_date_updated_func: datetime_functions
  date_privacy_policy_accepted: Date
  date_privacy_policy_accepted_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  canteen(filter: canteens_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): canteens
  markings(filter: profiles_markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles_markings]
  markings_func: count_functions
  buildings_favorites(filter: profiles_buildings_favorites_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles_buildings_favorites]
  buildings_favorites_func: count_functions
  buildings_last_opened(filter: profiles_buildings_last_opened_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [profiles_buildings_last_opened]
  buildings_last_opened_func: count_functions
  devices(filter: devices_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [devices]
  devices_func: count_functions
  foods_feedbacks(filter: foods_feedbacks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [foods_feedbacks]
  foods_feedbacks_func: count_functions
}

type profiles_aggregated {
  group: JSON
  countAll: Int
  count: profiles_aggregated_count
  countDistinct: profiles_aggregated_count
  avg: profiles_aggregated_fields
  sum: profiles_aggregated_fields
  avgDistinct: profiles_aggregated_fields
  sumDistinct: profiles_aggregated_fields
  min: profiles_aggregated_fields
  max: profiles_aggregated_fields
}

type profiles_aggregated_count {
  notifiy_on_free_apartments: Int
  sort: Int
  course_timetable: Int
  avatar: Int
  credit_balance: Int
  credit_balance_last_transaction: Int
  status: Int
  price_group: Int
  nickname: Int
  language: Int
  credit_balance_date_updated: Int
  date_privacy_policy_accepted: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
  canteen: Int
  markings: Int
  buildings_favorites: Int
  buildings_last_opened: Int
  devices: Int
  foods_feedbacks: Int
}

type profiles_aggregated_fields {
  sort: Float
  credit_balance: Float
  credit_balance_last_transaction: Float
}

type profiles_buildings_favorites {
  id: ID!
  profiles_id(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  buildings_id(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
}

type profiles_buildings_favorites_aggregated {
  group: JSON
  countAll: Int
  count: profiles_buildings_favorites_aggregated_count
  countDistinct: profiles_buildings_favorites_aggregated_count
  avg: profiles_buildings_favorites_aggregated_fields
  sum: profiles_buildings_favorites_aggregated_fields
  avgDistinct: profiles_buildings_favorites_aggregated_fields
  sumDistinct: profiles_buildings_favorites_aggregated_fields
  min: profiles_buildings_favorites_aggregated_fields
  max: profiles_buildings_favorites_aggregated_fields
}

type profiles_buildings_favorites_aggregated_count {
  id: Int
  profiles_id: Int
  buildings_id: Int
}

type profiles_buildings_favorites_aggregated_fields {
  id: Float
}

type profiles_buildings_favorites_mutated {
  key: ID!
  event: EventEnum
  data: profiles_buildings_favorites
}

type profiles_buildings_last_opened {
  id: ID!
  profiles_id(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  buildings_id(filter: buildings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): buildings
}

type profiles_buildings_last_opened_aggregated {
  group: JSON
  countAll: Int
  count: profiles_buildings_last_opened_aggregated_count
  countDistinct: profiles_buildings_last_opened_aggregated_count
  avg: profiles_buildings_last_opened_aggregated_fields
  sum: profiles_buildings_last_opened_aggregated_fields
  avgDistinct: profiles_buildings_last_opened_aggregated_fields
  sumDistinct: profiles_buildings_last_opened_aggregated_fields
  min: profiles_buildings_last_opened_aggregated_fields
  max: profiles_buildings_last_opened_aggregated_fields
}

type profiles_buildings_last_opened_aggregated_count {
  id: Int
  profiles_id: Int
  buildings_id: Int
}

type profiles_buildings_last_opened_aggregated_fields {
  id: Float
}

type profiles_buildings_last_opened_mutated {
  key: ID!
  event: EventEnum
  data: profiles_buildings_last_opened
}

type profiles_markings {
  dislike: Boolean
  like: Boolean
  id: ID!
  profiles_id(filter: profiles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): profiles
  markings_id(filter: markings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): markings
}

type profiles_markings_aggregated {
  group: JSON
  countAll: Int
  count: profiles_markings_aggregated_count
  countDistinct: profiles_markings_aggregated_count
  avg: profiles_markings_aggregated_fields
  sum: profiles_markings_aggregated_fields
  avgDistinct: profiles_markings_aggregated_fields
  sumDistinct: profiles_markings_aggregated_fields
  min: profiles_markings_aggregated_fields
  max: profiles_markings_aggregated_fields
}

type profiles_markings_aggregated_count {
  dislike: Int
  like: Int
  id: Int
  profiles_id: Int
  markings_id: Int
}

type profiles_markings_aggregated_fields {
  id: Float
}

type profiles_markings_mutated {
  key: ID!
  event: EventEnum
  data: profiles_markings
}

type profiles_mutated {
  key: ID!
  event: EventEnum
  data: profiles
}

type push_notifications {
  ios_play_sound: Boolean
  ios_badge_count: Int
  message_ttl: Int
  sort: Int
  message_data: JSON
  message_data_func: count_functions
  status_log: String

  """
  Format: ExponentPushToken[xxxxxxxxxxxxxxxxx] with prefix and brackets, then press enter for more
  """
  expo_push_tokens: JSON
  expo_push_tokens_func: count_functions
  message_title: String
  message_body: String
  ios_message_subtitle: String
  expo_access_token: String
  android_channel_id: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type push_notifications_aggregated {
  group: JSON
  countAll: Int
  count: push_notifications_aggregated_count
  countDistinct: push_notifications_aggregated_count
  avg: push_notifications_aggregated_fields
  sum: push_notifications_aggregated_fields
  avgDistinct: push_notifications_aggregated_fields
  sumDistinct: push_notifications_aggregated_fields
  min: push_notifications_aggregated_fields
  max: push_notifications_aggregated_fields
}

type push_notifications_aggregated_count {
  ios_play_sound: Int
  ios_badge_count: Int
  message_ttl: Int
  sort: Int
  message_data: Int
  status_log: Int

  """
  Format: ExponentPushToken[xxxxxxxxxxxxxxxxx] with prefix and brackets, then press enter for more
  """
  expo_push_tokens: Int
  message_title: Int
  message_body: Int
  ios_message_subtitle: Int
  expo_access_token: Int
  android_channel_id: Int
  status: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
}

type push_notifications_aggregated_fields {
  ios_badge_count: Float
  message_ttl: Float
  sort: Float
}

type push_notifications_mutated {
  key: ID!
  event: EventEnum
  data: push_notifications
}

type report_recipients {
  sort: Int
  mail: String
  name: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type report_recipients_aggregated {
  group: JSON
  countAll: Int
  count: report_recipients_aggregated_count
  countDistinct: report_recipients_aggregated_count
  avg: report_recipients_aggregated_fields
  sum: report_recipients_aggregated_fields
  avgDistinct: report_recipients_aggregated_fields
  sumDistinct: report_recipients_aggregated_fields
  min: report_recipients_aggregated_fields
  max: report_recipients_aggregated_fields
}

type report_recipients_aggregated_count {
  sort: Int
  mail: Int
  name: Int
  status: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
}

type report_recipients_aggregated_fields {
  sort: Float
}

type report_recipients_mutated {
  key: ID!
  event: EventEnum
  data: report_recipients
}

type time_functions {
  hour: Int
  minute: Int
  second: Int
}

type utilizations_entries {
  value_real: Int
  sort: Int
  value_forecast_current: Int
  status: String
  date_end: Date
  date_end_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  date_start: Date
  date_start_func: datetime_functions
  utilization_group(filter: utilizations_groups_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): utilizations_groups
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type utilizations_entries_aggregated {
  group: JSON
  countAll: Int
  count: utilizations_entries_aggregated_count
  countDistinct: utilizations_entries_aggregated_count
  avg: utilizations_entries_aggregated_fields
  sum: utilizations_entries_aggregated_fields
  avgDistinct: utilizations_entries_aggregated_fields
  sumDistinct: utilizations_entries_aggregated_fields
  min: utilizations_entries_aggregated_fields
  max: utilizations_entries_aggregated_fields
}

type utilizations_entries_aggregated_count {
  value_real: Int
  sort: Int
  value_forecast_current: Int
  status: Int
  date_end: Int
  date_updated: Int
  date_created: Int
  date_start: Int
  utilization_group: Int
  user_updated: Int
  user_created: Int
  id: Int
}

type utilizations_entries_aggregated_fields {
  value_real: Float
  sort: Float
  value_forecast_current: Float
}

type utilizations_entries_mutated {
  key: ID!
  event: EventEnum
  data: utilizations_entries
}

type utilizations_groups {
  sort: Int
  threshold_until_low: Int
  threshold_until_medium: Int
  threshold_until_max: Int
  all_time_high: Int
  threshold_until_high: Int
  status: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  utilization_entries(filter: utilizations_entries_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [utilizations_entries]
  utilization_entries_func: count_functions
}

type utilizations_groups_aggregated {
  group: JSON
  countAll: Int
  count: utilizations_groups_aggregated_count
  countDistinct: utilizations_groups_aggregated_count
  avg: utilizations_groups_aggregated_fields
  sum: utilizations_groups_aggregated_fields
  avgDistinct: utilizations_groups_aggregated_fields
  sumDistinct: utilizations_groups_aggregated_fields
  min: utilizations_groups_aggregated_fields
  max: utilizations_groups_aggregated_fields
}

type utilizations_groups_aggregated_count {
  sort: Int
  threshold_until_low: Int
  threshold_until_medium: Int
  threshold_until_max: Int
  all_time_high: Int
  threshold_until_high: Int
  status: Int
  alias: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  id: Int
  utilization_entries: Int
}

type utilizations_groups_aggregated_fields {
  sort: Float
  threshold_until_low: Float
  threshold_until_medium: Float
  threshold_until_max: Float
  all_time_high: Float
  threshold_until_high: Float
}

type utilizations_groups_mutated {
  key: ID!
  event: EventEnum
  data: utilizations_groups
}

""""""
type version_apartments {
  singleflat: Boolean
  handicapped_accessible: Boolean
  family_friendly: Boolean
  sort: Int
  status: String
  external_identifier: String
  available_from: Date
  date_created: Date
  date_updated: Date
  building: JSON
  id: ID
  user_created: JSON
  user_updated: JSON
  washingmachines: JSON
}

""""""
type version_app_elements {
  sort: Int
  status: String
  date_updated: Date
  date_created: Date
  user_created: JSON
  user_updated: JSON
  id: ID
  translations: JSON
}

""""""
type version_app_elements_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  popup_content: String
  content: String
  popup_button_text: String
  languages_code: JSON
  app_elements_id: JSON
}

""""""
type version_app_feedbacks {
  feedback_read_by_support: Boolean
  positive: Boolean
  response_read_by_user: Boolean
  sort: Int
  priority: Int
  response: String
  content: String
  display_scale: Float
  display_width: Float
  display_height: Float
  display_fontscale: Float
  display_pixelratio: Float
  title: String
  status: String
  device_system_version: String
  device_platform: String
  device_brand: String
  contact_email: String
  date_created: Date
  date_updated: Date
  id: ID
  profile: JSON
  user_created: String
  user_updated: JSON
}

""""""
type version_app_settings {
  """Zeigt den Bereich Wohnen in der App an"""
  housing_enabled: Boolean

  """Soll die durschnittliche Bewertung der Speisen angezeigt werden?"""
  foods_ratings_average_display: Boolean

  """Soll die Anzahl der Bewertungen angezeigt werden?"""
  foods_ratings_amount_display: Boolean
  balance_enabled: Boolean

  """Bereich "Mensa" in der App aktivieren?"""
  foods_enabled: Boolean
  course_timetable_enabled: Boolean
  animations_auto_start: Boolean

  """Zeige die Auslastungsprognose in der App"""
  utilization_display_enabled: Boolean

  """Zeige in der App den Bereich Campus an"""
  campus_enabled: Boolean
  notifications_ios_enabled: Boolean
  notifications_email_enabled: Boolean
  notifications_android_enabled: Boolean

  """Zeigt in der App den Bereich News an"""
  news_enabled: Boolean

  """Zeige den Lageplan in der App an"""
  map_enabled: Boolean
  id: ID

  """Liste erlaubter Seiten die sich bei der App Anmelden dürfen"""
  redirect_whitelist: JSON
  foods_area_color: String
  status: String

  """Wie sollen die Bewertungen angezeigt werden? Sterne, Daumen, ..."""
  foods_ratings_type: String
  foods_placeholder_image_thumb_hash: String
  foods_placeholder_image_remote_url: String
  foods_feedbacks_labels_type: String

  """
  URL zu einem externen Forum für Rückmeldungen und Bewertungen von Speisen
  """
  foods_feedbacks_custom_url: String
  foods_feedbacks_comments_type: String

  """Wer ist für die Inhalte der Speiseangebote verantwortlich?"""
  food_responsible_organization_name: String

  """URL bzw. Link zu der verantwortlichen Stelle"""
  food_responsible_organization_link: String
  app_stores_url_to_google: String
  app_stores_url_to_apple: String
  course_timetable_area_color: String
  balance_area_color: String
  campus_area_color: String
  news_area_color: String
  housing_area_color: String
  maintenance_end: Date
  maintenance_start: Date
  date_privacy_policy_updated: Date
  date_created: Date
  date_updated: Date
  foods_placeholder_image: JSON
  user_created: JSON
  user_updated: JSON
  company_image: JSON
  placeholder_image: JSON
  foodoffers_list_before_element: JSON
  foodoffers_list_after_element: JSON
  housing_translations: JSON
  balance_translations: JSON
  login_screen_translations: JSON
}

""""""
type version_app_settings_balance_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  app_settings_id: JSON
  content: String
  languages_code: JSON
}

""""""
type version_app_settings_housing_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  app_settings_id: JSON
  content: String
  languages_code: JSON
}

""""""
type version_app_settings_login_screen_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  detailed_description: String
  id: ID
  app_settings_id: JSON
  intro_description: String
  languages_code: JSON
}

""""""
type version_auto_translation_settings {
  active: Boolean
  valid_auth_key: Boolean
  used: Int
  percentage: Int
  limit: Int
  id: ID

  """Informations about errors will be shown here."""
  informations: String

  """Informations about errors will be shown here."""
  extra: String

  """
  Authentication - You need an authentication key to access to the API. https://www.deepl.com/de/your-account/keys
  """
  auth_key: String
}

""""""
type version_buildings {
  sort: Int
  coordinates: JSON
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_of_construction: Date
  date_created: Date
  id: ID
  image: JSON
  user_created: JSON
  user_updated: JSON
  translations: JSON
  apartments: JSON
  businesshours: JSON
}

""""""
type version_buildings_attributes {
  sort: Int
  status: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
}

""""""
type version_buildings_businesshours {
  id: ID
  buildings_id: JSON
  businesshours_id: JSON
}

""""""
type version_buildings_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  content: String
  languages_code: JSON
  buildings_id: JSON
}

""""""
type version_businesshours {
  tuesday: Boolean
  wednesday: Boolean
  friday: Boolean
  monday: Boolean
  saturday: Boolean
  sunday: Boolean
  thursday: Boolean
  sort: Int
  status: String
  time_start: Date
  time_end: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_from: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_till: Date
  date_updated: Date
  date_created: Date
  user_created: JSON
  id: ID
  group: JSON
  user_updated: JSON
}

""""""
type version_businesshours_groups {
  sort: Int
  alias: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
  translations: JSON
}

""""""
type version_businesshours_groups_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: JSON
  businesshours_groups_id: JSON
}

""""""
type version_canteen_food_feedback_report_schedules {
  enabled: Boolean

  """Zeige Bilder der Speisen"""
  show_images: Boolean

  """Zeige Speise Kommentare für den gewählten Zeitraum"""
  show_food_comments_for_selected_period: Boolean

  """Zeige Speise Kommentare insgesammt"""
  show_food_comments_for_all_time: Boolean
  send_on_thursdays: Boolean
  send_on_fridays: Boolean
  send_on_saturdays: Boolean
  send_on_sundays: Boolean
  report_send_successfully: Boolean

  """Zeige Rückmeldungen zu den Mensen pro Mensa: Labels"""
  show_canteen_feedbacks_also_per_canteen: Boolean

  """Zeige Mensa Rückmeldungen für Ausgewählten Zeitraum"""
  show_canteen_feedbacks_for_selected_period: Boolean

  """Zeige Mensa Rückmeldungen insgesammt"""
  show_canteen_feedbacks_for_all_time: Boolean

  """Zeige Speise Label Rückmeldungen insgesammt"""
  show_food_feedback_labels_for_all_time: Boolean

  """Zeige Speise Label Rückmeldungen für den gewählten Zeitraum"""
  show_food_feedback_labels_for_selected_period: Boolean
  send_on_mondays: Boolean
  send_on_tuesdays: Boolean
  send_on_wednesdays: Boolean
  sort: Int

  """
  Anzahl der Tage, um den der Referenztag verschoben wird. Positive Werte verschieben den Referenztag in die Zukunft, negative in die Vergangenheit.
  """
  period_days_offset: Int

  """
  Anzahl der vorherigen Tage fest, die im Bericht enthalten sein sollen, einschließlich des Referenztags. Wenn 1 gesetzt ist, wird nur der Referenztag im Bericht berücksichtigt. Der Referenztag kann durch den Offset verschoben werden.
  """
  period_days_amount: Int
  report_status_log: String
  alias: String
  status: String
  date_next_report_is_due: Date
  send_report_at_hh_mm: Date

  """Bericht einmalig senden, als wäre es Tag X"""
  send_once_now_for_reference_date: Date
  date_created: Date
  date_updated: Date
  id: ID
  user_created: JSON
  user_updated: JSON
  canteens: JSON
  recipients: JSON
}

""""""
type version_canteen_food_feedback_report_schedules_canteens {
  id: ID
  canteens_id: JSON
  canteen_food_feedback_report_schedules_id: JSON
}

""""""
type version_canteen_food_feedback_report_schedules_report_recipients {
  id: ID
  canteen_food_feedback_report_schedules_id: JSON
  report_recipients_id: JSON
}

""""""
type version_canteens {
  """
  Beim Importieren von Speiseangeboten sind die Angebote für alle Tage gültig und haben daher kein Datum.
  """
  foodoffers_import_without_date: Boolean

  """
  Beim Importieren von Speiseangeboten werden alle statischen Speiseangebote gelöscht, also die ohne Datum.
  """
  foodoffers_import_delete_all_without_dates: Boolean
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_created: Date
  date_updated: Date
  building: JSON
  id: ID
  user_created: JSON
  user_updated: JSON
  utilization_group: JSON
}

""""""
type version_canteens_feedbacks_labels {
  sort: Int
  image_thumb_hash: String
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  status: String
  date_created: Date
  id: ID
  user_created: JSON
  date_updated: Date
  image: JSON
  user_updated: JSON
  translations: JSON
}

""""""
type version_canteens_feedbacks_labels_entries {
  like: Boolean
  dislike: Boolean
  sort: Int
  status: String
  date: Date
  date_updated: Date
  date_created: Date
  label: JSON
  canteen: JSON
  profile: JSON
  user_updated: JSON
  user_created: JSON
  id: ID
}

""""""
type version_canteens_feedbacks_labels_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  text: String
  languages_code: JSON
  canteens_feedbacks_labels_id: JSON
}

""""""
type version_canteens_foodservice_hours {
  id: ID
  businesshours_id: JSON
  canteens_id: JSON
}

""""""
type version_canteens_foodservice_hours_during_semester_break {
  id: ID
  businesshours_id: JSON
  canteens_id: JSON
}

""""""
type version_cashregisters {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  id: ID
  user_created: JSON
  user_updated: JSON
  canteen: JSON
  transactions: JSON
}

""""""
type version_cashregisters_transactions {
  weekday_index_calculated: Int
  sort: Int
  quantity: Float
  status: String
  name: String
  id: ID
  date_created: Date
  date_updated: Date
  date: Date
  cashregister: JSON
  user_created: JSON
  user_updated: JSON
}

""""""
type version_collectible_event_participants {
  sort: Int
  points: String
  phone_number: String
  email: String
  status: String
  date_created: Date
  date_updated: Date
  id: ID
  profile: JSON
  user_updated: JSON
  user_created: JSON
  collectible_event: JSON
}

""""""
type version_collectible_events {
  sort: Int
  points_maximum: String
  points_minimum: String
  alias: String
  status: String
  date_start: Date
  date_updated: Date
  date_created: Date
  date_end: Date
  user_updated: JSON
  collectible_image: JSON
  monitor_background_image: JSON
  id: ID
  user_created: JSON
  participants: JSON
  translations: JSON
}

""""""
type version_collectible_events_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  description: String
  title: String
  languages_code: JSON
  collectible_events_id: JSON
}

""""""
type version_collections_dates_last_update {
  sort: Int
  status: String
  id: ID
  date_created: Date
  date_updated: Date
  user_created: JSON
  user_updated: JSON
}

""""""
type version_devices {
  is_simulator: Boolean
  is_android: Boolean
  is_ios: Boolean
  is_landscape: Boolean
  is_web: Boolean
  is_tablet: Boolean
  sort: Int
  pushTokenObj: JSON
  display_width: Float
  display_scale: Float
  display_pixelratio: Float
  display_fontscale: Float
  display_height: Float
  system_version: String
  status: String
  platform: String
  brand: String
  alias: String
  date_updated: Date
  date_created: Date
  id: ID
  profile: JSON
  user_created: JSON
  user_updated: JSON
}

""""""
type version_directus_sync_id_map {
  id: ID
  local_id: String
  sync_id: String
  table: String
  created_at: Date
}

""""""
type version_files_shares {
  sort: Int
  status: String
  date_updated: Date
  date_created: Date
  date_exires_at: Date
  file: JSON
  user_updated: JSON
  user_created: JSON
  id: ID
}

""""""
type version_foodoffers {
  sort: Int
  saturated_fat_g: Float
  calories_kcal: Float
  carbohydrate_g: Float
  sugar_g: Float
  fat_g: Float
  fiber_g: Float
  co2_g: Float
  co2_saving_percentage: Float
  price_employee: Float
  salt_g: Float
  price_guest: Float
  price_student: Float
  protein_g: Float
  redirect_url: String
  category: String
  co2_rating: String
  status: String
  food: JSON
  alias: String
  date: Date
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
  canteen: JSON
  foodoffer_category: JSON
  markings: JSON
  attribute_values: JSON
}

""""""
type version_foodoffers_categories {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
  translations: JSON
}

""""""
type version_foodoffers_categories_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: JSON
  foodoffers_categories_id: JSON
}

""""""
type version_foodoffers_markings {
  id: ID
  foodoffers_id: JSON
  markings_id: JSON
}

""""""
type version_foods {
  rating_amount: Int
  sort: Int
  rating_amount_legacy: Int
  sugar_g: Float
  protein_g: Float
  fiber_g: Float
  fat_g: Float
  carbohydrate_g: Float
  calories_kcal: Float
  saturated_fat_g: Float
  rating_average: Float
  salt_g: Float
  co2_saving_percentage: Float
  co2_g: Float
  rating_average_legacy: Float
  co2_rating: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  id: ID
  extra: String
  category: String
  alias: String
  date_updated: Date
  date_created: Date
  food_category: JSON
  user_updated: JSON
  user_created: JSON
  image: JSON
  feedbacks: JSON
  markings: JSON
  translations: JSON
  attribute_values: JSON
}

""""""
type version_foods_attributes {
  show_on_card: Boolean
  show_on_label_list: Boolean
  full_width: Boolean
  sort: Int
  suffix: String
  prefix: String
  status: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  external_identifier: String
  background_color: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  image: JSON
  id: ID
  group: JSON
  translations: JSON
}

""""""
type version_foods_attributes_groups {
  sort: Int
  background_color: String
  image_thumb_hash: String
  image_remote_url: String
  icon_expo: String
  icon: String
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  image: JSON
  user_updated: JSON
  user_created: JSON
  id: ID
  food_attributes: JSON
  translations: JSON
}

""""""
type version_foods_attributes_groups_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: JSON
  foods_attributes_groups_id: JSON
}

""""""
type version_foods_attributes_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  description: String
  name: String
  languages_code: JSON
  foods_attributes_id: JSON
}

""""""
type version_foods_attributes_values {
  boolean_value: Boolean
  number_value: Float
  food_id: JSON
  string_value: String
  icon_value: String
  color_value: String
  foodoffer_id: JSON
  id: ID
  food_attribute: JSON
}

""""""
type version_foods_categories {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
  translations: JSON
}

""""""
type version_foods_categories_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: JSON
  foods_categories_id: JSON
}

""""""
type version_foods_feedbacks {
  notify: Boolean
  rating: Int
  sort: Int
  comment: String
  status: String
  food: JSON
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  profile: JSON
  id: ID
  foodoffer: JSON
  canteen: JSON
}

""""""
type version_foods_feedbacks_foods_feedbacks_labels {
  dislike: Boolean
  id: ID
  foods_feedbacks_id: JSON
  foods_feedbacks_labels_id: JSON
}

""""""
type version_foods_feedbacks_labels {
  sort: Int

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  date_created: Date
  date_updated: Date
  id: ID
  image: JSON
  user_created: JSON
  user_updated: JSON
  translations: JSON
}

""""""
type version_foods_feedbacks_labels_entries {
  like: Boolean
  dislike: Boolean
  sort: Int
  status: String
  food: JSON
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  profile: JSON
  label: JSON
  id: ID
  foodoffer: JSON
  canteen: JSON
}

""""""
type version_foods_feedbacks_labels_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  text: String
  languages_code: JSON
  foods_feedbacks_labels_id: JSON
}

""""""
type version_foods_markings {
  id: ID
  foods_id: JSON
  markings_id: JSON
}

""""""
type version_foods_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: JSON
  foods_id: JSON
}

""""""
type version_form_answers {
  sort: Int
  value_boolean: Boolean
  value_string: String
  value_custom: JSON
  value_number: Float
  status: String
  date_updated: Date
  date_created: Date
  value_date: Date
  value_image: JSON
  form_field: JSON
  form_submission: JSON
  user_updated: JSON
  user_created: JSON
  id: ID
  value_files: JSON
}

""""""
type version_form_answers_files {
  id: ID
  directus_files_id: JSON
  form_answers_id: JSON
}

""""""
type version_form_categories {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
  translations: JSON
  forms: JSON
}

""""""
type version_form_categories_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: JSON
  form_categories_id: JSON
}

""""""
type version_form_extracts {
  all_fields: Boolean
  sort: Int
  recipient_email_static: String
  alias: String
  internal_custom_id: String
  status: String
  date_created: Date
  date_updated: Date
  form: JSON
  user_updated: JSON
  user_created: JSON
  id: ID
  recipient_email_field: JSON
  recipient_user: JSON
  fields: JSON
}

""""""
type version_form_extracts_form_fields {
  id: ID
  form_fields_id: JSON
  form_extracts_id: JSON
}

""""""
type version_form_fields {
  is_required: Boolean
  is_visible_in_form: Boolean
  is_disabled: Boolean
  is_visible_in_export: Boolean
  sort: Int
  value_suffix: String
  value_prefix: String
  internal_custom_id: String
  external_export_field_name: String
  external_export_id: String
  external_import_id: String
  field_type: String
  alias: String
  background_color: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  icon: String
  status: String
  form: JSON
  date_updated: Date
  date_created: Date
  image: JSON
  user_updated: JSON
  user_created: JSON
  id: ID
  translations: JSON
}

""""""
type version_form_fields_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  description: String
  name: String
  languages_code: JSON
  form_fields_id: JSON
}

""""""
type version_form_submissions {
  sort: Int
  internal_custom_id: String
  alias: String
  state: String
  status: String
  date_locked_until: Date
  date_submitted: Date
  date_started: Date
  date_updated: Date
  date_created: Date
  id: ID
  user_locked_by: JSON
  form: JSON
  user_updated: JSON
  user_created: JSON
  form_answers: JSON
  mails: JSON
}

""""""
type version_forms {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  internal_custom_id: String
  status: String
  date_updated: Date
  date_created: Date
  category: JSON
  user_updated: JSON
  user_created: JSON
  id: ID
  form_fields: JSON
  form_submissions: JSON
  translations: JSON
}

""""""
type version_forms_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: JSON
  forms_id: JSON
}

""""""
type version_languages {
  status: String
  name: String
  direction: String
  code: ID
}

""""""
type version_mails {
  send_attachments_as_links: Boolean
  sort: Int
  log: String
  markdown_content: String
  template_data: JSON
  send_status: String
  template_name: String
  subject: String
  recipient: String
  status: String
  date_updated: Date
  date_created: Date
  id: ID
  user_created: JSON
  user_updated: JSON
  form_submission: JSON
  attachments: JSON
}

""""""
type version_mails_files {
  id: ID
  mails_id: JSON
  directus_files_id: JSON
}

""""""
type version_markings {
  show_on_label_list: Boolean

  """Invertiere die Hintergrundfarbe, wenn kein Bild vorhanden ist."""
  invert_background_color: Boolean

  """Keinen Rand verwenden"""
  hide_border: Boolean
  show_on_card: Boolean
  sort: Int
  status: String

  """
  Falls das Bild transparenten Hintergrund hat, kann hier die Hintergrundfarbe gesetzt werden.
  """
  background_color: String

  """Kürzel, welches Nutzern angezeigt werden soll"""
  short_code: String
  image_thumb_hash: String

  """
  Falls kein Bild hochgeladen wurde, kann auch auf ein Bild von einer anderen Seite angezeigt werden.
  """
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  external_identifier: String

  """Interne Bezeichnung - Nicht sichtbar für Nutzer"""
  alias: String
  date_created: Date
  date_updated: Date
  image: JSON
  user_created: JSON
  user_updated: JSON
  group: JSON
  id: ID
  excluded_by_markings: JSON
  translations: JSON
}

""""""
type version_markings_exclusions {
  id: ID
  restricted_markings_id: JSON
  restricted_by_markings_id: JSON
}

""""""
type version_markings_groups {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  id: ID
  user_updated: JSON
  user_created: JSON
  translations: JSON
  markings: JSON
}

""""""
type version_markings_groups_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: JSON
  markings_groups_id: JSON
}

""""""
type version_markings_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: JSON
  markings_id: JSON
}

""""""
type version_news {
  sort: Int
  categories: JSON
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date: Date
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  image: JSON
  id: ID
  translations: JSON
}

""""""
type version_news_translations {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  content: String
  title: String
  languages_code: JSON
  news_id: JSON
}

""""""
type version_popup_events {
  show_on_android: Boolean
  show_on_ios: Boolean
  show_on_web: Boolean
  send_notification: Boolean
  sort: Int
  status: String
  image_thumb_hash: String

  """Alternativ angezeigt, falls kein Bild verwendet hochgeladen wurde"""
  image_remote_url: String
  alias: String

  """* Muss gesetzt sein"""
  date_start: Date

  """Falls ein Event nur bis zu einem bestimmten Zeitpunkt gültig ist."""
  date_end: Date
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  image: JSON
  id: ID
  canteens: JSON
  translations: JSON
}

""""""
type version_popup_events_canteens {
  id: ID
  popup_events_id: JSON
  canteens_id: JSON
}

""""""
type version_popup_events_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  content: String
  title: String
  languages_code: JSON
  popup_events_id: JSON
}

""""""
type version_profiles {
  notifiy_on_free_apartments: Boolean
  sort: Int
  course_timetable: JSON
  avatar: JSON
  credit_balance: Float
  credit_balance_last_transaction: Float
  status: String
  price_group: String
  nickname: String
  language: JSON
  credit_balance_date_updated: Date
  date_privacy_policy_accepted: Date
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
  canteen: JSON
  markings: JSON
  buildings_favorites: JSON
  buildings_last_opened: JSON
  devices: JSON
  foods_feedbacks: JSON
}

""""""
type version_profiles_buildings_favorites {
  id: ID
  profiles_id: JSON
  buildings_id: JSON
}

""""""
type version_profiles_buildings_last_opened {
  id: ID
  profiles_id: JSON
  buildings_id: JSON
}

""""""
type version_profiles_markings {
  dislike: Boolean
  like: Boolean
  id: ID
  profiles_id: JSON
  markings_id: JSON
}

""""""
type version_push_notifications {
  ios_play_sound: Boolean
  ios_badge_count: Int
  message_ttl: Int
  sort: Int
  message_data: JSON
  status_log: String

  """
  Format: ExponentPushToken[xxxxxxxxxxxxxxxxx] with prefix and brackets, then press enter for more
  """
  expo_push_tokens: JSON
  message_title: String
  message_body: String
  ios_message_subtitle: String
  expo_access_token: String
  android_channel_id: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
}

""""""
type version_report_recipients {
  sort: Int
  mail: String
  name: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
}

""""""
type version_utilizations_entries {
  value_real: Int
  sort: Int
  value_forecast_current: Int
  status: String
  date_end: Date
  date_updated: Date
  date_created: Date
  date_start: Date
  utilization_group: JSON
  user_updated: JSON
  user_created: JSON
  id: ID
}

""""""
type version_utilizations_groups {
  sort: Int
  threshold_until_low: Int
  threshold_until_medium: Int
  threshold_until_max: Int
  all_time_high: Int
  threshold_until_high: Int
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  id: ID
  utilization_entries: JSON
}

""""""
type version_washingmachines {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_stated: Date
  date_finished: Date
  date_updated: Date
  date_created: Date
  user_updated: JSON
  id: ID
  user_created: JSON
  apartment: JSON
}

""""""
type version_washingmachines_jobs {
  sort: Int
  duration_in_minutes_rounded_10min_calculated: Int
  duration_in_minutes_calculated: Int
  status: String
  duration_calculated: Date
  date_end: Date
  date_start: Date
  date_updated: Date
  user_updated: JSON
  washingmachine: JSON
  date_created: Date
  id: ID
  user_created: JSON
  apartment: JSON
}

""""""
type version_wikis {
  public: Boolean
  show_in_drawer: Boolean
  show_in_drawer_as_bottom_item: Boolean
  position: Int
  sort: Int
  color: String
  url: String
  status: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  custom_id: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  parent: JSON
  id: ID
  roles_required: JSON
  children: JSON
  translations: JSON
}

""""""
type version_wikis_directus_roles {
  id: ID
  wikis_id: JSON
  directus_roles_id: JSON
}

""""""
type version_wikis_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  content: String
  title: String
  languages_code: JSON
  wikis_id: JSON
}

""""""
type version_workflows {
  enabled: Boolean
  sort: Int
  id: ID
  alias: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: JSON
  user_created: JSON
  workflows_runs: JSON
}

""""""
type version_workflows_runs {
  sort: Int
  runtime_in_seconds: Int
  log: String
  output: String
  input: String
  result_hash: String
  alias: String
  state: String
  workflow: JSON
  status: String
  date_finished: Date
  date_updated: Date
  date_created: Date
  date_started: Date
  user_updated: JSON
  user_created: JSON
  id: ID
}

type washingmachines {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_stated: Date
  date_stated_func: datetime_functions
  date_finished: Date
  date_finished_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  apartment(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): apartments
}

type washingmachines_aggregated {
  group: JSON
  countAll: Int
  count: washingmachines_aggregated_count
  countDistinct: washingmachines_aggregated_count
  avg: washingmachines_aggregated_fields
  sum: washingmachines_aggregated_fields
  avgDistinct: washingmachines_aggregated_fields
  sumDistinct: washingmachines_aggregated_fields
  min: washingmachines_aggregated_fields
  max: washingmachines_aggregated_fields
}

type washingmachines_aggregated_count {
  sort: Int
  status: Int
  external_identifier: Int
  alias: Int
  date_stated: Int
  date_finished: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  id: Int
  user_created: Int
  apartment: Int
}

type washingmachines_aggregated_fields {
  sort: Float
}

type washingmachines_jobs {
  sort: Int
  duration_in_minutes_rounded_10min_calculated: Int
  duration_in_minutes_calculated: Int
  status: String
  duration_calculated: Date
  duration_calculated_func: time_functions
  date_end: Date
  date_end_func: datetime_functions
  date_start: Date
  date_start_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  washingmachine(filter: washingmachines_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): washingmachines
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  apartment(filter: apartments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): apartments
}

type washingmachines_jobs_aggregated {
  group: JSON
  countAll: Int
  count: washingmachines_jobs_aggregated_count
  countDistinct: washingmachines_jobs_aggregated_count
  avg: washingmachines_jobs_aggregated_fields
  sum: washingmachines_jobs_aggregated_fields
  avgDistinct: washingmachines_jobs_aggregated_fields
  sumDistinct: washingmachines_jobs_aggregated_fields
  min: washingmachines_jobs_aggregated_fields
  max: washingmachines_jobs_aggregated_fields
}

type washingmachines_jobs_aggregated_count {
  sort: Int
  duration_in_minutes_rounded_10min_calculated: Int
  duration_in_minutes_calculated: Int
  status: Int
  duration_calculated: Int
  date_end: Int
  date_start: Int
  date_updated: Int
  user_updated: Int
  washingmachine: Int
  date_created: Int
  id: Int
  user_created: Int
  apartment: Int
}

type washingmachines_jobs_aggregated_fields {
  sort: Float
  duration_in_minutes_rounded_10min_calculated: Float
  duration_in_minutes_calculated: Float
}

type washingmachines_jobs_mutated {
  key: ID!
  event: EventEnum
  data: washingmachines_jobs
}

type washingmachines_mutated {
  key: ID!
  event: EventEnum
  data: washingmachines
}

type wikis {
  public: Boolean
  show_in_drawer: Boolean
  show_in_drawer_as_bottom_item: Boolean
  position: Int
  sort: Int
  color: String
  url: String
  status: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  custom_id: String
  alias: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  parent(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): wikis
  id: ID!
  roles_required(filter: wikis_directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [wikis_directus_roles]
  roles_required_func: count_functions
  children(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [wikis]
  children_func: count_functions
  translations(filter: wikis_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [wikis_translations]
  translations_func: count_functions
}

type wikis_aggregated {
  group: JSON
  countAll: Int
  count: wikis_aggregated_count
  countDistinct: wikis_aggregated_count
  avg: wikis_aggregated_fields
  sum: wikis_aggregated_fields
  avgDistinct: wikis_aggregated_fields
  sumDistinct: wikis_aggregated_fields
  min: wikis_aggregated_fields
  max: wikis_aggregated_fields
}

type wikis_aggregated_count {
  public: Int
  show_in_drawer: Int
  show_in_drawer_as_bottom_item: Int
  position: Int
  sort: Int
  color: Int
  url: Int
  status: Int

  """Icon from: https://icons.expo.fyi/Index"""
  icon: Int
  custom_id: Int
  alias: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  parent: Int
  id: Int
  roles_required: Int
  children: Int
  translations: Int
}

type wikis_aggregated_fields {
  position: Float
  sort: Float
}

type wikis_directus_roles {
  id: ID!
  wikis_id(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): wikis
  directus_roles_id(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
}

type wikis_directus_roles_aggregated {
  group: JSON
  countAll: Int
  count: wikis_directus_roles_aggregated_count
  countDistinct: wikis_directus_roles_aggregated_count
  avg: wikis_directus_roles_aggregated_fields
  sum: wikis_directus_roles_aggregated_fields
  avgDistinct: wikis_directus_roles_aggregated_fields
  sumDistinct: wikis_directus_roles_aggregated_fields
  min: wikis_directus_roles_aggregated_fields
  max: wikis_directus_roles_aggregated_fields
}

type wikis_directus_roles_aggregated_count {
  id: Int
  wikis_id: Int
  directus_roles_id: Int
}

type wikis_directus_roles_aggregated_fields {
  id: Float
}

type wikis_directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: wikis_directus_roles
}

type wikis_mutated {
  key: ID!
  event: EventEnum
  data: wikis
}

type wikis_translations {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID!
  content: String
  title: String
  languages_code(filter: languages_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): languages
  wikis_id(filter: wikis_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): wikis
}

type wikis_translations_aggregated {
  group: JSON
  countAll: Int
  count: wikis_translations_aggregated_count
  countDistinct: wikis_translations_aggregated_count
  avg: wikis_translations_aggregated_fields
  sum: wikis_translations_aggregated_fields
  avgDistinct: wikis_translations_aggregated_fields
  sumDistinct: wikis_translations_aggregated_fields
  min: wikis_translations_aggregated_fields
  max: wikis_translations_aggregated_fields
}

type wikis_translations_aggregated_count {
  let_be_translated: Int
  be_source_for_translations: Int
  id: Int
  content: Int
  title: Int
  languages_code: Int
  wikis_id: Int
}

type wikis_translations_aggregated_fields {
  id: Float
}

type wikis_translations_mutated {
  key: ID!
  event: EventEnum
  data: wikis_translations
}

type workflows {
  enabled: Boolean
  sort: Int
  id: ID!
  alias: String
  status: String
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  workflows_runs(filter: workflows_runs_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [workflows_runs]
  workflows_runs_func: count_functions
}

type workflows_aggregated {
  group: JSON
  countAll: Int
  count: workflows_aggregated_count
  countDistinct: workflows_aggregated_count
  avg: workflows_aggregated_fields
  sum: workflows_aggregated_fields
  avgDistinct: workflows_aggregated_fields
  sumDistinct: workflows_aggregated_fields
  min: workflows_aggregated_fields
  max: workflows_aggregated_fields
}

type workflows_aggregated_count {
  enabled: Int
  sort: Int
  id: Int
  alias: Int
  status: Int
  date_updated: Int
  date_created: Int
  user_updated: Int
  user_created: Int
  workflows_runs: Int
}

type workflows_aggregated_fields {
  sort: Float
}

type workflows_mutated {
  key: ID!
  event: EventEnum
  data: workflows
}

type workflows_runs {
  sort: Int
  runtime_in_seconds: Int
  log: String
  output: String
  input: String
  result_hash: String
  alias: String
  state: String
  workflow(filter: workflows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): workflows
  status: String
  date_finished: Date
  date_finished_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  date_created: Date
  date_created_func: datetime_functions
  date_started: Date
  date_started_func: datetime_functions
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type workflows_runs_aggregated {
  group: JSON
  countAll: Int
  count: workflows_runs_aggregated_count
  countDistinct: workflows_runs_aggregated_count
  avg: workflows_runs_aggregated_fields
  sum: workflows_runs_aggregated_fields
  avgDistinct: workflows_runs_aggregated_fields
  sumDistinct: workflows_runs_aggregated_fields
  min: workflows_runs_aggregated_fields
  max: workflows_runs_aggregated_fields
}

type workflows_runs_aggregated_count {
  sort: Int
  runtime_in_seconds: Int
  log: Int
  output: Int
  input: Int
  result_hash: Int
  alias: Int
  state: Int
  workflow: Int
  status: Int
  date_finished: Int
  date_updated: Int
  date_created: Int
  date_started: Int
  user_updated: Int
  user_created: Int
  id: Int
}

type workflows_runs_aggregated_fields {
  sort: Float
  runtime_in_seconds: Float
}

type workflows_runs_mutated {
  key: ID!
  event: EventEnum
  data: workflows_runs
}

input apartments_filter {
  singleflat: boolean_filter_operators
  handicapped_accessible: boolean_filter_operators
  family_friendly: boolean_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  available_from: date_filter_operators
  available_from_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  building: buildings_filter
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  washingmachines: washingmachines_filter
  washingmachines_func: count_function_filter_operators
  _and: [apartments_filter]
  _or: [apartments_filter]
}

input app_elements_filter {
  sort: number_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  id: string_filter_operators
  translations: app_elements_translations_filter
  translations_func: count_function_filter_operators
  _and: [app_elements_filter]
  _or: [app_elements_filter]
}

input app_elements_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  popup_content: string_filter_operators
  content: string_filter_operators
  popup_button_text: string_filter_operators
  languages_code: languages_filter
  app_elements_id: app_elements_filter
  _and: [app_elements_translations_filter]
  _or: [app_elements_translations_filter]
}

input app_feedbacks_filter {
  feedback_read_by_support: boolean_filter_operators
  positive: boolean_filter_operators
  response_read_by_user: boolean_filter_operators
  sort: number_filter_operators
  priority: number_filter_operators
  response: string_filter_operators
  content: string_filter_operators
  display_scale: number_filter_operators
  display_width: number_filter_operators
  display_height: number_filter_operators
  display_fontscale: number_filter_operators
  display_pixelratio: number_filter_operators
  title: string_filter_operators
  status: string_filter_operators
  device_system_version: string_filter_operators
  device_platform: string_filter_operators
  device_brand: string_filter_operators
  contact_email: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  profile: profiles_filter
  user_created: string_filter_operators
  user_updated: directus_users_filter
  _and: [app_feedbacks_filter]
  _or: [app_feedbacks_filter]
}

input app_settings_balance_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  app_settings_id: app_settings_filter
  content: string_filter_operators
  languages_code: languages_filter
  _and: [app_settings_balance_translations_filter]
  _or: [app_settings_balance_translations_filter]
}

input app_settings_filter {
  housing_enabled: boolean_filter_operators
  foods_ratings_average_display: boolean_filter_operators
  foods_ratings_amount_display: boolean_filter_operators
  balance_enabled: boolean_filter_operators
  foods_enabled: boolean_filter_operators
  course_timetable_enabled: boolean_filter_operators
  animations_auto_start: boolean_filter_operators
  utilization_display_enabled: boolean_filter_operators
  campus_enabled: boolean_filter_operators
  notifications_ios_enabled: boolean_filter_operators
  notifications_email_enabled: boolean_filter_operators
  notifications_android_enabled: boolean_filter_operators
  news_enabled: boolean_filter_operators
  map_enabled: boolean_filter_operators
  id: number_filter_operators
  redirect_whitelist: string_filter_operators
  redirect_whitelist_func: count_function_filter_operators
  foods_area_color: string_filter_operators
  status: string_filter_operators
  foods_ratings_type: string_filter_operators
  foods_placeholder_image_thumb_hash: string_filter_operators
  foods_placeholder_image_remote_url: string_filter_operators
  foods_feedbacks_labels_type: string_filter_operators
  foods_feedbacks_custom_url: string_filter_operators
  foods_feedbacks_comments_type: string_filter_operators
  food_responsible_organization_name: string_filter_operators
  food_responsible_organization_link: string_filter_operators
  app_stores_url_to_google: string_filter_operators
  app_stores_url_to_apple: string_filter_operators
  course_timetable_area_color: string_filter_operators
  balance_area_color: string_filter_operators
  campus_area_color: string_filter_operators
  news_area_color: string_filter_operators
  housing_area_color: string_filter_operators
  maintenance_end: date_filter_operators
  maintenance_end_func: datetime_function_filter_operators
  maintenance_start: date_filter_operators
  maintenance_start_func: datetime_function_filter_operators
  date_privacy_policy_updated: date_filter_operators
  date_privacy_policy_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  foods_placeholder_image: directus_files_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  company_image: directus_files_filter
  placeholder_image: directus_files_filter
  foodoffers_list_before_element: app_elements_filter
  foodoffers_list_after_element: app_elements_filter
  housing_translations: app_settings_housing_translations_filter
  housing_translations_func: count_function_filter_operators
  balance_translations: app_settings_balance_translations_filter
  balance_translations_func: count_function_filter_operators
  login_screen_translations: app_settings_login_screen_translations_filter
  login_screen_translations_func: count_function_filter_operators
  _and: [app_settings_filter]
  _or: [app_settings_filter]
}

input app_settings_housing_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  app_settings_id: app_settings_filter
  content: string_filter_operators
  languages_code: languages_filter
  _and: [app_settings_housing_translations_filter]
  _or: [app_settings_housing_translations_filter]
}

input app_settings_login_screen_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  detailed_description: string_filter_operators
  id: number_filter_operators
  app_settings_id: app_settings_filter
  intro_description: string_filter_operators
  languages_code: languages_filter
  _and: [app_settings_login_screen_translations_filter]
  _or: [app_settings_login_screen_translations_filter]
}

input big_int_filter_operators {
  _eq: GraphQLBigInt
  _neq: GraphQLBigInt
  _in: [GraphQLBigInt]
  _nin: [GraphQLBigInt]
  _gt: GraphQLBigInt
  _gte: GraphQLBigInt
  _lt: GraphQLBigInt
  _lte: GraphQLBigInt
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLBigInt]
  _nbetween: [GraphQLBigInt]
}

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _null: Boolean
  _nnull: Boolean
}

input buildings_attributes_filter {
  sort: number_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [buildings_attributes_filter]
  _or: [buildings_attributes_filter]
}

input buildings_businesshours_filter {
  id: number_filter_operators
  buildings_id: buildings_filter
  businesshours_id: businesshours_filter
  _and: [buildings_businesshours_filter]
  _or: [buildings_businesshours_filter]
}

input buildings_filter {
  sort: number_filter_operators
  coordinates: string_filter_operators
  coordinates_func: count_function_filter_operators
  url: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_of_construction: date_filter_operators
  date_of_construction_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  image: directus_files_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  translations: buildings_translations_filter
  translations_func: count_function_filter_operators
  apartments: apartments_filter
  apartments_func: count_function_filter_operators
  businesshours: buildings_businesshours_filter
  businesshours_func: count_function_filter_operators
  _and: [buildings_filter]
  _or: [buildings_filter]
}

input buildings_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  content: string_filter_operators
  languages_code: languages_filter
  buildings_id: buildings_filter
  _and: [buildings_translations_filter]
  _or: [buildings_translations_filter]
}

input businesshours_filter {
  tuesday: boolean_filter_operators
  wednesday: boolean_filter_operators
  friday: boolean_filter_operators
  monday: boolean_filter_operators
  saturday: boolean_filter_operators
  sunday: boolean_filter_operators
  thursday: boolean_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  time_start: date_filter_operators
  time_start_func: time_function_filter_operators
  time_end: date_filter_operators
  time_end_func: time_function_filter_operators
  date_valid_from: date_filter_operators
  date_valid_from_func: date_function_filter_operators
  date_valid_till: date_filter_operators
  date_valid_till_func: date_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  id: string_filter_operators
  group: businesshours_groups_filter
  user_updated: directus_users_filter
  _and: [businesshours_filter]
  _or: [businesshours_filter]
}

input businesshours_groups_filter {
  sort: number_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: businesshours_groups_translations_filter
  translations_func: count_function_filter_operators
  _and: [businesshours_groups_filter]
  _or: [businesshours_groups_filter]
}

input businesshours_groups_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  businesshours_groups_id: businesshours_groups_filter
  _and: [businesshours_groups_translations_filter]
  _or: [businesshours_groups_translations_filter]
}

input canteen_food_feedback_report_schedules_canteens_filter {
  id: number_filter_operators
  canteens_id: canteens_filter
  canteen_food_feedback_report_schedules_id: canteen_food_feedback_report_schedules_filter
  _and: [canteen_food_feedback_report_schedules_canteens_filter]
  _or: [canteen_food_feedback_report_schedules_canteens_filter]
}

input canteen_food_feedback_report_schedules_filter {
  enabled: boolean_filter_operators
  show_images: boolean_filter_operators
  show_food_comments_for_selected_period: boolean_filter_operators
  show_food_comments_for_all_time: boolean_filter_operators
  send_on_thursdays: boolean_filter_operators
  send_on_fridays: boolean_filter_operators
  send_on_saturdays: boolean_filter_operators
  send_on_sundays: boolean_filter_operators
  report_send_successfully: boolean_filter_operators
  show_canteen_feedbacks_also_per_canteen: boolean_filter_operators
  show_canteen_feedbacks_for_selected_period: boolean_filter_operators
  show_canteen_feedbacks_for_all_time: boolean_filter_operators
  show_food_feedback_labels_for_all_time: boolean_filter_operators
  show_food_feedback_labels_for_selected_period: boolean_filter_operators
  send_on_mondays: boolean_filter_operators
  send_on_tuesdays: boolean_filter_operators
  send_on_wednesdays: boolean_filter_operators
  sort: number_filter_operators
  period_days_offset: number_filter_operators
  period_days_amount: number_filter_operators
  report_status_log: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_next_report_is_due: date_filter_operators
  date_next_report_is_due_func: datetime_function_filter_operators
  send_report_at_hh_mm: date_filter_operators
  send_report_at_hh_mm_func: time_function_filter_operators
  send_once_now_for_reference_date: date_filter_operators
  send_once_now_for_reference_date_func: date_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  canteens: canteen_food_feedback_report_schedules_canteens_filter
  canteens_func: count_function_filter_operators
  recipients: canteen_food_feedback_report_schedules_report_recipients_filter
  recipients_func: count_function_filter_operators
  _and: [canteen_food_feedback_report_schedules_filter]
  _or: [canteen_food_feedback_report_schedules_filter]
}

input canteen_food_feedback_report_schedules_report_recipients_filter {
  id: number_filter_operators
  canteen_food_feedback_report_schedules_id: canteen_food_feedback_report_schedules_filter
  report_recipients_id: report_recipients_filter
  _and: [canteen_food_feedback_report_schedules_report_recipients_filter]
  _or: [canteen_food_feedback_report_schedules_report_recipients_filter]
}

input canteens_feedbacks_labels_entries_filter {
  like: boolean_filter_operators
  dislike: boolean_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  date: date_filter_operators
  date_func: date_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  label: canteens_feedbacks_labels_filter
  canteen: canteens_filter
  profile: profiles_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [canteens_feedbacks_labels_entries_filter]
  _or: [canteens_feedbacks_labels_entries_filter]
}

input canteens_feedbacks_labels_filter {
  sort: number_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  image: directus_files_filter
  user_updated: directus_users_filter
  translations: canteens_feedbacks_labels_translations_filter
  translations_func: count_function_filter_operators
  _and: [canteens_feedbacks_labels_filter]
  _or: [canteens_feedbacks_labels_filter]
}

input canteens_feedbacks_labels_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  text: string_filter_operators
  languages_code: languages_filter
  canteens_feedbacks_labels_id: canteens_feedbacks_labels_filter
  _and: [canteens_feedbacks_labels_translations_filter]
  _or: [canteens_feedbacks_labels_translations_filter]
}

input canteens_filter {
  foodoffers_import_without_date: boolean_filter_operators
  foodoffers_import_delete_all_without_dates: boolean_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  building: buildings_filter
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  utilization_group: utilizations_groups_filter
  _and: [canteens_filter]
  _or: [canteens_filter]
}

input canteens_foodservice_hours_during_semester_break_filter {
  id: number_filter_operators
  businesshours_id: businesshours_filter
  canteens_id: canteens_filter
  _and: [canteens_foodservice_hours_during_semester_break_filter]
  _or: [canteens_foodservice_hours_during_semester_break_filter]
}

input canteens_foodservice_hours_filter {
  id: number_filter_operators
  businesshours_id: businesshours_filter
  canteens_id: canteens_filter
  _and: [canteens_foodservice_hours_filter]
  _or: [canteens_foodservice_hours_filter]
}

input cashregisters_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  canteen: canteens_filter
  transactions: cashregisters_transactions_filter
  transactions_func: count_function_filter_operators
  _and: [cashregisters_filter]
  _or: [cashregisters_filter]
}

input cashregisters_transactions_filter {
  weekday_index_calculated: number_filter_operators
  sort: number_filter_operators
  quantity: number_filter_operators
  status: string_filter_operators
  name: string_filter_operators
  id: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date: date_filter_operators
  date_func: datetime_function_filter_operators
  cashregister: cashregisters_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [cashregisters_transactions_filter]
  _or: [cashregisters_transactions_filter]
}

input collectible_event_participants_filter {
  sort: number_filter_operators
  points: string_filter_operators
  phone_number: string_filter_operators
  email: string_filter_operators
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  profile: profiles_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  collectible_event: collectible_events_filter
  _and: [collectible_event_participants_filter]
  _or: [collectible_event_participants_filter]
}

input collectible_events_filter {
  sort: number_filter_operators
  points_maximum: string_filter_operators
  points_minimum: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_start: date_filter_operators
  date_start_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_end: date_filter_operators
  date_end_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  collectible_image: directus_files_filter
  monitor_background_image: directus_files_filter
  id: string_filter_operators
  user_created: directus_users_filter
  participants: collectible_event_participants_filter
  participants_func: count_function_filter_operators
  translations: collectible_events_translations_filter
  translations_func: count_function_filter_operators
  _and: [collectible_events_filter]
  _or: [collectible_events_filter]
}

input collectible_events_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  title: string_filter_operators
  languages_code: languages_filter
  collectible_events_id: collectible_events_filter
  _and: [collectible_events_translations_filter]
  _or: [collectible_events_translations_filter]
}

input collections_dates_last_update_filter {
  sort: number_filter_operators
  status: string_filter_operators
  id: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [collections_dates_last_update_filter]
  _or: [collections_dates_last_update_filter]
}

input count_function_filter_operators {
  count: number_filter_operators
}

input create_apartments_input {
  singleflat: Boolean
  handicapped_accessible: Boolean
  family_friendly: Boolean
  sort: Int
  status: String
  external_identifier: String
  available_from: Date
  date_created: Date
  date_updated: Date
  building: create_buildings_input
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  washingmachines: [create_washingmachines_input]
}

input create_app_elements_input {
  sort: Int
  status: String
  date_updated: Date
  date_created: Date
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  id: ID
  translations: [create_app_elements_translations_input]
}

input create_app_elements_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  popup_content: String
  content: String
  popup_button_text: String
  languages_code: create_languages_input
  app_elements_id: create_app_elements_input
}

input create_app_feedbacks_input {
  feedback_read_by_support: Boolean
  positive: Boolean
  response_read_by_user: Boolean
  sort: Int
  priority: Int
  response: String
  content: String
  display_scale: Float
  display_width: Float
  display_height: Float
  display_fontscale: Float
  display_pixelratio: Float
  title: String
  status: String
  device_system_version: String
  device_platform: String
  device_brand: String
  contact_email: String
  date_created: Date
  date_updated: Date
  id: ID
  profile: create_profiles_input
  user_created: String
  user_updated: create_directus_users_input
}

input create_app_settings_balance_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  app_settings_id: create_app_settings_input
  content: String
  languages_code: create_languages_input
}

input create_app_settings_housing_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  app_settings_id: create_app_settings_input
  content: String
  languages_code: create_languages_input
}

input create_app_settings_input {
  """Zeigt den Bereich Wohnen in der App an"""
  housing_enabled: Boolean

  """Soll die durschnittliche Bewertung der Speisen angezeigt werden?"""
  foods_ratings_average_display: Boolean

  """Soll die Anzahl der Bewertungen angezeigt werden?"""
  foods_ratings_amount_display: Boolean
  balance_enabled: Boolean

  """Bereich "Mensa" in der App aktivieren?"""
  foods_enabled: Boolean
  course_timetable_enabled: Boolean
  animations_auto_start: Boolean

  """Zeige die Auslastungsprognose in der App"""
  utilization_display_enabled: Boolean

  """Zeige in der App den Bereich Campus an"""
  campus_enabled: Boolean
  notifications_ios_enabled: Boolean
  notifications_email_enabled: Boolean
  notifications_android_enabled: Boolean

  """Zeigt in der App den Bereich News an"""
  news_enabled: Boolean

  """Zeige den Lageplan in der App an"""
  map_enabled: Boolean
  id: ID

  """Liste erlaubter Seiten die sich bei der App Anmelden dürfen"""
  redirect_whitelist: JSON
  foods_area_color: String
  status: String

  """Wie sollen die Bewertungen angezeigt werden? Sterne, Daumen, ..."""
  foods_ratings_type: String
  foods_placeholder_image_thumb_hash: String
  foods_placeholder_image_remote_url: String
  foods_feedbacks_labels_type: String

  """
  URL zu einem externen Forum für Rückmeldungen und Bewertungen von Speisen
  """
  foods_feedbacks_custom_url: String
  foods_feedbacks_comments_type: String

  """Wer ist für die Inhalte der Speiseangebote verantwortlich?"""
  food_responsible_organization_name: String

  """URL bzw. Link zu der verantwortlichen Stelle"""
  food_responsible_organization_link: String
  app_stores_url_to_google: String
  app_stores_url_to_apple: String
  course_timetable_area_color: String
  balance_area_color: String
  campus_area_color: String
  news_area_color: String
  housing_area_color: String
  maintenance_end: Date
  maintenance_start: Date
  date_privacy_policy_updated: Date
  date_created: Date
  date_updated: Date
  foods_placeholder_image: create_directus_files_input
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  company_image: create_directus_files_input
  placeholder_image: create_directus_files_input
  foodoffers_list_before_element: create_app_elements_input
  foodoffers_list_after_element: create_app_elements_input
  housing_translations: [create_app_settings_housing_translations_input]
  balance_translations: [create_app_settings_balance_translations_input]
  login_screen_translations: [create_app_settings_login_screen_translations_input]
}

input create_app_settings_login_screen_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  detailed_description: String
  id: ID
  app_settings_id: create_app_settings_input
  intro_description: String
  languages_code: create_languages_input
}

input create_buildings_attributes_input {
  sort: Int
  status: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
}

input create_buildings_businesshours_input {
  id: ID
  buildings_id: create_buildings_input
  businesshours_id: create_businesshours_input
}

input create_buildings_input {
  sort: Int
  coordinates: JSON
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_of_construction: Date
  date_created: Date
  id: ID
  image: create_directus_files_input
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  translations: [create_buildings_translations_input]
  apartments: [create_apartments_input]
  businesshours: [create_buildings_businesshours_input]
}

input create_buildings_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  content: String
  languages_code: create_languages_input
  buildings_id: create_buildings_input
}

input create_businesshours_groups_input {
  sort: Int
  alias: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  translations: [create_businesshours_groups_translations_input]
}

input create_businesshours_groups_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  businesshours_groups_id: create_businesshours_groups_input
}

input create_businesshours_input {
  tuesday: Boolean
  wednesday: Boolean
  friday: Boolean
  monday: Boolean
  saturday: Boolean
  sunday: Boolean
  thursday: Boolean
  sort: Int
  status: String
  time_start: Date
  time_end: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_from: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_till: Date
  date_updated: Date
  date_created: Date
  user_created: create_directus_users_input
  id: ID
  group: create_businesshours_groups_input
  user_updated: create_directus_users_input
}

input create_canteen_food_feedback_report_schedules_canteens_input {
  id: ID
  canteens_id: create_canteens_input
  canteen_food_feedback_report_schedules_id: create_canteen_food_feedback_report_schedules_input
}

input create_canteen_food_feedback_report_schedules_input {
  enabled: Boolean

  """Zeige Bilder der Speisen"""
  show_images: Boolean

  """Zeige Speise Kommentare für den gewählten Zeitraum"""
  show_food_comments_for_selected_period: Boolean

  """Zeige Speise Kommentare insgesammt"""
  show_food_comments_for_all_time: Boolean
  send_on_thursdays: Boolean
  send_on_fridays: Boolean
  send_on_saturdays: Boolean
  send_on_sundays: Boolean
  report_send_successfully: Boolean

  """Zeige Rückmeldungen zu den Mensen pro Mensa: Labels"""
  show_canteen_feedbacks_also_per_canteen: Boolean

  """Zeige Mensa Rückmeldungen für Ausgewählten Zeitraum"""
  show_canteen_feedbacks_for_selected_period: Boolean

  """Zeige Mensa Rückmeldungen insgesammt"""
  show_canteen_feedbacks_for_all_time: Boolean

  """Zeige Speise Label Rückmeldungen insgesammt"""
  show_food_feedback_labels_for_all_time: Boolean

  """Zeige Speise Label Rückmeldungen für den gewählten Zeitraum"""
  show_food_feedback_labels_for_selected_period: Boolean
  send_on_mondays: Boolean
  send_on_tuesdays: Boolean
  send_on_wednesdays: Boolean
  sort: Int

  """
  Anzahl der Tage, um den der Referenztag verschoben wird. Positive Werte verschieben den Referenztag in die Zukunft, negative in die Vergangenheit.
  """
  period_days_offset: Int

  """
  Anzahl der vorherigen Tage fest, die im Bericht enthalten sein sollen, einschließlich des Referenztags. Wenn 1 gesetzt ist, wird nur der Referenztag im Bericht berücksichtigt. Der Referenztag kann durch den Offset verschoben werden.
  """
  period_days_amount: Int
  report_status_log: String
  alias: String
  status: String
  date_next_report_is_due: Date
  send_report_at_hh_mm: Date

  """Bericht einmalig senden, als wäre es Tag X"""
  send_once_now_for_reference_date: Date
  date_created: Date
  date_updated: Date
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  canteens: [create_canteen_food_feedback_report_schedules_canteens_input]
  recipients: [create_canteen_food_feedback_report_schedules_report_recipients_input]
}

input create_canteen_food_feedback_report_schedules_report_recipients_input {
  id: ID
  canteen_food_feedback_report_schedules_id: create_canteen_food_feedback_report_schedules_input
  report_recipients_id: create_report_recipients_input
}

input create_canteens_feedbacks_labels_entries_input {
  like: Boolean
  dislike: Boolean
  sort: Int
  status: String
  date: Date
  date_updated: Date
  date_created: Date
  label: create_canteens_feedbacks_labels_input
  canteen: create_canteens_input
  profile: create_profiles_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
}

input create_canteens_feedbacks_labels_input {
  sort: Int
  image_thumb_hash: String
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  status: String
  date_created: Date
  id: ID
  user_created: create_directus_users_input
  date_updated: Date
  image: create_directus_files_input
  user_updated: create_directus_users_input
  translations: [create_canteens_feedbacks_labels_translations_input]
}

input create_canteens_feedbacks_labels_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  text: String
  languages_code: create_languages_input
  canteens_feedbacks_labels_id: create_canteens_feedbacks_labels_input
}

input create_canteens_foodservice_hours_during_semester_break_input {
  id: ID
  businesshours_id: create_businesshours_input
  canteens_id: create_canteens_input
}

input create_canteens_foodservice_hours_input {
  id: ID
  businesshours_id: create_businesshours_input
  canteens_id: create_canteens_input
}

input create_canteens_input {
  """
  Beim Importieren von Speiseangeboten sind die Angebote für alle Tage gültig und haben daher kein Datum.
  """
  foodoffers_import_without_date: Boolean

  """
  Beim Importieren von Speiseangeboten werden alle statischen Speiseangebote gelöscht, also die ohne Datum.
  """
  foodoffers_import_delete_all_without_dates: Boolean
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_created: Date
  date_updated: Date
  building: create_buildings_input
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  utilization_group: create_utilizations_groups_input
}

input create_cashregisters_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  canteen: create_canteens_input
  transactions: [create_cashregisters_transactions_input]
}

input create_cashregisters_transactions_input {
  weekday_index_calculated: Int
  sort: Int
  quantity: Float
  status: String
  name: String
  id: ID!
  date_created: Date
  date_updated: Date
  date: Date
  cashregister: create_cashregisters_input
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_collectible_event_participants_input {
  sort: Int
  points: String
  phone_number: String
  email: String
  status: String
  date_created: Date
  date_updated: Date
  id: ID
  profile: create_profiles_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  collectible_event: create_collectible_events_input
}

input create_collectible_events_input {
  sort: Int
  points_maximum: String
  points_minimum: String
  alias: String
  status: String
  date_start: Date
  date_updated: Date
  date_created: Date
  date_end: Date
  user_updated: create_directus_users_input
  collectible_image: create_directus_files_input
  monitor_background_image: create_directus_files_input
  id: ID
  user_created: create_directus_users_input
  participants: [create_collectible_event_participants_input]
  translations: [create_collectible_events_translations_input]
}

input create_collectible_events_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  description: String
  title: String
  languages_code: create_languages_input
  collectible_events_id: create_collectible_events_input
}

input create_collections_dates_last_update_input {
  sort: Int
  status: String
  id: ID!
  date_created: Date
  date_updated: Date
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_devices_input {
  is_simulator: Boolean
  is_android: Boolean
  is_ios: Boolean
  is_landscape: Boolean
  is_web: Boolean
  is_tablet: Boolean
  sort: Int
  pushTokenObj: JSON
  display_width: Float
  display_scale: Float
  display_pixelratio: Float
  display_fontscale: Float
  display_height: Float
  system_version: String
  status: String
  platform: String
  brand: String
  alias: String
  date_updated: Date
  date_created: Date
  id: ID
  profile: create_profiles_input
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_directus_access_input {
  sort: Int
  id: ID
  role: create_directus_roles_input
  user: create_directus_users_input
  policy: create_directus_policies_input
}

input create_directus_files_input {
  is_unreferenced: Boolean
  filesize: GraphQLBigInt
  focal_point_y: Int
  focal_point_x: Int
  duration: Int
  height: Int
  width: Int
  metadata: JSON
  description: String
  location: String
  tags: JSON
  tus_data: JSON
  tus_id: String
  embed: String
  charset: String
  type: String
  title: String
  filename_download: String!
  filename_disk: String
  storage: String!
  uploaded_on: Date
  modified_on: Date
  created_on: Date
  modified_by: create_directus_users_input
  uploaded_by: create_directus_users_input
  folder: create_directus_folders_input
  id: ID
}

input create_directus_folders_input {
  name: String!
  id: ID
  parent: create_directus_folders_input
}

input create_directus_permissions_input {
  id: ID
  validation: JSON
  fields: [String]
  permissions: JSON
  presets: JSON
  action: String!
  collection: String!
  policy: create_directus_policies_input
}

input create_directus_policies_input {
  app_access: Boolean!
  admin_access: Boolean!

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  description: String
  ip_access: [String]
  icon: String
  name: String!
  id: ID
  permissions: [create_directus_permissions_input]
  users: [create_directus_access_input]
  roles: [create_directus_access_input]
}

input create_directus_roles_input {
  description: String
  icon: String
  name: String!
  id: ID
  parent: create_directus_roles_input
  children: [create_directus_roles_input]
  policies: [create_directus_access_input]
  users: [create_directus_users_input]
}

input create_directus_sync_id_map_input {
  id: ID
  local_id: String!
  sync_id: String!
  table: String!
  created_at: Date
}

input create_directus_users_input {
  email_notifications: Boolean
  description: String
  auth_data: JSON
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  tags: JSON
  theme_light: String
  theme_dark: String
  appearance: String
  external_identifier: String
  provider: String
  last_page: String
  token: Hash
  status: String
  tfa_secret: Hash
  language: String
  title: String
  location: String
  password: Hash
  email: String
  last_name: String
  first_name: String
  last_access: Date
  id: ID
  avatar: create_directus_files_input
  role: create_directus_roles_input
  profile: create_profiles_input
  policies: [create_directus_access_input]
}

input create_files_shares_input {
  sort: Int
  status: String
  date_updated: Date
  date_created: Date
  date_exires_at: Date
  file: create_directus_files_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
}

input create_foodoffers_categories_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  translations: [create_foodoffers_categories_translations_input]
}

input create_foodoffers_categories_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  foodoffers_categories_id: create_foodoffers_categories_input
}

input create_foodoffers_input {
  sort: Int
  saturated_fat_g: Float
  calories_kcal: Float
  carbohydrate_g: Float
  sugar_g: Float
  fat_g: Float
  fiber_g: Float
  co2_g: Float
  co2_saving_percentage: Float
  price_employee: Float
  salt_g: Float
  price_guest: Float
  price_student: Float
  protein_g: Float
  redirect_url: String
  category: String
  co2_rating: String
  status: String
  food: create_foods_input
  alias: String
  date: Date
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  canteen: create_canteens_input
  foodoffer_category: create_foodoffers_categories_input
  markings: [create_foodoffers_markings_input]
  attribute_values: [create_foods_attributes_values_input]
}

input create_foodoffers_markings_input {
  id: ID
  foodoffers_id: create_foodoffers_input
  markings_id: create_markings_input
}

input create_foods_attributes_groups_input {
  sort: Int
  background_color: String
  image_thumb_hash: String
  image_remote_url: String
  icon_expo: String
  icon: String
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  image: create_directus_files_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  food_attributes: [create_foods_attributes_input]
  translations: [create_foods_attributes_groups_translations_input]
}

input create_foods_attributes_groups_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  foods_attributes_groups_id: create_foods_attributes_groups_input
}

input create_foods_attributes_input {
  show_on_card: Boolean
  show_on_label_list: Boolean
  full_width: Boolean
  sort: Int
  suffix: String
  prefix: String
  status: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  external_identifier: String
  background_color: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  image: create_directus_files_input
  id: ID
  group: create_foods_attributes_groups_input
  translations: [create_foods_attributes_translations_input]
}

input create_foods_attributes_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  description: String
  name: String
  languages_code: create_languages_input
  foods_attributes_id: create_foods_attributes_input
}

input create_foods_attributes_values_input {
  boolean_value: Boolean
  number_value: Float
  food_id: create_foods_input
  string_value: String
  icon_value: String
  color_value: String
  foodoffer_id: create_foodoffers_input
  id: ID
  food_attribute: create_foods_attributes_input
}

input create_foods_categories_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  translations: [create_foods_categories_translations_input]
}

input create_foods_categories_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  foods_categories_id: create_foods_categories_input
}

input create_foods_feedbacks_foods_feedbacks_labels_input {
  dislike: Boolean
  id: ID
  foods_feedbacks_id: create_foods_feedbacks_input
  foods_feedbacks_labels_id: create_foods_feedbacks_labels_input
}

input create_foods_feedbacks_input {
  notify: Boolean
  rating: Int
  sort: Int
  comment: String
  status: String
  food: create_foods_input
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  profile: create_profiles_input
  id: ID
  foodoffer: create_foodoffers_input
  canteen: create_canteens_input
}

input create_foods_feedbacks_labels_entries_input {
  like: Boolean
  dislike: Boolean
  sort: Int
  status: String
  food: create_foods_input
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  profile: create_profiles_input
  label: create_foods_feedbacks_labels_input
  id: ID
  foodoffer: create_foodoffers_input
  canteen: create_canteens_input
}

input create_foods_feedbacks_labels_input {
  sort: Int

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  date_created: Date
  date_updated: Date
  id: ID
  image: create_directus_files_input
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  translations: [create_foods_feedbacks_labels_translations_input]
}

input create_foods_feedbacks_labels_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  text: String
  languages_code: create_languages_input
  foods_feedbacks_labels_id: create_foods_feedbacks_labels_input
}

input create_foods_input {
  rating_amount: Int
  sort: Int
  rating_amount_legacy: Int
  sugar_g: Float
  protein_g: Float
  fiber_g: Float
  fat_g: Float
  carbohydrate_g: Float
  calories_kcal: Float
  saturated_fat_g: Float
  rating_average: Float
  salt_g: Float
  co2_saving_percentage: Float
  co2_g: Float
  rating_average_legacy: Float
  co2_rating: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  id: ID!
  extra: String
  category: String
  alias: String
  date_updated: Date
  date_created: Date
  food_category: create_foods_categories_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  image: create_directus_files_input
  feedbacks: [create_foods_feedbacks_input]
  markings: [create_foods_markings_input]
  translations: [create_foods_translations_input]
  attribute_values: [create_foods_attributes_values_input]
}

input create_foods_markings_input {
  id: ID
  foods_id: create_foods_input
  markings_id: create_markings_input
}

input create_foods_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  foods_id: create_foods_input
}

input create_form_answers_files_input {
  id: ID
  directus_files_id: create_directus_files_input
  form_answers_id: create_form_answers_input
}

input create_form_answers_input {
  sort: Int
  value_boolean: Boolean
  value_string: String
  value_custom: JSON
  value_number: Float
  status: String
  date_updated: Date
  date_created: Date
  value_date: Date
  value_image: create_directus_files_input
  form_field: create_form_fields_input
  form_submission: create_form_submissions_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  value_files: [create_form_answers_files_input]
}

input create_form_categories_input {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  translations: [create_form_categories_translations_input]
  forms: [create_forms_input]
}

input create_form_categories_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  form_categories_id: create_form_categories_input
}

input create_form_extracts_form_fields_input {
  id: ID
  form_fields_id: create_form_fields_input
  form_extracts_id: create_form_extracts_input
}

input create_form_extracts_input {
  all_fields: Boolean
  sort: Int
  recipient_email_static: String
  alias: String
  internal_custom_id: String
  status: String
  date_created: Date
  date_updated: Date
  form: create_forms_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  recipient_email_field: create_form_fields_input
  recipient_user: create_directus_users_input
  fields: [create_form_extracts_form_fields_input]
}

input create_form_fields_input {
  is_required: Boolean
  is_visible_in_form: Boolean
  is_disabled: Boolean
  is_visible_in_export: Boolean
  sort: Int
  value_suffix: String
  value_prefix: String
  internal_custom_id: String
  external_export_field_name: String
  external_export_id: String
  external_import_id: String
  field_type: String
  alias: String
  background_color: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  icon: String
  status: String
  form: create_forms_input
  date_updated: Date
  date_created: Date
  image: create_directus_files_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  translations: [create_form_fields_translations_input]
}

input create_form_fields_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  description: String
  name: String
  languages_code: create_languages_input
  form_fields_id: create_form_fields_input
}

input create_form_submissions_input {
  sort: Int
  internal_custom_id: String
  alias: String
  state: String
  status: String
  date_locked_until: Date
  date_submitted: Date
  date_started: Date
  date_updated: Date
  date_created: Date
  id: ID
  user_locked_by: create_directus_users_input
  form: create_forms_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  form_answers: [create_form_answers_input]
  mails: [create_mails_input]
}

input create_forms_input {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  internal_custom_id: String
  status: String
  date_updated: Date
  date_created: Date
  category: create_form_categories_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  form_fields: [create_form_fields_input]
  form_submissions: [create_form_submissions_input]
  translations: [create_forms_translations_input]
}

input create_forms_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: create_languages_input
  forms_id: create_forms_input
}

input create_languages_input {
  status: String
  name: String
  direction: String
  code: ID!
}

input create_mails_files_input {
  id: ID
  mails_id: create_mails_input
  directus_files_id: create_directus_files_input
}

input create_mails_input {
  send_attachments_as_links: Boolean
  sort: Int
  log: String
  markdown_content: String
  template_data: JSON
  send_status: String
  template_name: String
  subject: String
  recipient: String
  status: String
  date_updated: Date
  date_created: Date
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  form_submission: create_form_submissions_input
  attachments: [create_mails_files_input]
}

input create_markings_exclusions_input {
  id: ID
  restricted_markings_id: create_markings_input
  restricted_by_markings_id: create_markings_input
}

input create_markings_groups_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  id: ID
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  translations: [create_markings_groups_translations_input]
  markings: [create_markings_input]
}

input create_markings_groups_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: create_languages_input
  markings_groups_id: create_markings_groups_input
}

input create_markings_input {
  show_on_label_list: Boolean

  """Invertiere die Hintergrundfarbe, wenn kein Bild vorhanden ist."""
  invert_background_color: Boolean

  """Keinen Rand verwenden"""
  hide_border: Boolean
  show_on_card: Boolean
  sort: Int
  status: String

  """
  Falls das Bild transparenten Hintergrund hat, kann hier die Hintergrundfarbe gesetzt werden.
  """
  background_color: String

  """Kürzel, welches Nutzern angezeigt werden soll"""
  short_code: String
  image_thumb_hash: String

  """
  Falls kein Bild hochgeladen wurde, kann auch auf ein Bild von einer anderen Seite angezeigt werden.
  """
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  external_identifier: String

  """Interne Bezeichnung - Nicht sichtbar für Nutzer"""
  alias: String
  date_created: Date
  date_updated: Date
  image: create_directus_files_input
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  group: create_markings_groups_input
  id: ID
  excluded_by_markings: [create_markings_exclusions_input]
  translations: [create_markings_translations_input]
}

input create_markings_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: create_languages_input
  markings_id: create_markings_input
}

input create_news_input {
  sort: Int
  categories: JSON
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date: Date
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  image: create_directus_files_input
  id: ID
  translations: [create_news_translations_input]
}

input create_news_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  content: String
  title: String
  languages_code: create_languages_input
  news_id: create_news_input
}

input create_popup_events_canteens_input {
  id: ID
  popup_events_id: create_popup_events_input
  canteens_id: create_canteens_input
}

input create_popup_events_input {
  show_on_android: Boolean
  show_on_ios: Boolean
  show_on_web: Boolean
  send_notification: Boolean
  sort: Int
  status: String
  image_thumb_hash: String

  """Alternativ angezeigt, falls kein Bild verwendet hochgeladen wurde"""
  image_remote_url: String
  alias: String

  """* Muss gesetzt sein"""
  date_start: Date!

  """Falls ein Event nur bis zu einem bestimmten Zeitpunkt gültig ist."""
  date_end: Date
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  image: create_directus_files_input
  id: ID
  canteens: [create_popup_events_canteens_input]
  translations: [create_popup_events_translations_input]
}

input create_popup_events_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  content: String
  title: String
  languages_code: create_languages_input
  popup_events_id: create_popup_events_input
}

input create_profiles_buildings_favorites_input {
  id: ID
  profiles_id: create_profiles_input
  buildings_id: create_buildings_input
}

input create_profiles_buildings_last_opened_input {
  id: ID
  profiles_id: create_profiles_input
  buildings_id: create_buildings_input
}

input create_profiles_input {
  notifiy_on_free_apartments: Boolean
  sort: Int
  course_timetable: JSON
  avatar: JSON
  credit_balance: Float
  credit_balance_last_transaction: Float
  status: String
  price_group: String
  nickname: String
  language: create_languages_input
  credit_balance_date_updated: Date
  date_privacy_policy_accepted: Date
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  canteen: create_canteens_input
  markings: [create_profiles_markings_input]
  buildings_favorites: [create_profiles_buildings_favorites_input]
  buildings_last_opened: [create_profiles_buildings_last_opened_input]
  devices: [create_devices_input]
  foods_feedbacks: [create_foods_feedbacks_input]
}

input create_profiles_markings_input {
  dislike: Boolean
  like: Boolean
  id: ID
  profiles_id: create_profiles_input
  markings_id: create_markings_input
}

input create_push_notifications_input {
  ios_play_sound: Boolean
  ios_badge_count: Int
  message_ttl: Int
  sort: Int
  message_data: JSON
  status_log: String

  """
  Format: ExponentPushToken[xxxxxxxxxxxxxxxxx] with prefix and brackets, then press enter for more
  """
  expo_push_tokens: JSON
  message_title: String
  message_body: String
  ios_message_subtitle: String
  expo_access_token: String
  android_channel_id: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
}

input create_report_recipients_input {
  sort: Int
  mail: String
  name: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
}

input create_utilizations_entries_input {
  value_real: Int
  sort: Int
  value_forecast_current: Int
  status: String
  date_end: Date
  date_updated: Date
  date_created: Date
  date_start: Date
  utilization_group: create_utilizations_groups_input
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
}

input create_utilizations_groups_input {
  sort: Int
  threshold_until_low: Int
  threshold_until_medium: Int
  threshold_until_max: Int
  all_time_high: Int
  threshold_until_high: Int
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
  utilization_entries: [create_utilizations_entries_input]
}

input create_washingmachines_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_stated: Date
  date_finished: Date
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  id: ID
  user_created: create_directus_users_input
  apartment: create_apartments_input
}

input create_washingmachines_jobs_input {
  sort: Int
  duration_in_minutes_rounded_10min_calculated: Int
  duration_in_minutes_calculated: Int
  status: String
  duration_calculated: Date
  date_end: Date
  date_start: Date
  date_updated: Date
  user_updated: create_directus_users_input
  washingmachine: create_washingmachines_input
  date_created: Date
  id: ID
  user_created: create_directus_users_input
  apartment: create_apartments_input
}

input create_wikis_directus_roles_input {
  id: ID
  wikis_id: create_wikis_input
  directus_roles_id: create_directus_roles_input
}

input create_wikis_input {
  public: Boolean
  show_in_drawer: Boolean
  show_in_drawer_as_bottom_item: Boolean
  position: Int
  sort: Int
  color: String
  url: String
  status: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  custom_id: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  parent: create_wikis_input
  id: ID
  roles_required: [create_wikis_directus_roles_input]
  children: [create_wikis_input]
  translations: [create_wikis_translations_input]
}

input create_wikis_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  content: String
  title: String
  languages_code: create_languages_input
  wikis_id: create_wikis_input
}

input create_workflows_input {
  enabled: Boolean
  sort: Int
  id: ID!
  alias: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  workflows_runs: [create_workflows_runs_input]
}

input create_workflows_runs_input {
  sort: Int
  runtime_in_seconds: Int
  log: String
  output: String
  input: String
  result_hash: String
  alias: String
  state: String
  workflow: create_workflows_input
  status: String
  date_finished: Date
  date_updated: Date
  date_created: Date
  date_started: Date
  user_updated: create_directus_users_input
  user_created: create_directus_users_input
  id: ID
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input date_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
}

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input devices_filter {
  is_simulator: boolean_filter_operators
  is_android: boolean_filter_operators
  is_ios: boolean_filter_operators
  is_landscape: boolean_filter_operators
  is_web: boolean_filter_operators
  is_tablet: boolean_filter_operators
  sort: number_filter_operators
  pushTokenObj: string_filter_operators
  pushTokenObj_func: count_function_filter_operators
  display_width: number_filter_operators
  display_scale: number_filter_operators
  display_pixelratio: number_filter_operators
  display_fontscale: number_filter_operators
  display_height: number_filter_operators
  system_version: string_filter_operators
  status: string_filter_operators
  platform: string_filter_operators
  brand: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  profile: profiles_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [devices_filter]
  _or: [devices_filter]
}

input directus_access_filter {
  sort: number_filter_operators
  id: string_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  _and: [directus_access_filter]
  _or: [directus_access_filter]
}

input directus_activity_filter {
  id: number_filter_operators
  user_agent: string_filter_operators
  origin: string_filter_operators
  item: string_filter_operators
  collection: string_filter_operators
  ip: string_filter_operators
  action: string_filter_operators
  timestamp: date_filter_operators
  timestamp_func: datetime_function_filter_operators
  user: directus_users_filter
  revisions: directus_revisions_filter
  revisions_func: count_function_filter_operators
  _and: [directus_activity_filter]
  _or: [directus_activity_filter]
}

input directus_dashboards_filter {
  note: string_filter_operators
  color: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  panels: directus_panels_filter
  panels_func: count_function_filter_operators
  _and: [directus_dashboards_filter]
  _or: [directus_dashboards_filter]
}

input directus_files_filter {
  is_unreferenced: boolean_filter_operators
  filesize: big_int_filter_operators
  focal_point_y: number_filter_operators
  focal_point_x: number_filter_operators
  duration: number_filter_operators
  height: number_filter_operators
  width: number_filter_operators
  metadata: string_filter_operators
  metadata_func: count_function_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  tus_data: string_filter_operators
  tus_data_func: count_function_filter_operators
  tus_id: string_filter_operators
  embed: string_filter_operators
  charset: string_filter_operators
  type: string_filter_operators
  title: string_filter_operators
  filename_download: string_filter_operators
  filename_disk: string_filter_operators
  storage: string_filter_operators
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  created_on: date_filter_operators
  created_on_func: datetime_function_filter_operators
  modified_by: directus_users_filter
  uploaded_by: directus_users_filter
  folder: directus_folders_filter
  id: string_filter_operators
  _and: [directus_files_filter]
  _or: [directus_files_filter]
}

input directus_flows_filter {
  description: string_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  accountability: string_filter_operators
  trigger: string_filter_operators
  status: string_filter_operators
  color: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  operation: directus_operations_filter
  user_created: directus_users_filter
  operations: directus_operations_filter
  operations_func: count_function_filter_operators
  _and: [directus_flows_filter]
  _or: [directus_flows_filter]
}

input directus_folders_filter {
  name: string_filter_operators
  id: string_filter_operators
  parent: directus_folders_filter
  _and: [directus_folders_filter]
  _or: [directus_folders_filter]
}

input directus_operations_filter {
  position_y: number_filter_operators
  position_x: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  type: string_filter_operators
  key: string_filter_operators
  name: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  flow: directus_flows_filter
  user_created: directus_users_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
}

input directus_panels_filter {
  show_header: boolean_filter_operators
  height: number_filter_operators
  width: number_filter_operators
  position_y: number_filter_operators
  position_x: number_filter_operators
  note: string_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  type: string_filter_operators
  color: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  dashboard: directus_dashboards_filter
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
}

input directus_permissions_filter {
  id: number_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  fields: string_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  action: string_filter_operators
  collection: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
}

input directus_policies_filter {
  app_access: boolean_filter_operators
  admin_access: boolean_filter_operators
  enforce_tfa: boolean_filter_operators
  description: string_filter_operators
  ip_access: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  id: string_filter_operators
  permissions: directus_permissions_filter
  permissions_func: count_function_filter_operators
  users: directus_access_filter
  users_func: count_function_filter_operators
  roles: directus_access_filter
  roles_func: count_function_filter_operators
  _and: [directus_policies_filter]
  _or: [directus_policies_filter]
}

input directus_revisions_filter {
  parent: directus_revisions_filter
  activity: directus_activity_filter
  id: number_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  item: string_filter_operators
  collection: string_filter_operators
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
}

input directus_roles_filter {
  description: string_filter_operators
  icon: string_filter_operators
  name: string_filter_operators
  id: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_filter
  children_func: count_function_filter_operators
  policies: directus_access_filter
  policies_func: count_function_filter_operators
  users: directus_users_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
}

input directus_sync_id_map_filter {
  id: number_filter_operators
  local_id: string_filter_operators
  sync_id: string_filter_operators
  table: string_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  _and: [directus_sync_id_map_filter]
  _or: [directus_sync_id_map_filter]
}

input directus_users_filter {
  email_notifications: boolean_filter_operators
  description: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  theme_light: string_filter_operators
  theme_dark: string_filter_operators
  appearance: string_filter_operators
  external_identifier: string_filter_operators
  provider: string_filter_operators
  last_page: string_filter_operators
  token: hash_filter_operators
  status: string_filter_operators
  tfa_secret: hash_filter_operators
  language: string_filter_operators
  title: string_filter_operators
  location: string_filter_operators
  password: hash_filter_operators
  email: string_filter_operators
  last_name: string_filter_operators
  first_name: string_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  id: string_filter_operators
  avatar: directus_files_filter
  role: directus_roles_filter
  profile: profiles_filter
  policies: directus_access_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
}

input directus_versions_filter {
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  hash: string_filter_operators
  item: string_filter_operators
  collection: string_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [directus_versions_filter]
  _or: [directus_versions_filter]
}

input files_shares_filter {
  sort: number_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_exires_at: date_filter_operators
  date_exires_at_func: datetime_function_filter_operators
  file: directus_files_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [files_shares_filter]
  _or: [files_shares_filter]
}

input foodoffers_categories_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: foodoffers_categories_translations_filter
  translations_func: count_function_filter_operators
  _and: [foodoffers_categories_filter]
  _or: [foodoffers_categories_filter]
}

input foodoffers_categories_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  foodoffers_categories_id: foodoffers_categories_filter
  _and: [foodoffers_categories_translations_filter]
  _or: [foodoffers_categories_translations_filter]
}

input foodoffers_filter {
  sort: number_filter_operators
  saturated_fat_g: number_filter_operators
  calories_kcal: number_filter_operators
  carbohydrate_g: number_filter_operators
  sugar_g: number_filter_operators
  fat_g: number_filter_operators
  fiber_g: number_filter_operators
  co2_g: number_filter_operators
  co2_saving_percentage: number_filter_operators
  price_employee: number_filter_operators
  salt_g: number_filter_operators
  price_guest: number_filter_operators
  price_student: number_filter_operators
  protein_g: number_filter_operators
  redirect_url: string_filter_operators
  category: string_filter_operators
  co2_rating: string_filter_operators
  status: string_filter_operators
  food: foods_filter
  alias: string_filter_operators
  date: date_filter_operators
  date_func: date_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  canteen: canteens_filter
  foodoffer_category: foodoffers_categories_filter
  markings: foodoffers_markings_filter
  markings_func: count_function_filter_operators
  attribute_values: foods_attributes_values_filter
  attribute_values_func: count_function_filter_operators
  _and: [foodoffers_filter]
  _or: [foodoffers_filter]
}

input foodoffers_markings_filter {
  id: number_filter_operators
  foodoffers_id: foodoffers_filter
  markings_id: markings_filter
  _and: [foodoffers_markings_filter]
  _or: [foodoffers_markings_filter]
}

input foods_attributes_filter {
  show_on_card: boolean_filter_operators
  show_on_label_list: boolean_filter_operators
  full_width: boolean_filter_operators
  sort: number_filter_operators
  suffix: string_filter_operators
  prefix: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon_expo: string_filter_operators
  external_identifier: string_filter_operators
  background_color: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  id: string_filter_operators
  group: foods_attributes_groups_filter
  translations: foods_attributes_translations_filter
  translations_func: count_function_filter_operators
  _and: [foods_attributes_filter]
  _or: [foods_attributes_filter]
}

input foods_attributes_groups_filter {
  sort: number_filter_operators
  background_color: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon_expo: string_filter_operators
  icon: string_filter_operators
  status: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  image: directus_files_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  food_attributes: foods_attributes_filter
  food_attributes_func: count_function_filter_operators
  translations: foods_attributes_groups_translations_filter
  translations_func: count_function_filter_operators
  _and: [foods_attributes_groups_filter]
  _or: [foods_attributes_groups_filter]
}

input foods_attributes_groups_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  foods_attributes_groups_id: foods_attributes_groups_filter
  _and: [foods_attributes_groups_translations_filter]
  _or: [foods_attributes_groups_translations_filter]
}

input foods_attributes_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  foods_attributes_id: foods_attributes_filter
  _and: [foods_attributes_translations_filter]
  _or: [foods_attributes_translations_filter]
}

input foods_attributes_values_filter {
  boolean_value: boolean_filter_operators
  number_value: number_filter_operators
  food_id: foods_filter
  string_value: string_filter_operators
  icon_value: string_filter_operators
  color_value: string_filter_operators
  foodoffer_id: foodoffers_filter
  id: string_filter_operators
  food_attribute: foods_attributes_filter
  _and: [foods_attributes_values_filter]
  _or: [foods_attributes_values_filter]
}

input foods_categories_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: foods_categories_translations_filter
  translations_func: count_function_filter_operators
  _and: [foods_categories_filter]
  _or: [foods_categories_filter]
}

input foods_categories_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  foods_categories_id: foods_categories_filter
  _and: [foods_categories_translations_filter]
  _or: [foods_categories_translations_filter]
}

input foods_feedbacks_filter {
  notify: boolean_filter_operators
  rating: number_filter_operators
  sort: number_filter_operators
  comment: string_filter_operators
  status: string_filter_operators
  food: foods_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  profile: profiles_filter
  id: string_filter_operators
  foodoffer: foodoffers_filter
  canteen: canteens_filter
  _and: [foods_feedbacks_filter]
  _or: [foods_feedbacks_filter]
}

input foods_feedbacks_foods_feedbacks_labels_filter {
  dislike: boolean_filter_operators
  id: number_filter_operators
  foods_feedbacks_id: foods_feedbacks_filter
  foods_feedbacks_labels_id: foods_feedbacks_labels_filter
  _and: [foods_feedbacks_foods_feedbacks_labels_filter]
  _or: [foods_feedbacks_foods_feedbacks_labels_filter]
}

input foods_feedbacks_labels_entries_filter {
  like: boolean_filter_operators
  dislike: boolean_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  food: foods_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  profile: profiles_filter
  label: foods_feedbacks_labels_filter
  id: string_filter_operators
  foodoffer: foodoffers_filter
  canteen: canteens_filter
  _and: [foods_feedbacks_labels_entries_filter]
  _or: [foods_feedbacks_labels_entries_filter]
}

input foods_feedbacks_labels_filter {
  sort: number_filter_operators
  icon: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: string_filter_operators
  image: directus_files_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  translations: foods_feedbacks_labels_translations_filter
  translations_func: count_function_filter_operators
  _and: [foods_feedbacks_labels_filter]
  _or: [foods_feedbacks_labels_filter]
}

input foods_feedbacks_labels_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  text: string_filter_operators
  languages_code: languages_filter
  foods_feedbacks_labels_id: foods_feedbacks_labels_filter
  _and: [foods_feedbacks_labels_translations_filter]
  _or: [foods_feedbacks_labels_translations_filter]
}

input foods_filter {
  rating_amount: number_filter_operators
  sort: number_filter_operators
  rating_amount_legacy: number_filter_operators
  sugar_g: number_filter_operators
  protein_g: number_filter_operators
  fiber_g: number_filter_operators
  fat_g: number_filter_operators
  carbohydrate_g: number_filter_operators
  calories_kcal: number_filter_operators
  saturated_fat_g: number_filter_operators
  rating_average: number_filter_operators
  salt_g: number_filter_operators
  co2_saving_percentage: number_filter_operators
  co2_g: number_filter_operators
  rating_average_legacy: number_filter_operators
  co2_rating: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  id: string_filter_operators
  extra: string_filter_operators
  category: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  food_category: foods_categories_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  feedbacks: foods_feedbacks_filter
  feedbacks_func: count_function_filter_operators
  markings: foods_markings_filter
  markings_func: count_function_filter_operators
  translations: foods_translations_filter
  translations_func: count_function_filter_operators
  attribute_values: foods_attributes_values_filter
  attribute_values_func: count_function_filter_operators
  _and: [foods_filter]
  _or: [foods_filter]
}

input foods_markings_filter {
  id: number_filter_operators
  foods_id: foods_filter
  markings_id: markings_filter
  _and: [foods_markings_filter]
  _or: [foods_markings_filter]
}

input foods_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  foods_id: foods_filter
  _and: [foods_translations_filter]
  _or: [foods_translations_filter]
}

input form_answers_files_filter {
  id: number_filter_operators
  directus_files_id: directus_files_filter
  form_answers_id: form_answers_filter
  _and: [form_answers_files_filter]
  _or: [form_answers_files_filter]
}

input form_answers_filter {
  sort: number_filter_operators
  value_boolean: boolean_filter_operators
  value_string: string_filter_operators
  value_custom: string_filter_operators
  value_custom_func: count_function_filter_operators
  value_number: number_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  value_date: date_filter_operators
  value_date_func: datetime_function_filter_operators
  value_image: directus_files_filter
  form_field: form_fields_filter
  form_submission: form_submissions_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  value_files: form_answers_files_filter
  value_files_func: count_function_filter_operators
  _and: [form_answers_filter]
  _or: [form_answers_filter]
}

input form_categories_filter {
  sort: number_filter_operators
  icon_expo: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: form_categories_translations_filter
  translations_func: count_function_filter_operators
  forms: forms_filter
  forms_func: count_function_filter_operators
  _and: [form_categories_filter]
  _or: [form_categories_filter]
}

input form_categories_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  form_categories_id: form_categories_filter
  _and: [form_categories_translations_filter]
  _or: [form_categories_translations_filter]
}

input form_extracts_filter {
  all_fields: boolean_filter_operators
  sort: number_filter_operators
  recipient_email_static: string_filter_operators
  alias: string_filter_operators
  internal_custom_id: string_filter_operators
  status: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  form: forms_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  recipient_email_field: form_fields_filter
  recipient_user: directus_users_filter
  fields: form_extracts_form_fields_filter
  fields_func: count_function_filter_operators
  _and: [form_extracts_filter]
  _or: [form_extracts_filter]
}

input form_extracts_form_fields_filter {
  id: number_filter_operators
  form_fields_id: form_fields_filter
  form_extracts_id: form_extracts_filter
  _and: [form_extracts_form_fields_filter]
  _or: [form_extracts_form_fields_filter]
}

input form_fields_filter {
  is_required: boolean_filter_operators
  is_visible_in_form: boolean_filter_operators
  is_disabled: boolean_filter_operators
  is_visible_in_export: boolean_filter_operators
  sort: number_filter_operators
  value_suffix: string_filter_operators
  value_prefix: string_filter_operators
  internal_custom_id: string_filter_operators
  external_export_field_name: string_filter_operators
  external_export_id: string_filter_operators
  external_import_id: string_filter_operators
  field_type: string_filter_operators
  alias: string_filter_operators
  background_color: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon_expo: string_filter_operators
  icon: string_filter_operators
  status: string_filter_operators
  form: forms_filter
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  image: directus_files_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  translations: form_fields_translations_filter
  translations_func: count_function_filter_operators
  _and: [form_fields_filter]
  _or: [form_fields_filter]
}

input form_fields_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  form_fields_id: form_fields_filter
  _and: [form_fields_translations_filter]
  _or: [form_fields_translations_filter]
}

input form_submissions_filter {
  sort: number_filter_operators
  internal_custom_id: string_filter_operators
  alias: string_filter_operators
  state: string_filter_operators
  status: string_filter_operators
  date_locked_until: date_filter_operators
  date_locked_until_func: datetime_function_filter_operators
  date_submitted: date_filter_operators
  date_submitted_func: datetime_function_filter_operators
  date_started: date_filter_operators
  date_started_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  user_locked_by: directus_users_filter
  form: forms_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  form_answers: form_answers_filter
  form_answers_func: count_function_filter_operators
  mails: mails_filter
  mails_func: count_function_filter_operators
  _and: [form_submissions_filter]
  _or: [form_submissions_filter]
}

input forms_filter {
  sort: number_filter_operators
  icon_expo: string_filter_operators
  alias: string_filter_operators
  internal_custom_id: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  category: form_categories_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  form_fields: form_fields_filter
  form_fields_func: count_function_filter_operators
  form_submissions: form_submissions_filter
  form_submissions_func: count_function_filter_operators
  translations: forms_translations_filter
  translations_func: count_function_filter_operators
  _and: [forms_filter]
  _or: [forms_filter]
}

input forms_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  forms_id: forms_filter
  _and: [forms_translations_filter]
  _or: [forms_translations_filter]
}

input hash_filter_operators {
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input languages_filter {
  status: string_filter_operators
  name: string_filter_operators
  direction: string_filter_operators
  code: string_filter_operators
  _and: [languages_filter]
  _or: [languages_filter]
}

input mails_files_filter {
  id: number_filter_operators
  mails_id: mails_filter
  directus_files_id: directus_files_filter
  _and: [mails_files_filter]
  _or: [mails_files_filter]
}

input mails_filter {
  send_attachments_as_links: boolean_filter_operators
  sort: number_filter_operators
  log: string_filter_operators
  markdown_content: string_filter_operators
  template_data: string_filter_operators
  template_data_func: count_function_filter_operators
  send_status: string_filter_operators
  template_name: string_filter_operators
  subject: string_filter_operators
  recipient: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  form_submission: form_submissions_filter
  attachments: mails_files_filter
  attachments_func: count_function_filter_operators
  _and: [mails_filter]
  _or: [mails_filter]
}

input markings_exclusions_filter {
  id: number_filter_operators
  restricted_markings_id: markings_filter
  restricted_by_markings_id: markings_filter
  _and: [markings_exclusions_filter]
  _or: [markings_exclusions_filter]
}

input markings_filter {
  show_on_label_list: boolean_filter_operators
  invert_background_color: boolean_filter_operators
  hide_border: boolean_filter_operators
  show_on_card: boolean_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  background_color: string_filter_operators
  short_code: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  icon: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  image: directus_files_filter
  user_created: directus_users_filter
  user_updated: directus_users_filter
  group: markings_groups_filter
  id: string_filter_operators
  excluded_by_markings: markings_exclusions_filter
  excluded_by_markings_func: count_function_filter_operators
  translations: markings_translations_filter
  translations_func: count_function_filter_operators
  _and: [markings_filter]
  _or: [markings_filter]
}

input markings_groups_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  translations: markings_groups_translations_filter
  translations_func: count_function_filter_operators
  markings: markings_filter
  markings_func: count_function_filter_operators
  _and: [markings_groups_filter]
  _or: [markings_groups_filter]
}

input markings_groups_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  markings_groups_id: markings_groups_filter
  _and: [markings_groups_translations_filter]
  _or: [markings_groups_translations_filter]
}

input markings_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  description: string_filter_operators
  name: string_filter_operators
  languages_code: languages_filter
  markings_id: markings_filter
  _and: [markings_translations_filter]
  _or: [markings_translations_filter]
}

input news_filter {
  sort: number_filter_operators
  categories: string_filter_operators
  categories_func: count_function_filter_operators
  url: string_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date: date_filter_operators
  date_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  id: string_filter_operators
  translations: news_translations_filter
  translations_func: count_function_filter_operators
  _and: [news_filter]
  _or: [news_filter]
}

input news_translations_filter {
  be_source_for_translations: boolean_filter_operators
  let_be_translated: boolean_filter_operators
  id: number_filter_operators
  content: string_filter_operators
  title: string_filter_operators
  languages_code: languages_filter
  news_id: news_filter
  _and: [news_translations_filter]
  _or: [news_translations_filter]
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input popup_events_canteens_filter {
  id: number_filter_operators
  popup_events_id: popup_events_filter
  canteens_id: canteens_filter
  _and: [popup_events_canteens_filter]
  _or: [popup_events_canteens_filter]
}

input popup_events_filter {
  show_on_android: boolean_filter_operators
  show_on_ios: boolean_filter_operators
  show_on_web: boolean_filter_operators
  send_notification: boolean_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  image_thumb_hash: string_filter_operators
  image_remote_url: string_filter_operators
  alias: string_filter_operators
  date_start: date_filter_operators
  date_start_func: datetime_function_filter_operators
  date_end: date_filter_operators
  date_end_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  image: directus_files_filter
  id: string_filter_operators
  canteens: popup_events_canteens_filter
  canteens_func: count_function_filter_operators
  translations: popup_events_translations_filter
  translations_func: count_function_filter_operators
  _and: [popup_events_filter]
  _or: [popup_events_filter]
}

input popup_events_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  content: string_filter_operators
  title: string_filter_operators
  languages_code: languages_filter
  popup_events_id: popup_events_filter
  _and: [popup_events_translations_filter]
  _or: [popup_events_translations_filter]
}

input profiles_buildings_favorites_filter {
  id: number_filter_operators
  profiles_id: profiles_filter
  buildings_id: buildings_filter
  _and: [profiles_buildings_favorites_filter]
  _or: [profiles_buildings_favorites_filter]
}

input profiles_buildings_last_opened_filter {
  id: number_filter_operators
  profiles_id: profiles_filter
  buildings_id: buildings_filter
  _and: [profiles_buildings_last_opened_filter]
  _or: [profiles_buildings_last_opened_filter]
}

input profiles_filter {
  notifiy_on_free_apartments: boolean_filter_operators
  sort: number_filter_operators
  course_timetable: string_filter_operators
  course_timetable_func: count_function_filter_operators
  avatar: string_filter_operators
  avatar_func: count_function_filter_operators
  credit_balance: number_filter_operators
  credit_balance_last_transaction: number_filter_operators
  status: string_filter_operators
  price_group: string_filter_operators
  nickname: string_filter_operators
  language: languages_filter
  credit_balance_date_updated: date_filter_operators
  credit_balance_date_updated_func: datetime_function_filter_operators
  date_privacy_policy_accepted: date_filter_operators
  date_privacy_policy_accepted_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  canteen: canteens_filter
  markings: profiles_markings_filter
  markings_func: count_function_filter_operators
  buildings_favorites: profiles_buildings_favorites_filter
  buildings_favorites_func: count_function_filter_operators
  buildings_last_opened: profiles_buildings_last_opened_filter
  buildings_last_opened_func: count_function_filter_operators
  devices: devices_filter
  devices_func: count_function_filter_operators
  foods_feedbacks: foods_feedbacks_filter
  foods_feedbacks_func: count_function_filter_operators
  _and: [profiles_filter]
  _or: [profiles_filter]
}

input profiles_markings_filter {
  dislike: boolean_filter_operators
  like: boolean_filter_operators
  id: number_filter_operators
  profiles_id: profiles_filter
  markings_id: markings_filter
  _and: [profiles_markings_filter]
  _or: [profiles_markings_filter]
}

input push_notifications_filter {
  ios_play_sound: boolean_filter_operators
  ios_badge_count: number_filter_operators
  message_ttl: number_filter_operators
  sort: number_filter_operators
  message_data: string_filter_operators
  message_data_func: count_function_filter_operators
  status_log: string_filter_operators
  expo_push_tokens: string_filter_operators
  expo_push_tokens_func: count_function_filter_operators
  message_title: string_filter_operators
  message_body: string_filter_operators
  ios_message_subtitle: string_filter_operators
  expo_access_token: string_filter_operators
  android_channel_id: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [push_notifications_filter]
  _or: [push_notifications_filter]
}

input report_recipients_filter {
  sort: number_filter_operators
  mail: string_filter_operators
  name: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [report_recipients_filter]
  _or: [report_recipients_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input time_function_filter_operators {
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input update_apartments_input {
  singleflat: Boolean
  handicapped_accessible: Boolean
  family_friendly: Boolean
  sort: Int
  status: String
  external_identifier: String
  available_from: Date
  date_created: Date
  date_updated: Date
  building: update_buildings_input
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  washingmachines: [update_washingmachines_input]
}

input update_app_elements_input {
  sort: Int
  status: String
  date_updated: Date
  date_created: Date
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  id: ID
  translations: [update_app_elements_translations_input]
}

input update_app_elements_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  popup_content: String
  content: String
  popup_button_text: String
  languages_code: update_languages_input
  app_elements_id: update_app_elements_input
}

input update_app_feedbacks_input {
  feedback_read_by_support: Boolean
  positive: Boolean
  response_read_by_user: Boolean
  sort: Int
  priority: Int
  response: String
  content: String
  display_scale: Float
  display_width: Float
  display_height: Float
  display_fontscale: Float
  display_pixelratio: Float
  title: String
  status: String
  device_system_version: String
  device_platform: String
  device_brand: String
  contact_email: String
  date_created: Date
  date_updated: Date
  id: ID
  profile: update_profiles_input
  user_created: String
  user_updated: update_directus_users_input
}

input update_app_settings_balance_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  app_settings_id: update_app_settings_input
  content: String
  languages_code: update_languages_input
}

input update_app_settings_housing_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  app_settings_id: update_app_settings_input
  content: String
  languages_code: update_languages_input
}

input update_app_settings_input {
  """Zeigt den Bereich Wohnen in der App an"""
  housing_enabled: Boolean

  """Soll die durschnittliche Bewertung der Speisen angezeigt werden?"""
  foods_ratings_average_display: Boolean

  """Soll die Anzahl der Bewertungen angezeigt werden?"""
  foods_ratings_amount_display: Boolean
  balance_enabled: Boolean

  """Bereich "Mensa" in der App aktivieren?"""
  foods_enabled: Boolean
  course_timetable_enabled: Boolean
  animations_auto_start: Boolean

  """Zeige die Auslastungsprognose in der App"""
  utilization_display_enabled: Boolean

  """Zeige in der App den Bereich Campus an"""
  campus_enabled: Boolean
  notifications_ios_enabled: Boolean
  notifications_email_enabled: Boolean
  notifications_android_enabled: Boolean

  """Zeigt in der App den Bereich News an"""
  news_enabled: Boolean

  """Zeige den Lageplan in der App an"""
  map_enabled: Boolean
  id: ID

  """Liste erlaubter Seiten die sich bei der App Anmelden dürfen"""
  redirect_whitelist: JSON
  foods_area_color: String
  status: String

  """Wie sollen die Bewertungen angezeigt werden? Sterne, Daumen, ..."""
  foods_ratings_type: String
  foods_placeholder_image_thumb_hash: String
  foods_placeholder_image_remote_url: String
  foods_feedbacks_labels_type: String

  """
  URL zu einem externen Forum für Rückmeldungen und Bewertungen von Speisen
  """
  foods_feedbacks_custom_url: String
  foods_feedbacks_comments_type: String

  """Wer ist für die Inhalte der Speiseangebote verantwortlich?"""
  food_responsible_organization_name: String

  """URL bzw. Link zu der verantwortlichen Stelle"""
  food_responsible_organization_link: String
  app_stores_url_to_google: String
  app_stores_url_to_apple: String
  course_timetable_area_color: String
  balance_area_color: String
  campus_area_color: String
  news_area_color: String
  housing_area_color: String
  maintenance_end: Date
  maintenance_start: Date
  date_privacy_policy_updated: Date
  date_created: Date
  date_updated: Date
  foods_placeholder_image: update_directus_files_input
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  company_image: update_directus_files_input
  placeholder_image: update_directus_files_input
  foodoffers_list_before_element: update_app_elements_input
  foodoffers_list_after_element: update_app_elements_input
  housing_translations: [update_app_settings_housing_translations_input]
  balance_translations: [update_app_settings_balance_translations_input]
  login_screen_translations: [update_app_settings_login_screen_translations_input]
}

input update_app_settings_login_screen_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  detailed_description: String
  id: ID
  app_settings_id: update_app_settings_input
  intro_description: String
  languages_code: update_languages_input
}

input update_auto_translation_settings_input {
  active: Boolean
  valid_auth_key: Boolean
  used: Int
  percentage: Int
  limit: Int
  id: ID

  """Informations about errors will be shown here."""
  informations: String

  """Informations about errors will be shown here."""
  extra: String

  """
  Authentication - You need an authentication key to access to the API. https://www.deepl.com/de/your-account/keys
  """
  auth_key: String
}

input update_buildings_attributes_input {
  sort: Int
  status: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
}

input update_buildings_businesshours_input {
  id: ID
  buildings_id: update_buildings_input
  businesshours_id: update_businesshours_input
}

input update_buildings_input {
  sort: Int
  coordinates: JSON
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_of_construction: Date
  date_created: Date
  id: ID
  image: update_directus_files_input
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  translations: [update_buildings_translations_input]
  apartments: [update_apartments_input]
  businesshours: [update_buildings_businesshours_input]
}

input update_buildings_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  content: String
  languages_code: update_languages_input
  buildings_id: update_buildings_input
}

input update_businesshours_groups_input {
  sort: Int
  alias: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  translations: [update_businesshours_groups_translations_input]
}

input update_businesshours_groups_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  businesshours_groups_id: update_businesshours_groups_input
}

input update_businesshours_input {
  tuesday: Boolean
  wednesday: Boolean
  friday: Boolean
  monday: Boolean
  saturday: Boolean
  sunday: Boolean
  thursday: Boolean
  sort: Int
  status: String
  time_start: Date
  time_end: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_from: Date

  """Leave empty to use default; overridden by other defined ranges."""
  date_valid_till: Date
  date_updated: Date
  date_created: Date
  user_created: update_directus_users_input
  id: ID
  group: update_businesshours_groups_input
  user_updated: update_directus_users_input
}

input update_canteen_food_feedback_report_schedules_canteens_input {
  id: ID
  canteens_id: update_canteens_input
  canteen_food_feedback_report_schedules_id: update_canteen_food_feedback_report_schedules_input
}

input update_canteen_food_feedback_report_schedules_input {
  enabled: Boolean

  """Zeige Bilder der Speisen"""
  show_images: Boolean

  """Zeige Speise Kommentare für den gewählten Zeitraum"""
  show_food_comments_for_selected_period: Boolean

  """Zeige Speise Kommentare insgesammt"""
  show_food_comments_for_all_time: Boolean
  send_on_thursdays: Boolean
  send_on_fridays: Boolean
  send_on_saturdays: Boolean
  send_on_sundays: Boolean
  report_send_successfully: Boolean

  """Zeige Rückmeldungen zu den Mensen pro Mensa: Labels"""
  show_canteen_feedbacks_also_per_canteen: Boolean

  """Zeige Mensa Rückmeldungen für Ausgewählten Zeitraum"""
  show_canteen_feedbacks_for_selected_period: Boolean

  """Zeige Mensa Rückmeldungen insgesammt"""
  show_canteen_feedbacks_for_all_time: Boolean

  """Zeige Speise Label Rückmeldungen insgesammt"""
  show_food_feedback_labels_for_all_time: Boolean

  """Zeige Speise Label Rückmeldungen für den gewählten Zeitraum"""
  show_food_feedback_labels_for_selected_period: Boolean
  send_on_mondays: Boolean
  send_on_tuesdays: Boolean
  send_on_wednesdays: Boolean
  sort: Int

  """
  Anzahl der Tage, um den der Referenztag verschoben wird. Positive Werte verschieben den Referenztag in die Zukunft, negative in die Vergangenheit.
  """
  period_days_offset: Int

  """
  Anzahl der vorherigen Tage fest, die im Bericht enthalten sein sollen, einschließlich des Referenztags. Wenn 1 gesetzt ist, wird nur der Referenztag im Bericht berücksichtigt. Der Referenztag kann durch den Offset verschoben werden.
  """
  period_days_amount: Int
  report_status_log: String
  alias: String
  status: String
  date_next_report_is_due: Date
  send_report_at_hh_mm: Date

  """Bericht einmalig senden, als wäre es Tag X"""
  send_once_now_for_reference_date: Date
  date_created: Date
  date_updated: Date
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  canteens: [update_canteen_food_feedback_report_schedules_canteens_input]
  recipients: [update_canteen_food_feedback_report_schedules_report_recipients_input]
}

input update_canteen_food_feedback_report_schedules_report_recipients_input {
  id: ID
  canteen_food_feedback_report_schedules_id: update_canteen_food_feedback_report_schedules_input
  report_recipients_id: update_report_recipients_input
}

input update_canteens_feedbacks_labels_entries_input {
  like: Boolean
  dislike: Boolean
  sort: Int
  status: String
  date: Date
  date_updated: Date
  date_created: Date
  label: update_canteens_feedbacks_labels_input
  canteen: update_canteens_input
  profile: update_profiles_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
}

input update_canteens_feedbacks_labels_input {
  sort: Int
  image_thumb_hash: String
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  status: String
  date_created: Date
  id: ID
  user_created: update_directus_users_input
  date_updated: Date
  image: update_directus_files_input
  user_updated: update_directus_users_input
  translations: [update_canteens_feedbacks_labels_translations_input]
}

input update_canteens_feedbacks_labels_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  text: String
  languages_code: update_languages_input
  canteens_feedbacks_labels_id: update_canteens_feedbacks_labels_input
}

input update_canteens_foodservice_hours_during_semester_break_input {
  id: ID
  businesshours_id: update_businesshours_input
  canteens_id: update_canteens_input
}

input update_canteens_foodservice_hours_input {
  id: ID
  businesshours_id: update_businesshours_input
  canteens_id: update_canteens_input
}

input update_canteens_input {
  """
  Beim Importieren von Speiseangeboten sind die Angebote für alle Tage gültig und haben daher kein Datum.
  """
  foodoffers_import_without_date: Boolean

  """
  Beim Importieren von Speiseangeboten werden alle statischen Speiseangebote gelöscht, also die ohne Datum.
  """
  foodoffers_import_delete_all_without_dates: Boolean
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_created: Date
  date_updated: Date
  building: update_buildings_input
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  utilization_group: update_utilizations_groups_input
}

input update_cashregisters_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  canteen: update_canteens_input
  transactions: [update_cashregisters_transactions_input]
}

input update_cashregisters_transactions_input {
  weekday_index_calculated: Int
  sort: Int
  quantity: Float
  status: String
  name: String
  id: ID
  date_created: Date
  date_updated: Date
  date: Date
  cashregister: update_cashregisters_input
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_collectible_event_participants_input {
  sort: Int
  points: String
  phone_number: String
  email: String
  status: String
  date_created: Date
  date_updated: Date
  id: ID
  profile: update_profiles_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  collectible_event: update_collectible_events_input
}

input update_collectible_events_input {
  sort: Int
  points_maximum: String
  points_minimum: String
  alias: String
  status: String
  date_start: Date
  date_updated: Date
  date_created: Date
  date_end: Date
  user_updated: update_directus_users_input
  collectible_image: update_directus_files_input
  monitor_background_image: update_directus_files_input
  id: ID
  user_created: update_directus_users_input
  participants: [update_collectible_event_participants_input]
  translations: [update_collectible_events_translations_input]
}

input update_collectible_events_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  description: String
  title: String
  languages_code: update_languages_input
  collectible_events_id: update_collectible_events_input
}

input update_collections_dates_last_update_input {
  sort: Int
  status: String
  id: ID
  date_created: Date
  date_updated: Date
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_devices_input {
  is_simulator: Boolean
  is_android: Boolean
  is_ios: Boolean
  is_landscape: Boolean
  is_web: Boolean
  is_tablet: Boolean
  sort: Int
  pushTokenObj: JSON
  display_width: Float
  display_scale: Float
  display_pixelratio: Float
  display_fontscale: Float
  display_height: Float
  system_version: String
  status: String
  platform: String
  brand: String
  alias: String
  date_updated: Date
  date_created: Date
  id: ID
  profile: update_profiles_input
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_directus_access_input {
  sort: Int
  id: ID
  role: update_directus_roles_input
  user: update_directus_users_input
  policy: update_directus_policies_input
}

input update_directus_files_input {
  is_unreferenced: Boolean
  filesize: GraphQLBigInt
  focal_point_y: Int
  focal_point_x: Int
  duration: Int
  height: Int
  width: Int
  metadata: JSON
  description: String
  location: String
  tags: JSON
  tus_data: JSON
  tus_id: String
  embed: String
  charset: String
  type: String
  title: String
  filename_download: String
  filename_disk: String
  storage: String
  uploaded_on: Date
  modified_on: Date
  created_on: Date
  modified_by: update_directus_users_input
  uploaded_by: update_directus_users_input
  folder: update_directus_folders_input
  id: ID
}

input update_directus_folders_input {
  name: String
  id: ID
  parent: update_directus_folders_input
}

input update_directus_permissions_input {
  id: ID
  validation: JSON
  fields: [String]
  permissions: JSON
  presets: JSON
  action: String
  collection: String
  policy: update_directus_policies_input
}

input update_directus_policies_input {
  app_access: Boolean
  admin_access: Boolean

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean
  description: String
  ip_access: [String]
  icon: String
  name: String
  id: ID
  permissions: [update_directus_permissions_input]
  users: [update_directus_access_input]
  roles: [update_directus_access_input]
}

input update_directus_roles_input {
  description: String
  icon: String
  name: String
  id: ID
  parent: update_directus_roles_input
  children: [update_directus_roles_input]
  policies: [update_directus_access_input]
  users: [update_directus_users_input]
}

input update_directus_sync_id_map_input {
  id: ID
  local_id: String
  sync_id: String
  table: String
  created_at: Date
}

input update_directus_users_input {
  email_notifications: Boolean
  description: String
  auth_data: JSON
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  tags: JSON
  theme_light: String
  theme_dark: String
  appearance: String
  external_identifier: String
  provider: String
  last_page: String
  token: Hash
  status: String
  tfa_secret: Hash
  language: String
  title: String
  location: String
  password: Hash
  email: String
  last_name: String
  first_name: String
  last_access: Date
  id: ID
  avatar: update_directus_files_input
  role: update_directus_roles_input
  profile: update_profiles_input
  policies: [update_directus_access_input]
}

input update_files_shares_input {
  sort: Int
  status: String
  date_updated: Date
  date_created: Date
  date_exires_at: Date
  file: update_directus_files_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
}

input update_foodoffers_categories_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  translations: [update_foodoffers_categories_translations_input]
}

input update_foodoffers_categories_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  foodoffers_categories_id: update_foodoffers_categories_input
}

input update_foodoffers_input {
  sort: Int
  saturated_fat_g: Float
  calories_kcal: Float
  carbohydrate_g: Float
  sugar_g: Float
  fat_g: Float
  fiber_g: Float
  co2_g: Float
  co2_saving_percentage: Float
  price_employee: Float
  salt_g: Float
  price_guest: Float
  price_student: Float
  protein_g: Float
  redirect_url: String
  category: String
  co2_rating: String
  status: String
  food: update_foods_input
  alias: String
  date: Date
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  canteen: update_canteens_input
  foodoffer_category: update_foodoffers_categories_input
  markings: [update_foodoffers_markings_input]
  attribute_values: [update_foods_attributes_values_input]
}

input update_foodoffers_markings_input {
  id: ID
  foodoffers_id: update_foodoffers_input
  markings_id: update_markings_input
}

input update_foods_attributes_groups_input {
  sort: Int
  background_color: String
  image_thumb_hash: String
  image_remote_url: String
  icon_expo: String
  icon: String
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  image: update_directus_files_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  food_attributes: [update_foods_attributes_input]
  translations: [update_foods_attributes_groups_translations_input]
}

input update_foods_attributes_groups_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  foods_attributes_groups_id: update_foods_attributes_groups_input
}

input update_foods_attributes_input {
  show_on_card: Boolean
  show_on_label_list: Boolean
  full_width: Boolean
  sort: Int
  suffix: String
  prefix: String
  status: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  external_identifier: String
  background_color: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  image: update_directus_files_input
  id: ID
  group: update_foods_attributes_groups_input
  translations: [update_foods_attributes_translations_input]
}

input update_foods_attributes_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  description: String
  name: String
  languages_code: update_languages_input
  foods_attributes_id: update_foods_attributes_input
}

input update_foods_attributes_values_input {
  boolean_value: Boolean
  number_value: Float
  food_id: update_foods_input
  string_value: String
  icon_value: String
  color_value: String
  foodoffer_id: update_foodoffers_input
  id: ID
  food_attribute: update_foods_attributes_input
}

input update_foods_categories_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  translations: [update_foods_categories_translations_input]
}

input update_foods_categories_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  foods_categories_id: update_foods_categories_input
}

input update_foods_feedbacks_foods_feedbacks_labels_input {
  dislike: Boolean
  id: ID
  foods_feedbacks_id: update_foods_feedbacks_input
  foods_feedbacks_labels_id: update_foods_feedbacks_labels_input
}

input update_foods_feedbacks_input {
  notify: Boolean
  rating: Int
  sort: Int
  comment: String
  status: String
  food: update_foods_input
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  profile: update_profiles_input
  id: ID
  foodoffer: update_foodoffers_input
  canteen: update_canteens_input
}

input update_foods_feedbacks_labels_entries_input {
  like: Boolean
  dislike: Boolean
  sort: Int
  status: String
  food: update_foods_input
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  profile: update_profiles_input
  label: update_foods_feedbacks_labels_input
  id: ID
  foodoffer: update_foodoffers_input
  canteen: update_canteens_input
}

input update_foods_feedbacks_labels_input {
  sort: Int

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  alias: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  date_created: Date
  date_updated: Date
  id: ID
  image: update_directus_files_input
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  translations: [update_foods_feedbacks_labels_translations_input]
}

input update_foods_feedbacks_labels_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  text: String
  languages_code: update_languages_input
  foods_feedbacks_labels_id: update_foods_feedbacks_labels_input
}

input update_foods_input {
  rating_amount: Int
  sort: Int
  rating_amount_legacy: Int
  sugar_g: Float
  protein_g: Float
  fiber_g: Float
  fat_g: Float
  carbohydrate_g: Float
  calories_kcal: Float
  saturated_fat_g: Float
  rating_average: Float
  salt_g: Float
  co2_saving_percentage: Float
  co2_g: Float
  rating_average_legacy: Float
  co2_rating: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  id: ID
  extra: String
  category: String
  alias: String
  date_updated: Date
  date_created: Date
  food_category: update_foods_categories_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  image: update_directus_files_input
  feedbacks: [update_foods_feedbacks_input]
  markings: [update_foods_markings_input]
  translations: [update_foods_translations_input]
  attribute_values: [update_foods_attributes_values_input]
}

input update_foods_markings_input {
  id: ID
  foods_id: update_foods_input
  markings_id: update_markings_input
}

input update_foods_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  foods_id: update_foods_input
}

input update_form_answers_files_input {
  id: ID
  directus_files_id: update_directus_files_input
  form_answers_id: update_form_answers_input
}

input update_form_answers_input {
  sort: Int
  value_boolean: Boolean
  value_string: String
  value_custom: JSON
  value_number: Float
  status: String
  date_updated: Date
  date_created: Date
  value_date: Date
  value_image: update_directus_files_input
  form_field: update_form_fields_input
  form_submission: update_form_submissions_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  value_files: [update_form_answers_files_input]
}

input update_form_categories_input {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  translations: [update_form_categories_translations_input]
  forms: [update_forms_input]
}

input update_form_categories_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  form_categories_id: update_form_categories_input
}

input update_form_extracts_form_fields_input {
  id: ID
  form_fields_id: update_form_fields_input
  form_extracts_id: update_form_extracts_input
}

input update_form_extracts_input {
  all_fields: Boolean
  sort: Int
  recipient_email_static: String
  alias: String
  internal_custom_id: String
  status: String
  date_created: Date
  date_updated: Date
  form: update_forms_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  recipient_email_field: update_form_fields_input
  recipient_user: update_directus_users_input
  fields: [update_form_extracts_form_fields_input]
}

input update_form_fields_input {
  is_required: Boolean
  is_visible_in_form: Boolean
  is_disabled: Boolean
  is_visible_in_export: Boolean
  sort: Int
  value_suffix: String
  value_prefix: String
  internal_custom_id: String
  external_export_field_name: String
  external_export_id: String
  external_import_id: String
  field_type: String
  alias: String
  background_color: String
  image_thumb_hash: String
  image_remote_url: String

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  icon: String
  status: String
  form: update_forms_input
  date_updated: Date
  date_created: Date
  image: update_directus_files_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  translations: [update_form_fields_translations_input]
}

input update_form_fields_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  description: String
  name: String
  languages_code: update_languages_input
  form_fields_id: update_form_fields_input
}

input update_form_submissions_input {
  sort: Int
  internal_custom_id: String
  alias: String
  state: String
  status: String
  date_locked_until: Date
  date_submitted: Date
  date_started: Date
  date_updated: Date
  date_created: Date
  id: ID
  user_locked_by: update_directus_users_input
  form: update_forms_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  form_answers: [update_form_answers_input]
  mails: [update_mails_input]
}

input update_forms_input {
  sort: Int

  """https://icons.expo.fyi/Index"""
  icon_expo: String
  alias: String
  internal_custom_id: String
  status: String
  date_updated: Date
  date_created: Date
  category: update_form_categories_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  form_fields: [update_form_fields_input]
  form_submissions: [update_form_submissions_input]
  translations: [update_forms_translations_input]
}

input update_forms_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: update_languages_input
  forms_id: update_forms_input
}

input update_languages_input {
  status: String
  name: String
  direction: String
  code: ID
}

input update_mails_files_input {
  id: ID
  mails_id: update_mails_input
  directus_files_id: update_directus_files_input
}

input update_mails_input {
  send_attachments_as_links: Boolean
  sort: Int
  log: String
  markdown_content: String
  template_data: JSON
  send_status: String
  template_name: String
  subject: String
  recipient: String
  status: String
  date_updated: Date
  date_created: Date
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  form_submission: update_form_submissions_input
  attachments: [update_mails_files_input]
}

input update_markings_exclusions_input {
  id: ID
  restricted_markings_id: update_markings_input
  restricted_by_markings_id: update_markings_input
}

input update_markings_groups_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_updated: Date
  date_created: Date
  id: ID
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  translations: [update_markings_groups_translations_input]
  markings: [update_markings_input]
}

input update_markings_groups_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  name: String
  languages_code: update_languages_input
  markings_groups_id: update_markings_groups_input
}

input update_markings_input {
  show_on_label_list: Boolean

  """Invertiere die Hintergrundfarbe, wenn kein Bild vorhanden ist."""
  invert_background_color: Boolean

  """Keinen Rand verwenden"""
  hide_border: Boolean
  show_on_card: Boolean
  sort: Int
  status: String

  """
  Falls das Bild transparenten Hintergrund hat, kann hier die Hintergrundfarbe gesetzt werden.
  """
  background_color: String

  """Kürzel, welches Nutzern angezeigt werden soll"""
  short_code: String
  image_thumb_hash: String

  """
  Falls kein Bild hochgeladen wurde, kann auch auf ein Bild von einer anderen Seite angezeigt werden.
  """
  image_remote_url: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  external_identifier: String

  """Interne Bezeichnung - Nicht sichtbar für Nutzer"""
  alias: String
  date_created: Date
  date_updated: Date
  image: update_directus_files_input
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  group: update_markings_groups_input
  id: ID
  excluded_by_markings: [update_markings_exclusions_input]
  translations: [update_markings_translations_input]
}

input update_markings_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  description: String
  name: String
  languages_code: update_languages_input
  markings_id: update_markings_input
}

input update_news_input {
  sort: Int
  categories: JSON
  url: String
  status: String
  image_thumb_hash: String
  image_remote_url: String
  external_identifier: String
  alias: String
  date: Date
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  image: update_directus_files_input
  id: ID
  translations: [update_news_translations_input]
}

input update_news_translations_input {
  be_source_for_translations: Boolean
  let_be_translated: Boolean
  id: ID
  content: String
  title: String
  languages_code: update_languages_input
  news_id: update_news_input
}

input update_popup_events_canteens_input {
  id: ID
  popup_events_id: update_popup_events_input
  canteens_id: update_canteens_input
}

input update_popup_events_input {
  show_on_android: Boolean
  show_on_ios: Boolean
  show_on_web: Boolean
  send_notification: Boolean
  sort: Int
  status: String
  image_thumb_hash: String

  """Alternativ angezeigt, falls kein Bild verwendet hochgeladen wurde"""
  image_remote_url: String
  alias: String

  """* Muss gesetzt sein"""
  date_start: Date

  """Falls ein Event nur bis zu einem bestimmten Zeitpunkt gültig ist."""
  date_end: Date
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  image: update_directus_files_input
  id: ID
  canteens: [update_popup_events_canteens_input]
  translations: [update_popup_events_translations_input]
}

input update_popup_events_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  content: String
  title: String
  languages_code: update_languages_input
  popup_events_id: update_popup_events_input
}

input update_profiles_buildings_favorites_input {
  id: ID
  profiles_id: update_profiles_input
  buildings_id: update_buildings_input
}

input update_profiles_buildings_last_opened_input {
  id: ID
  profiles_id: update_profiles_input
  buildings_id: update_buildings_input
}

input update_profiles_input {
  notifiy_on_free_apartments: Boolean
  sort: Int
  course_timetable: JSON
  avatar: JSON
  credit_balance: Float
  credit_balance_last_transaction: Float
  status: String
  price_group: String
  nickname: String
  language: update_languages_input
  credit_balance_date_updated: Date
  date_privacy_policy_accepted: Date
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  canteen: update_canteens_input
  markings: [update_profiles_markings_input]
  buildings_favorites: [update_profiles_buildings_favorites_input]
  buildings_last_opened: [update_profiles_buildings_last_opened_input]
  devices: [update_devices_input]
  foods_feedbacks: [update_foods_feedbacks_input]
}

input update_profiles_markings_input {
  dislike: Boolean
  like: Boolean
  id: ID
  profiles_id: update_profiles_input
  markings_id: update_markings_input
}

input update_push_notifications_input {
  ios_play_sound: Boolean
  ios_badge_count: Int
  message_ttl: Int
  sort: Int
  message_data: JSON
  status_log: String

  """
  Format: ExponentPushToken[xxxxxxxxxxxxxxxxx] with prefix and brackets, then press enter for more
  """
  expo_push_tokens: JSON
  message_title: String
  message_body: String
  ios_message_subtitle: String
  expo_access_token: String
  android_channel_id: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
}

input update_report_recipients_input {
  sort: Int
  mail: String
  name: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
}

input update_utilizations_entries_input {
  value_real: Int
  sort: Int
  value_forecast_current: Int
  status: String
  date_end: Date
  date_updated: Date
  date_created: Date
  date_start: Date
  utilization_group: update_utilizations_groups_input
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
}

input update_utilizations_groups_input {
  sort: Int
  threshold_until_low: Int
  threshold_until_medium: Int
  threshold_until_max: Int
  all_time_high: Int
  threshold_until_high: Int
  status: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
  utilization_entries: [update_utilizations_entries_input]
}

input update_washingmachines_input {
  sort: Int
  status: String
  external_identifier: String
  alias: String
  date_stated: Date
  date_finished: Date
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  id: ID
  user_created: update_directus_users_input
  apartment: update_apartments_input
}

input update_washingmachines_jobs_input {
  sort: Int
  duration_in_minutes_rounded_10min_calculated: Int
  duration_in_minutes_calculated: Int
  status: String
  duration_calculated: Date
  date_end: Date
  date_start: Date
  date_updated: Date
  user_updated: update_directus_users_input
  washingmachine: update_washingmachines_input
  date_created: Date
  id: ID
  user_created: update_directus_users_input
  apartment: update_apartments_input
}

input update_wikis_directus_roles_input {
  id: ID
  wikis_id: update_wikis_input
  directus_roles_id: update_directus_roles_input
}

input update_wikis_input {
  public: Boolean
  show_in_drawer: Boolean
  show_in_drawer_as_bottom_item: Boolean
  position: Int
  sort: Int
  color: String
  url: String
  status: String

  """Icon from: https://icons.expo.fyi/Index"""
  icon: String
  custom_id: String
  alias: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  parent: update_wikis_input
  id: ID
  roles_required: [update_wikis_directus_roles_input]
  children: [update_wikis_input]
  translations: [update_wikis_translations_input]
}

input update_wikis_translations_input {
  let_be_translated: Boolean
  be_source_for_translations: Boolean
  id: ID
  content: String
  title: String
  languages_code: update_languages_input
  wikis_id: update_wikis_input
}

input update_workflows_input {
  enabled: Boolean
  sort: Int
  id: ID
  alias: String
  status: String
  date_updated: Date
  date_created: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  workflows_runs: [update_workflows_runs_input]
}

input update_workflows_runs_input {
  sort: Int
  runtime_in_seconds: Int
  log: String
  output: String
  input: String
  result_hash: String
  alias: String
  state: String
  workflow: update_workflows_input
  status: String
  date_finished: Date
  date_updated: Date
  date_created: Date
  date_started: Date
  user_updated: update_directus_users_input
  user_created: update_directus_users_input
  id: ID
}

input utilizations_entries_filter {
  value_real: number_filter_operators
  sort: number_filter_operators
  value_forecast_current: number_filter_operators
  status: string_filter_operators
  date_end: date_filter_operators
  date_end_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_start: date_filter_operators
  date_start_func: datetime_function_filter_operators
  utilization_group: utilizations_groups_filter
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [utilizations_entries_filter]
  _or: [utilizations_entries_filter]
}

input utilizations_groups_filter {
  sort: number_filter_operators
  threshold_until_low: number_filter_operators
  threshold_until_medium: number_filter_operators
  threshold_until_max: number_filter_operators
  all_time_high: number_filter_operators
  threshold_until_high: number_filter_operators
  status: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  utilization_entries: utilizations_entries_filter
  utilization_entries_func: count_function_filter_operators
  _and: [utilizations_groups_filter]
  _or: [utilizations_groups_filter]
}

input washingmachines_filter {
  sort: number_filter_operators
  status: string_filter_operators
  external_identifier: string_filter_operators
  alias: string_filter_operators
  date_stated: date_filter_operators
  date_stated_func: datetime_function_filter_operators
  date_finished: date_filter_operators
  date_finished_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  id: string_filter_operators
  user_created: directus_users_filter
  apartment: apartments_filter
  _and: [washingmachines_filter]
  _or: [washingmachines_filter]
}

input washingmachines_jobs_filter {
  sort: number_filter_operators
  duration_in_minutes_rounded_10min_calculated: number_filter_operators
  duration_in_minutes_calculated: number_filter_operators
  status: string_filter_operators
  duration_calculated: date_filter_operators
  duration_calculated_func: time_function_filter_operators
  date_end: date_filter_operators
  date_end_func: datetime_function_filter_operators
  date_start: date_filter_operators
  date_start_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  washingmachine: washingmachines_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: string_filter_operators
  user_created: directus_users_filter
  apartment: apartments_filter
  _and: [washingmachines_jobs_filter]
  _or: [washingmachines_jobs_filter]
}

input wikis_directus_roles_filter {
  id: number_filter_operators
  wikis_id: wikis_filter
  directus_roles_id: directus_roles_filter
  _and: [wikis_directus_roles_filter]
  _or: [wikis_directus_roles_filter]
}

input wikis_filter {
  public: boolean_filter_operators
  show_in_drawer: boolean_filter_operators
  show_in_drawer_as_bottom_item: boolean_filter_operators
  position: number_filter_operators
  sort: number_filter_operators
  color: string_filter_operators
  url: string_filter_operators
  status: string_filter_operators
  icon: string_filter_operators
  custom_id: string_filter_operators
  alias: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  parent: wikis_filter
  id: string_filter_operators
  roles_required: wikis_directus_roles_filter
  roles_required_func: count_function_filter_operators
  children: wikis_filter
  children_func: count_function_filter_operators
  translations: wikis_translations_filter
  translations_func: count_function_filter_operators
  _and: [wikis_filter]
  _or: [wikis_filter]
}

input wikis_translations_filter {
  let_be_translated: boolean_filter_operators
  be_source_for_translations: boolean_filter_operators
  id: number_filter_operators
  content: string_filter_operators
  title: string_filter_operators
  languages_code: languages_filter
  wikis_id: wikis_filter
  _and: [wikis_translations_filter]
  _or: [wikis_translations_filter]
}

input workflows_filter {
  enabled: boolean_filter_operators
  sort: number_filter_operators
  id: string_filter_operators
  alias: string_filter_operators
  status: string_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  workflows_runs: workflows_runs_filter
  workflows_runs_func: count_function_filter_operators
  _and: [workflows_filter]
  _or: [workflows_filter]
}

input workflows_runs_filter {
  sort: number_filter_operators
  runtime_in_seconds: number_filter_operators
  log: string_filter_operators
  output: string_filter_operators
  input: string_filter_operators
  result_hash: string_filter_operators
  alias: string_filter_operators
  state: string_filter_operators
  workflow: workflows_filter
  status: string_filter_operators
  date_finished: date_filter_operators
  date_finished_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_started: date_filter_operators
  date_started_func: datetime_function_filter_operators
  user_updated: directus_users_filter
  user_created: directus_users_filter
  id: string_filter_operators
  _and: [workflows_runs_filter]
  _or: [workflows_runs_filter]
}