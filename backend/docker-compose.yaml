version: '3.8'

services:
  # The Directus backend
  rocket-meals-directus:
    build:
      context: ./
    #container_name: "rocket-meals-directus" # "replicas" is ignored if you name your container using container_name: myname
    restart: ${RESTART}
    deploy:
      mode: replicated
      replicas: ${DIRECTUS_REPLICAS:-1}  # Default to 1 if DIRECTUS_REPLICAS is not set
      endpoint_mode: vip # Virtual IP - https://docs.docker.com/compose/compose-file/deploy/#endpoint_mode
    networks:
      - traefik
      - directus_network
    labels:
      traefik.enable: "true"
      traefik.docker.network: traefik
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https

      traefik.http.routers.rocket-meals-backend.entrypoints: web
      traefik.http.routers.rocket-meals-backend.rule: Host(`${MYHOST}`) && PathPrefix(`/backend`)
      traefik.http.routers.rocket-meals-backend.middlewares: https-redirect

      traefik.http.routers.rocket-meals-directus-secure.entrypoints: websecure
      traefik.http.routers.rocket-meals-directus-secure.rule: Host(`${MYHOST}`) && PathPrefix(`/${ROCKET_MEALS_PATH}/${ROCKET_MEALS_BACKEND_PATH}`)
      traefik.http.routers.rocket-meals-directus-secure.middlewares: rocket-meals-directus-stripprefix
      traefik.http.routers.rocket-meals-directus-secure.tls: "true"
      traefik.http.routers.rocket-meals-directus-secure.tls.certresolver: "${RESOLVER}"
      traefik.http.services.rocket-meals-directus-secure.loadbalancer.server.port: ${DIRECTUS_PORT}
      traefik.http.middlewares.rocket-meals-directus-stripprefix.stripprefix.prefixes: /${ROCKET_MEALS_PATH}/${ROCKET_MEALS_BACKEND_PATH}

      # network: traefik

    volumes:
      # By default, uploads are stored in /directus/uploads
      # Always make sure your volumes matches the storage root when using
      # local driver
      - ./Backend/uploads:/directus/uploads
      # Make sure to also mount the volume when using SQLite
      - ./Backend/database:/directus/database
      # If you want to load extensions from the host
      - ./Backend/directusExtensions:/directus/extensions
      # directus-auto-translation api key path
      - ${SECRETS_FOLDER_PATH}:/directus/secrets
      # TL1 food plan
      - ${FOOD_SYNC_TL1FILE_EXPORT_CSV_FILE_PATH}:/directus/tl1/foodPlan.csv
      # TL1 markings
      - ${MARKING_SYNC_TL1FILE_EXPORT_CSV_FILE_PATH}:/directus/tl1/markings.csv
    environment:
      # Traefik configuration
      PUBLIC_URL: "https://${MYHOST}/${ROCKET_MEALS_PATH}/${ROCKET_MEALS_BACKEND_PATH}"
      ROOT_REDIRECT: "./${ROCKET_MEALS_BACKEND_PATH}/admin"
      # Directus default configuration
      HOST: "0.0.0.0" # To bind to all interfaces for Docker
      PORT: "${DIRECTUS_PORT}"
      TZ: "Europe/Berlin"
      ACCESS_TOKEN_TTL: "15m" # Time to live for the access token
      REFRESH_TOKEN_TTL: "180d" # Time to live for the refresh token
      NODE_TLS_REJECT_UNAUTHORIZED: 0 # The HTTPS cert is not complete: "unable to verify the first certificate"
      MAX_PAYLOAD_SIZE: "80mb"
      CORS_ENABLED: "true" # Enable CORS - which means that the frontend does not have to be on the same domain
      CORS_ORIGIN: "true" # Allow all origins - which means that the frontend does not have to be on the same domain
      REFRESH_TOKEN_COOKIE_SAME_SITE: "lax" # "lax" means that the cookie is sent with same-site requests, and with cross-site top-level navigations
      # Directus cache configuration
      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: 'true' # Purge when change in tables detected - https://docs.directus.io/self-hosted/config-options.html#cache
      CACHE_TTL: "5m" # Cache time to live - aka. how long the cache is valid
      CACHE_STORE: "redis"
      REDIS: "redis://rocket-meals-cache:6379" # For Cache and Synchronization of Replicas # Required for Replicas to work - Directus communicates which replica is the master
      # Directus synchronization configuration
      SYNCHRONIZATION_STORE: "redis" # Multiple instances of Directus need to communicate with each other to not trigger the same event multiple times - https://docs.directus.io/self-hosted/config-options.html#synchronization


      # Rocket Meals configuration - Food
      FOOD_SYNC_MODE: "${FOOD_SYNC_MODE}"
      FOOD_SYNC_TL1FILE_EXPORT_CSV_FILE_PATH: "${FOOD_SYNC_TL1FILE_EXPORT_CSV_FILE_PATH}" # So in directus we know if the host system has a file to sync, but we will use the directus internal file path: /directus/tl1/foodPlan.csv
      FOOD_SYNC_TL1FILE_EXPORT_CSV_FILE_ENCODING: "${FOOD_SYNC_TL1FILE_EXPORT_CSV_FILE_ENCODING}"
      FOOD_SYNC_TL1WEB_EXPORT_URL: "${FOOD_SYNC_TL1WEB_EXPORT_URL}"
      FOOD_SYNC_SWOSY_API_SERVER_URL: "${FOOD_SYNC_SWOSY_API_SERVER_URL}" # If the system relies on a swosy api server. # TODO: Remove when all systems are migrated to the new system
      FOOD_IMAGE_SYNC_ON_STARTUP_FROM_SWOSY: "${FOOD_IMAGE_SYNC_ON_STARTUP_FROM_SWOSY}" # If the system should sync images from swosy. Swosy api server is needed for this

      # Rocket Meals configuration - Markings
      MARKING_SYNC_MODE: "${MARKING_SYNC_MODE}"
      MARKING_SYNC_TL1FILE_EXPORT_CSV_FILE_PATH: "${MARKING_SYNC_TL1FILE_EXPORT_CSV_FILE_PATH}" # So in directus we know if the host system has a file to sync, but we will use the directus internal file path: /directus/tl1/markings.csv
      MARKING_SYNC_TL1FILE_EXPORT_CSV_FILE_ENCODING: "${MARKING_SYNC_TL1FILE_EXPORT_CSV_FILE_ENCODING}"


      # Directus Database configuration
      KEY: "${DATABASE_KEY}"
      SECRET: "${DATABASE_SECRET}"
      DB_CLIENT: 'sqlite3' # https://docs.directus.io/configuration/config-options/
      DB_FILENAME: './database/data.db'
      #DB_HOST: 'database' #Required when using pg, mysql, oracledb, or mssql
      #DB_PORT: '5432'
      #DB_DATABASE: 'directus'
      #DB_USER: 'directus'
      #DB_PASSWORD: 'directus'

      # Directus Admin user
      ADMIN_EMAIL: "${ADMIN_EMAIL}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"


      # Directus Email configuration
      #EMAIL_VERIFY_SETUP: "${EMAIL_VERIFY_SETUP}"
      #EMAIL_FROM: "${EMAIL_FROM}"
      #EMAIL_TRANSPORT: "${EMAIL_TRANSPORT}"
      #EMAIL_SMTP_HOST: "${EMAIL_SMTP_HOST}"
      #EMAIL_SMTP_PORT: "${EMAIL_SMTP_PORT}"
      #EMAIL_SMTP_USER: "${EMAIL_SMTP_USER}"
      #EMAIL_SMTP_PASSWORD: "${EMAIL_SMTP_PASSWORD}"
      #EMAIL_SMTP_POOL: ""
      #EMAIL_SMTP_SECURE: "true"
      #EMAIL_SMTP_IGNORE_TLS: "true"



      # Directus Auth configuration
      AUTH_PROVIDERS: "${AUTH_PROVIDERS}"

      # Directus Auth configuration - Apple predefined values
      AUTH_APPLE_DRIVER: "openid"
      AUTH_APPLE_MODE: "session"
      AUTH_APPLE_CLIENT_ID: "${AUTH_APPLE_CLIENT_ID}"
      AUTH_APPLE_CLIENT_SECRET: "${AUTH_APPLE_CLIENT_SECRET}"
      AUTH_APPLE_DEFAULT_ROLE_ID: "${DEFAULT_ROLE_ID}" #If you want to set a default role id
      AUTH_APPLE_ICON: "apple"
      AUTH_APPLE_LABEL: "Apple"
      AUTH_APPLE_ALLOW_PUBLIC_REGISTRATION: "true"
      AUTH_APPLE_ISSUER_URL: "https://appleid.apple.com/.well-known/openid-configuration"
      AUTH_APPLE_SCOPE: "name email" # We sadly only get the email and name on the first login - https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_js/configuring_your_webpage_for_sign_in_with_apple
      AUTH_APPLE_IDENTIFIER_KEY: "sub" # The key in the response that identifies the user
      AUTH_APPLE_PARAMS: '{"response_mode":"form_post"}'

      # Directus Auth configuration - Google predefined values
      AUTH_GOOGLE_DRIVER: "openid"
      AUTH_GOOGLE_MODE: "session"
      AUTH_GOOGLE_CLIENT_ID: "${AUTH_GOOGLE_CLIENT_ID}"
      AUTH_GOOGLE_CLIENT_SECRET: "${AUTH_GOOGLE_CLIENT_SECRET}"
      AUTH_GOOGLE_DEFAULT_ROLE_ID: "${DEFAULT_ROLE_ID}"
      AUTH_GOOGLE_ICON: "google"
      AUTH_GOOGLE_LABEL: "Google"
      AUTH_GOOGLE_ALLOW_PUBLIC_REGISTRATION: "true"
      AUTH_GOOGLE_ISSUER_URL: "https://accounts.google.com/.well-known/openid-configuration"
      AUTH_GOOGLE_IDENTIFIER_KEY: "sub" # The key in the response that identifies the user


      # directus-auto-translation
      AUTO_TRANSLATE_API_KEY_SAVING_PATH: "/directus/secrets/auto-translation-api-key.txt" # Required for the auto translation plugin -  fix to the directus volume


  # The cache service for Directus
  rocket-meals-cache:
    restart: ${RESTART}
    image: redis:6.2.6
    networks:
      - directus_network

networks:
  directus_network: {}
  traefik:
    external: true
    name: traefik
