{
  "private": true,
  "name": "rocketmeals",
  "version": "1.0.0",
  "homepageProduction": "https://rocket-meals.github.io/rocket-meals/",
  "homepage": "./",
  "forLocalDevelopmentChangeHomepageTo": "./",
  "config": {
    "codepush_ios": "FireboltCasters/RocketMealsDemo-iOS",
    "codepush_android": "FireboltCasters/RocketMealsDemo-Android"
  },
  "scripts": {
    "start": "react-native start",
    "preandroid": "npm run prebuild",
    "android": "npm run prebuild && cd ./android && ./gradlew clean && cd .. && react-native run-android",
    "android:build": "cd ./android && ./gradlew clean && ./gradlew assembleRelease && cd .. && cp ./android/app/build/outputs/apk/release/app-release.apk ./app-release.apk",
    "android:release": "npm run prebuild && react-native run-android --variant=release",
    "deploy:android": "npm run prebuild && appcenter codepush release-react -a ${npm_package_config_codepush_android} -m -t '*'",
    "deploy:android:ci": "npm run prebuild && appcenter codepush release-react --token ${CODEPUSH_TOKEN_ANDROID} -a ${npm_package_config_codepush_android} -m -t '*'",
    "pod": "cd ios && pod install && cd ..",
    "preios": "npm run pod && npm run prebuild",
    "ios": "react-native run-ios",
    "deploy:ios": "npm run pod && npm run prebuild && appcenter codepush release-react -a ${npm_package_config_codepush_ios} --plist-file ./ios/KitchenSinkappnativebase/Info.plist -m -t '*'",
    "deploy:ios:ci": "npm run pod && npm run prebuild && appcenter codepush release-react --token ${CODEPUSH_TOKEN_IOS} -a ${npm_package_config_codepush_ios} --plist-file ./ios/KitchenSinkappnativebase/Info.plist -m -t '*'",
    "deploy:native": "npm run deploy:android && npm run deploy:ios",
    "deploy:native:ci": "npm run deploy:android:ci && npm run deploy:ios:ci",
    "preweb": "npm run prebuild",
    "web": "expo start --web",
    "prebuild:web": "npm run prebuild",
    "build:web": "expo build:web --no-pwa --clear --dev",
    "prebuild:web:pwa": "npm run prebuild",
    "build:web:pwa": "expo build:web",
    "predeploy:web:local": "npm run build:web",
    "deploy:web:local": "npm run serve:web:local",
    "serve:web:local": "npx serve web-build --cors --single",
    "deployghpages": "npm run build:web && gh-pages -d web-build",
    "iconGenerate": "app-icon generate --platforms=android,ios -i ./assets/icon.png",
    "prebuild": "npm run licenseSummary && bash ./scriptsHelper/fix-for-web.sh",
    "licenseSummary": "npx license-checker --production --json --summary --direct --out thirdpartyLicense.json",
    "codepushkeys:ios": "appcenter codepush deployment list --app ${npm_package_config_codepush_ios} -k && echo 'Keys above for iOS ! Paste these in config.json'",
    "codepushgittoken:ios": "appcenter tokens create -d \"${npm_package_config_codepush_ios}\" && echo 'Add the API Token to your Git Secrets as: CODEPUSH_TOKEN_IOS'",
    "codepushkeys:android": "appcenter codepush deployment list --app ${npm_package_config_codepush_android} -k && echo 'Keys above for Android ! Paste these in config.json'",
    "codepushgittoken:android": "appcenter tokens create -d \"${npm_package_config_codepush_android}\" && echo 'Add the API Token to your Git Secrets as: CODEPUSH_TOKEN_ANDROID'",
    "codepushkeys": "npm run codepushkeys:ios && npm run codepushkeys:android",
    "codepushgittoken": "npm run codepushgittoken:ios && npm run codepushgittoken:android",
    "postinstall": "patch-package"
  },
  "dependencies": {
    "@dicebear/adventurer": "^4.0.0",
    "@dicebear/adventurer-neutral": "^4.0.0",
    "@dicebear/avatars": "^4.0.0",
    "@dicebear/avatars-avataaars-sprites": "^4.0.0",
    "@dicebear/avatars-bottts-sprites": "^4.0.0",
    "@dicebear/avatars-identicon-sprites": "^4.0.0",
    "@dicebear/avatars-initials-sprites": "^4.0.0",
    "@dicebear/big-ears": "^4.0.0",
    "@dicebear/big-ears-neutral": "^4.0.0",
    "@dicebear/big-smile": "^4.0.0",
    "@dicebear/croodles": "^4.0.0",
    "@dicebear/croodles-neutral": "^4.0.0",
    "@dicebear/micah": "^4.0.0",
    "@dicebear/miniavs": "^4.0.0",
    "@dicebear/open-peeps": "^4.0.0",
    "@dicebear/personas": "^4.0.0",
    "@dicebear/pixel-art": "^4.0.0",
    "@dicebear/pixel-art-neutral": "^4.0.0",
    "@fingerprintjs/fingerprintjs": "^3.3.6",
    "@react-native-async-storage/async-storage": "^1.17.3",
    "@react-native-community/masked-view": "0.1.10",
    "@react-navigation/drawer": "^5.0.0",
    "@react-navigation/native": "^5.9.4",
    "@react-navigation/stack": "^5.14.5",
    "@types/axios": "^0.14.0",
    "@types/node": "^11.15.35",
    "@types/react": "^16.9.55",
    "@types/react-dom": "^16.9.9",
    "@unimodules/core": "~7.2.0",
    "await-lock": "^2.2.2",
    "axios": "^0.21.4",
    "base-64": "^1.0.0",
    "ci": "^2.1.1",
    "cross-env": "^7.0.3",
    "cssom": "^0.5.0",
    "csv": "^5.5.0",
    "easy-peasy": "^5.0.4",
    "expo": "~40.0.0",
    "expo-asset": "~8.2.1",
    "expo-cli": "^4.11.0",
    "expo-clipboard": "~1.0.1",
    "expo-file-system": "~9.3.0",
    "expo-image-picker": "~10.0.0",
    "expo-intent-launcher": "~8.4.0",
    "expo-leaflet": "^1.0.2",
    "expo-linear-gradient": "^9.1.0",
    "expo-localization": "~9.1.0",
    "expo-notifications": "~0.8.2",
    "expo-sharing": "~8.5.0",
    "expo-splash-screen": "~0.8.0",
    "expo-status-bar": "~1.0.3",
    "expo-updates": "~0.4.0",
    "favicons": "^6.2.0",
    "file-loader": "^6.2.0",
    "gh-pages": "^4.0.0",
    "js-cookie": "^3.0.1",
    "jspdf": "^2.3.1",
    "jspdf-autotable": "^3.5.14",
    "leaflet": "^1.8.0",
    "lodash": "^4.17.21",
    "lorem-ipsum": "^2.0.4",
    "lottie-ios": "^3.4.0",
    "lottie-react": "^2.2.1",
    "lottie-react-native": "^5.0.1",
    "native-base": "^3.3.0",
    "patch-package": "^7.0.0",
    "react": "16.13.1",
    "react-dom": "^16.13.1",
    "react-measure": "^2.5.2",
    "react-native": "~0.63.4",
    "react-native-calendar-timetable": "^0.4.8",
    "react-native-code-push": "^6.2.1",
    "react-native-color": "^0.0.10",
    "react-native-device-info": "^8.7.1",
    "react-native-gesture-handler": "~1.8.0",
    "react-native-image-zoom-viewer-fixed": "^3.2.5",
    "react-native-localize": "^2.2.3",
    "react-native-markdown-display": "^7.0.0-alpha.2",
    "react-native-nfc-manager": "^3.13.5",
    "react-native-nfc-manager-sw-os": "^0.0.6",
    "react-native-open-maps": "^0.4.0",
    "react-native-reanimated": "~1.13.0",
    "react-native-render-html": "^6.3.4",
    "react-native-safe-area-context": "3.1.9",
    "react-native-screens": "~2.15.2",
    "react-native-svg": "^12.5.0",
    "react-native-unimodules": "~0.12.0",
    "react-native-web": "~0.13.12",
    "react-native-web-webview": "^1.0.2",
    "react-native-webview": "11.0.0",
    "react-router-dom": "^5.3.0",
    "react-signature-canvas": "^1.0.3",
    "react-transition-group": "^4.4.2",
    "regenerator-runtime": "^0.10.5",
    "sass-loader": "^7.1.0",
    "serve": "^12.0.1",
    "studip-api": "^1.0.9",
    "styled-components": "^5.3.0",
    "styled-system": "^5.1.5",
    "svg-inline-react": "^3.2.1",
    "sync-storage": "^0.4.2",
    "tinycolor2": "^1.4.2",
    "ts-keyof": "^1.3.0",
    "typescript": "^4.1.3",
    "universal-cookie": "^4.0.4",
    "webpack": "^4.43.0"
  },
  "devDependencies": {
    "@commitlint/config-conventional": "^11.0.0",
    "@directus/sdk": "^10.0.0",
    "@react-native-community/eslint-config": "^2.0.0",
    "@release-it/conventional-changelog": "^2.0.0",
    "@types/jest": "^26.0.0",
    "@types/react": "~16.9.35",
    "@types/react-native": "~0.63.2",
    "app-icon": "^0.13.2",
    "commitlint": "^11.0.0",
    "eslint": "^7.2.0",
    "eslint-config-prettier": "^7.0.0",
    "eslint-plugin-prettier": "^3.1.3",
    "husky": "^6.0.0",
    "i": "^0.3.7",
    "jest": "^26.0.1",
    "npm": "^6.14.18",
    "pod-install": "^0.1.0",
    "prettier": "^2.0.5",
    "react": "16.13.1",
    "react-native": "~0.63.4",
    "react-native-builder-bob": "^0.18.0",
    "release-it": "^14.2.2",
    "typescript": "^4.1.3"
  },
  "overrides": {
    "myComment": "A workaround for react version clash but still works: https://docs.npmjs.com/cli/v8/configuring-npm/package-json#overrides",
    "react-native-calendar-timetable": {
      "react": "$react",
      "react-dom": "$react-dom"
    }
  }
}
